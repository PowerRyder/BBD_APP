{
	"id": "1de2896d2a1f1b2fde90b5997cebf8c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/assets/BBD_Token.sol": {
				"content": "//SPDX-License-Identifier: None\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\r\n\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Context.sol\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\r\n\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(\r\n        address sender,\r\n        uint256 balance,\r\n        uint256 needed\r\n    );\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(\r\n        address spender,\r\n        uint256 allowance,\r\n        uint256 needed\r\n    );\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(\r\n        address sender,\r\n        uint256 balance,\r\n        uint256 needed,\r\n        uint256 tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\r\n\r\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC-20\r\n * applications.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256))\r\n        private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * Both values are immutable: they can only be set once during construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\r\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        _beforeTokenTransfer(from, to, value);\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     *\r\n     * ```solidity\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        bool emitEvent\r\n    ) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 value\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance < type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(\r\n                    spender,\r\n                    currentAllowance,\r\n                    value\r\n                );\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ncontract BBDToken is ERC20 {\r\n    uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18;\r\n    uint256 public constant PUBLIC_SUPPLY = 1_000_000_000 * 1e18;\r\n    uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY;\r\n\r\n    uint256 public immutable startTimestamp;\r\n    uint256 public lastUnlockMonth;\r\n    uint256 public totalUnlocked;\r\n\r\n    address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2;\r\n    address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357;\r\n    address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE;\r\n    address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74;\r\n    address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA;\r\n    address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32;\r\n\r\n    bool public buyingEnabled = true;\r\n    bool public sellingEnabled = true;\r\n\r\n    address _owner;\r\n    mapping(address => bool) public isDex;\r\n    mapping(address => bool) public managers;\r\n\r\n    event TokensUnlocked(\r\n        uint256 month,\r\n        uint256 amountPerWallet,\r\n        uint256 totalUnlocked\r\n    );\r\n\r\n    modifier isOwner() {\r\n        require(_owner == msg.sender, \"Not allowed!\");\r\n        _;\r\n    }\r\n\r\n    constructor() ERC20(\"BBD Token\", \"BBD\") {\r\n        _owner = msg.sender;\r\n        _mint(_owner, PUBLIC_SUPPLY); // 1 billion to owner\r\n        _mint(address(this), LOCKED_SUPPLY); // 9 billion stays locked in contract\r\n\r\n        startTimestamp = block.timestamp;\r\n        lastUnlockMonth = 0;\r\n    }\r\n\r\n    function unlockTokens() external isOwner {\r\n        require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\");\r\n\r\n        uint256 monthsElapsed = (block.timestamp - startTimestamp) / 30 days;\r\n        require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\");\r\n\r\n        uint256 tokensToUnlock = 0;\r\n\r\n        for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {\r\n            if (m <= 3) {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 5) / 1000; // 0.5%\r\n            } else if (m <= 6) {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 1) / 100; // 1%\r\n            } else if (m <= 9) {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 2) / 100; // 2%\r\n            } else {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 3) / 100; // 3%\r\n            }\r\n        }\r\n\r\n        if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {\r\n            tokensToUnlock = LOCKED_SUPPLY - totalUnlocked; // Adjust final unlock if exceeding\r\n        }\r\n\r\n        require(tokensToUnlock > 0, \"Nothing to unlock\");\r\n\r\n        lastUnlockMonth = monthsElapsed;\r\n        totalUnlocked += tokensToUnlock;\r\n\r\n        uint256 share = tokensToUnlock / 6;\r\n\r\n        _transfer(address(this), liquidityListing, share);\r\n        _transfer(address(this), gameTreasury, share);\r\n        _transfer(address(this), marketing, share);\r\n        _transfer(address(this), stakingReward, share);\r\n        _transfer(address(this), referralBonus, share);\r\n        _transfer(address(this), awardBonus, share);\r\n\r\n        emit TokensUnlocked(lastUnlockMonth, share, totalUnlocked);\r\n    }\r\n\r\n    function updateDistributionAddress(\r\n        uint256 index,\r\n        address newAddress\r\n    ) external isOwner {\r\n        require(index >= 1 && index <= 6, \"Invalid index\");\r\n\r\n        if (index == 1) liquidityListing = newAddress;\r\n        else if (index == 2) gameTreasury = newAddress;\r\n        else if (index == 3) marketing = newAddress;\r\n        else if (index == 4) stakingReward = newAddress;\r\n        else if (index == 5) referralBonus = newAddress;\r\n        else if (index == 6) awardBonus = newAddress;\r\n    }\r\n\r\n    function getNextUnlockInfo()\r\n        external\r\n        view\r\n        returns (uint256 month, uint256 amountTotal, uint256 perWallet)\r\n    {\r\n        uint256 m = lastUnlockMonth + 1;\r\n\r\n        if (m <= 3) {\r\n            amountTotal = (LOCKED_SUPPLY * 5) / 1000;\r\n        } else if (m <= 6) {\r\n            amountTotal = (LOCKED_SUPPLY * 1) / 100;\r\n        } else if (m <= 9) {\r\n            amountTotal = (LOCKED_SUPPLY * 2) / 100;\r\n        } else {\r\n            amountTotal = (LOCKED_SUPPLY * 3) / 100;\r\n        }\r\n\r\n        if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {\r\n            amountTotal = LOCKED_SUPPLY - totalUnlocked;\r\n        }\r\n\r\n        return (m, amountTotal, amountTotal / 6);\r\n    }\r\n\r\n    modifier canTransfer(address sender, address recipient) {\r\n        // If buying is disabled, users cannot receive tokens from DEX addresses\r\n        if (isDex[sender] && !buyingEnabled) {\r\n            require(\r\n                recipient == _owner || managers[recipient],\r\n                \"Buying is disabled\"\r\n            );\r\n        }\r\n        // If selling is disabled, users cannot send tokens to DEX addresses\r\n        if (isDex[recipient] && !sellingEnabled) {\r\n            require(\r\n                sender == _owner || managers[sender],\r\n                \"Selling is disabled\"\r\n            );\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setManager(address manager, bool status) external isOwner {\r\n        managers[manager] = status;\r\n    }\r\n\r\n    function setBuyingEnabled(bool _enabled) external isOwner {\r\n        buyingEnabled = _enabled;\r\n    }\r\n\r\n    function setSellingEnabled(bool _enabled) external isOwner {\r\n        sellingEnabled = _enabled;\r\n    }\r\n\r\n    function setDexAddress(address dexAddress, bool status) external isOwner {\r\n        isDex[dexAddress] = status;\r\n    }\r\n\r\n    // Override transfer function to include buying and selling control\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override canTransfer(from, to) {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/assets/BBD_Token.sol": {
				"BBDToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPerWallet",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUnlocked",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LOCKED_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "awardBonus",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextUnlockInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTotal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "perWallet",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isDex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUnlockMonth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityListing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "managers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referralBonus",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setBuyingEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dexAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setDexAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setSellingEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingReward",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUnlocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "updateDistributionAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/assets/BBD_Token.sol\":22875:28679  contract BBDToken is ERC20 {... */\n  mstore(0x40, 0xa0)\n    /* \"src/assets/BBD_Token.sol\":23240:23316  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  0x07\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"src/assets/BBD_Token.sol\":23274:23316  0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  0x7ec13697d98925ba1dc2bcc705c071bd168b10c2\n    /* \"src/assets/BBD_Token.sol\":23240:23316  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/assets/BBD_Token.sol\":23323:23395  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  0x08\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":23353:23395  0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  0x8de119e98707ac240aba2cb77e83b29882a34357\n    /* \"src/assets/BBD_Token.sol\":23323:23395  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":23402:23471  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  0x09\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":23429:23471  0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  0x03499c18f7265be9afda16504a34cd1892f278ae\n    /* \"src/assets/BBD_Token.sol\":23402:23471  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":23478:23551  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  0x0a\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":23509:23551  0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  0xcc234a1d3e32148461b7eacb5a8bf4d0c4b6be74\n    /* \"src/assets/BBD_Token.sol\":23478:23551  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":23558:23631  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  0x0b\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"src/assets/BBD_Token.sol\":23589:23631  0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  0xceea0e87b553bc445c5eb2242b5f28cd81b4acaa\n    /* \"src/assets/BBD_Token.sol\":23558:23631  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":23638:23708  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n  0x0c\n  dup1\n  sload\n    /* \"src/assets/BBD_Token.sol\":23756:23789  bool public sellingEnabled = true */\n  0x01017e23e2781a1da5dace87b4f0e7bf68191263fc32\n  not(sub(shl(0xb0, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":24141:24439  constructor() ERC20(\"BBD Token\", \"BBD\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/assets/BBD_Token.sol\":12890:13006  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x212122102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x109091)\n  dup2\n  mstore\n  pop\n    /* \"src/assets/BBD_Token.sol\":12965:12970  name_ */\n  dup2\n    /* \"src/assets/BBD_Token.sol\":12957:12962  _name */\n  0x03\n    /* \"src/assets/BBD_Token.sol\":12957:12970  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"src/assets/BBD_Token.sol\":12981:12988  _symbol */\n  0x04\n    /* \"src/assets/BBD_Token.sol\":12981:12998  _symbol = symbol_ */\n  tag_7\n    /* \"src/assets/BBD_Token.sol\":12991:12998  symbol_ */\n  dup3\n    /* \"src/assets/BBD_Token.sol\":12981:12988  _symbol */\n  dup3\n    /* \"src/assets/BBD_Token.sol\":12981:12998  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"src/assets/BBD_Token.sol\":24192:24198  _owner */\n  0x0d\n    /* \"src/assets/BBD_Token.sol\":24192:24211  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/assets/BBD_Token.sol\":24201:24211  msg.sender */\n  caller\n    /* \"src/assets/BBD_Token.sol\":24192:24211  _owner = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/assets/BBD_Token.sol\":24222:24250  _mint(_owner, PUBLIC_SUPPLY) */\n  tag_9\n  swap2\n  pop\n    /* \"src/assets/BBD_Token.sol\":23016:23036  1_000_000_000 * 1e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"src/assets/BBD_Token.sol\":24222:24227  _mint */\n  tag_10\n    /* \"src/assets/BBD_Token.sol\":24222:24250  _mint(_owner, PUBLIC_SUPPLY) */\n  jump\t// in\ntag_9:\n    /* \"src/assets/BBD_Token.sol\":24283:24318  _mint(address(this), LOCKED_SUPPLY) */\n  tag_11\n    /* \"src/assets/BBD_Token.sol\":24297:24301  this */\n  address\n    /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n  tag_12\n    /* \"src/assets/BBD_Token.sol\":23016:23036  1_000_000_000 * 1e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n  0x204fce5e3e25026110000000\n    /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"src/assets/BBD_Token.sol\":24283:24288  _mint */\n  tag_10\n    /* \"src/assets/BBD_Token.sol\":24283:24318  _mint(address(this), LOCKED_SUPPLY) */\n  jump\t// in\ntag_11:\n    /* \"src/assets/BBD_Token.sol\":24386:24401  block.timestamp */\n  timestamp\n    /* \"src/assets/BBD_Token.sol\":24369:24401  startTimestamp = block.timestamp */\n  0x80\n  mstore\n    /* \"src/assets/BBD_Token.sol\":24430:24431  0 */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":24412:24427  lastUnlockMonth */\n  0x05\n    /* \"src/assets/BBD_Token.sol\":24412:24431  lastUnlockMonth = 0 */\n  sstore\n    /* \"src/assets/BBD_Token.sol\":22875:28679  contract BBDToken is ERC20 {... */\n  jump(tag_58)\n    /* \"src/assets/BBD_Token.sol\":19055:19268  function _mint(address account, uint256 value) internal {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":19126:19147  account == address(0) */\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":19122:19215  if (account == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"src/assets/BBD_Token.sol\":19171:19203  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"src/assets/BBD_Token.sol\":19200:19201  0 */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":19171:19203  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3066:3117   */\n  mstore\n    /* \"#utility.yul\":3039:3057   */\n  0x24\n  add\n    /* \"src/assets/BBD_Token.sol\":19171:19203  ERC20InvalidReceiver(address(0)) */\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/assets/BBD_Token.sol\":19122:19215  if (account == address(0)) {... */\ntag_16:\n    /* \"src/assets/BBD_Token.sol\":19225:19260  _update(address(0), account, value) */\n  tag_19\n    /* \"src/assets/BBD_Token.sol\":19241:19242  0 */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":19245:19252  account */\n  dup4\n    /* \"src/assets/BBD_Token.sol\":19254:19259  value */\n  dup4\n    /* \"src/assets/BBD_Token.sol\":19225:19232  _update */\n  tag_20\n    /* \"src/assets/BBD_Token.sol\":19225:19260  _update(address(0), account, value) */\n  jump\t// in\ntag_19:\n    /* \"src/assets/BBD_Token.sol\":19055:19268  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/assets/BBD_Token.sol\":17519:18702  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_20:\n    /* \"src/assets/BBD_Token.sol\":17605:17642  _beforeTokenTransfer(from, to, value) */\n  tag_22\n    /* \"src/assets/BBD_Token.sol\":17626:17630  from */\n  dup4\n    /* \"src/assets/BBD_Token.sol\":17632:17634  to */\n  dup4\n    /* \"src/assets/BBD_Token.sol\":17636:17641  value */\n  dup4\n    /* \"src/assets/BBD_Token.sol\":17605:17625  _beforeTokenTransfer */\n  tag_23\n    /* \"src/assets/BBD_Token.sol\":17605:17642  _beforeTokenTransfer(from, to, value) */\n  jump\t// in\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":17657:17675  from == address(0) */\n  dup4\n  and\n    /* \"src/assets/BBD_Token.sol\":17653:18205  if (from == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"src/assets/BBD_Token.sol\":17811:17816  value */\n  dup1\n    /* \"src/assets/BBD_Token.sol\":17795:17807  _totalSupply */\n  0x02\n  0x00\n    /* \"src/assets/BBD_Token.sol\":17795:17816  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"src/assets/BBD_Token.sol\":17653:18205  if (from == address(0)) {... */\n  tag_27\n  swap1\n  pop\n  jump\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":17871:17886  _balances[from] */\n  dup4\n  and\n    /* \"src/assets/BBD_Token.sol\":17849:17868  uint256 fromBalance */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":17871:17886  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"src/assets/BBD_Token.sol\":17905:17924  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"src/assets/BBD_Token.sol\":17901:18018  if (fromBalance < value) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"src/assets/BBD_Token.sol\":17952:18002  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3478:3510   */\n  dup6\n  and\n    /* \"src/assets/BBD_Token.sol\":17952:18002  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3460:3511   */\n  mstore\n    /* \"#utility.yul\":3527:3545   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3520:3554   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3570:3588   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3563:3597   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3433:3451   */\n  0x64\n  add\n    /* \"src/assets/BBD_Token.sol\":17952:18002  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_17\n    /* \"#utility.yul\":3258:3603   */\n  jump\n    /* \"src/assets/BBD_Token.sol\":17901:18018  if (fromBalance < value) {... */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":18141:18156  _balances[from] */\n  dup5\n  and\n    /* \"src/assets/BBD_Token.sol\":18141:18150  _balances */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":18141:18156  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"src/assets/BBD_Token.sol\":18159:18178  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"src/assets/BBD_Token.sol\":18141:18178  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":17653:18205  if (from == address(0)) {... */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":18221:18237  to == address(0) */\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":18217:18652  if (to == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"src/assets/BBD_Token.sol\":18387:18399  _totalSupply */\n  0x02\n    /* \"src/assets/BBD_Token.sol\":18387:18408  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":18217:18652  if (to == address(0)) {... */\n  jump(tag_32)\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":18603:18616  _balances[to] */\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":18603:18612  _balances */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":18603:18616  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"src/assets/BBD_Token.sol\":18603:18625  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":18217:18652  if (to == address(0)) {... */\ntag_32:\n    /* \"src/assets/BBD_Token.sol\":18684:18686  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n  and\n    /* \"src/assets/BBD_Token.sol\":18678:18682  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"src/assets/BBD_Token.sol\":18688:18693  value */\n  dup4\n    /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n  mload(0x40)\n  tag_33\n  swap2\n    /* \"#utility.yul\":3754:3779   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3742:3744   */\n  0x20\n    /* \"#utility.yul\":3727:3745   */\n  add\n  swap1\n    /* \"#utility.yul\":3608:3785   */\n  jump\n    /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"src/assets/BBD_Token.sol\":17519:18702  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/assets/BBD_Token.sol\":28467:28676  function _beforeTokenTransfer(... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":27446:27459  isDex[sender] */\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"src/assets/BBD_Token.sol\":27446:27451  isDex */\n  0x0e\n    /* \"src/assets/BBD_Token.sol\":27446:27459  isDex[sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"src/assets/BBD_Token.sol\":28603:28607  from */\n  dup4\n  swap1\n    /* \"src/assets/BBD_Token.sol\":28609:28611  to */\n  dup4\n  swap1\n    /* \"src/assets/BBD_Token.sol\":27446:27459  isDex[sender] */\n  0xff\n  and\n    /* \"src/assets/BBD_Token.sol\":27446:27477  isDex[sender] && !buyingEnabled */\n  dup1\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"src/assets/BBD_Token.sol\":27464:27477  buyingEnabled */\n  sload(0x0c)\n  shl(0xa0, 0x01)\n  swap1\n  div\n  0xff\n  and\n    /* \"src/assets/BBD_Token.sol\":27463:27477  !buyingEnabled */\n  iszero\n    /* \"src/assets/BBD_Token.sol\":27446:27477  isDex[sender] && !buyingEnabled */\ntag_36:\n    /* \"src/assets/BBD_Token.sol\":27442:27628  if (isDex[sender] && !buyingEnabled) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"src/assets/BBD_Token.sol\":27533:27539  _owner */\n  sload(0x0d)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":27520:27539  recipient == _owner */\n  dup3\n  dup2\n  and\n    /* \"src/assets/BBD_Token.sol\":27533:27539  _owner */\n  swap2\n  and\n    /* \"src/assets/BBD_Token.sol\":27520:27539  recipient == _owner */\n  eq\n  dup1\n    /* \"src/assets/BBD_Token.sol\":27520:27562  recipient == _owner || managers[recipient] */\n  tag_38\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":27543:27562  managers[recipient] */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"src/assets/BBD_Token.sol\":27543:27551  managers */\n  0x0f\n    /* \"src/assets/BBD_Token.sol\":27543:27562  managers[recipient] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"src/assets/BBD_Token.sol\":27520:27562  recipient == _owner || managers[recipient] */\ntag_38:\n    /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n  tag_39\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3992:3994   */\n  0x20\n    /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3974:3995   */\n  mstore\n    /* \"#utility.yul\":4031:4033   */\n  0x12\n    /* \"#utility.yul\":4011:4029   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4004:4034   */\n  mstore\n  shl(0x72, 0x109d5e5a5b99c81a5cc8191a5cd8589b1959)\n    /* \"#utility.yul\":4050:4068   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4043:4091   */\n  mstore\n    /* \"#utility.yul\":4108:4126   */\n  0x64\n  add\n    /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n  tag_17\n    /* \"#utility.yul\":3790:4132   */\n  jump\n    /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":27720:27736  isDex[recipient] */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"src/assets/BBD_Token.sol\":27720:27725  isDex */\n  0x0e\n    /* \"src/assets/BBD_Token.sol\":27720:27736  isDex[recipient] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"src/assets/BBD_Token.sol\":27720:27755  isDex[recipient] && !sellingEnabled */\n  dup1\n  iszero\n  tag_42\n  jumpi\n  pop\n    /* \"src/assets/BBD_Token.sol\":27741:27755  sellingEnabled */\n  sload(0x0c)\n  shl(0xa8, 0x01)\n  swap1\n  div\n  0xff\n  and\n    /* \"src/assets/BBD_Token.sol\":27740:27755  !sellingEnabled */\n  iszero\n    /* \"src/assets/BBD_Token.sol\":27720:27755  isDex[recipient] && !sellingEnabled */\ntag_42:\n    /* \"src/assets/BBD_Token.sol\":27716:27901  if (isDex[recipient] && !sellingEnabled) {... */\n  iszero\n  tag_45\n  jumpi\n    /* \"src/assets/BBD_Token.sol\":27808:27814  _owner */\n  sload(0x0d)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":27798:27814  sender == _owner */\n  dup4\n  dup2\n  and\n    /* \"src/assets/BBD_Token.sol\":27808:27814  _owner */\n  swap2\n  and\n    /* \"src/assets/BBD_Token.sol\":27798:27814  sender == _owner */\n  eq\n  dup1\n    /* \"src/assets/BBD_Token.sol\":27798:27834  sender == _owner || managers[sender] */\n  tag_44\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token.sol\":27818:27834  managers[sender] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"src/assets/BBD_Token.sol\":27818:27826  managers */\n  0x0f\n    /* \"src/assets/BBD_Token.sol\":27818:27834  managers[sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"src/assets/BBD_Token.sol\":27798:27834  sender == _owner || managers[sender] */\ntag_44:\n    /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n  tag_45\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4339:4341   */\n  0x20\n    /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4321:4342   */\n  mstore\n    /* \"#utility.yul\":4378:4380   */\n  0x13\n    /* \"#utility.yul\":4358:4376   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4351:4381   */\n  mstore\n    /* \"#utility.yul\":4417:4438   */\n  0x53656c6c696e672069732064697361626c656400000000000000000000000000\n    /* \"#utility.yul\":4397:4415   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4390:4439   */\n  mstore\n    /* \"#utility.yul\":4456:4474   */\n  0x64\n  add\n    /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n  tag_17\n    /* \"#utility.yul\":4137:4480   */\n  jump\n    /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\ntag_45:\n    /* \"src/assets/BBD_Token.sol\":28467:28676  function _beforeTokenTransfer(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"src/assets/BBD_Token.sol\":19276:19401  function _beforeTokenTransfer(... */\ntag_50:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_52:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_53:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_61:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_62:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_55:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_66:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_67:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_67)\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_73\n  tag_52\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1555:1652   */\n  tag_74\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_75\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_53\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_55\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_45)\n    /* \"#utility.yul\":1744:2393   */\ntag_77:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_81:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2782   */\ntag_57:\n    /* \"#utility.yul\":2716:2726   */\n  0x4e487b71\n    /* \"#utility.yul\":2711:2714   */\n  0xe0\n    /* \"#utility.yul\":2707:2727   */\n  shl\n    /* \"#utility.yul\":2704:2705   */\n  0x00\n    /* \"#utility.yul\":2697:2728   */\n  mstore\n    /* \"#utility.yul\":2747:2751   */\n  0x11\n    /* \"#utility.yul\":2744:2745   */\n  0x04\n    /* \"#utility.yul\":2737:2752   */\n  mstore\n    /* \"#utility.yul\":2771:2775   */\n  0x24\n    /* \"#utility.yul\":2768:2769   */\n  0x00\n    /* \"#utility.yul\":2761:2776   */\n  revert\n    /* \"#utility.yul\":2787:2915   */\ntag_13:\n    /* \"#utility.yul\":2854:2863   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":2875:2886   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":2872:2909   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2889:2907   */\n  tag_88\n  tag_57\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2787:2915   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3128:3253   */\ntag_26:\n    /* \"#utility.yul\":3193:3202   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3214:3224   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3211:3247   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3227:3245   */\n  tag_88\n  tag_57\n  jump\t// in\n    /* \"#utility.yul\":4137:4480   */\ntag_58:\n    /* \"src/assets/BBD_Token.sol\":22875:28679  contract BBDToken is ERC20 {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/assets/BBD_Token.sol\":22875:28679  contract BBDToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x902d55a5\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xce7842f5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe8be9a44\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe8be9a44\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf771cb65\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xfdff9b4d\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xce7842f5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd2f9efab\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe6fd48bc\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xa9059cbb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb16d78cf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb361412a\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbe381b85\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x902d55a5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa5e90eee\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa779d080\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x3c11e12a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8310a74d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8310a74d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8342083a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8ddedb33\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ed2fe91\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x3c11e12a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x67859b6e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7cdf6fb1\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x23b872dd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2be8781f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2d3e474a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x042249bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/assets/BBD_Token.sol\":23478:23551  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n    tag_3:\n      sload(0x0a)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/assets/BBD_Token.sol\":23478:23551  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/assets/BBD_Token.sol\":13076:13167  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":15394:15609  function approve(... */\n    tag_5:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"src/assets/BBD_Token.sol\":15394:15609  function approve(... */\n      tag_44\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":14178:14277  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"src/assets/BBD_Token.sol\":14257:14269  _totalSupply */\n      sload(0x02)\n        /* \"src/assets/BBD_Token.sol\":14178:14277  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"src/assets/BBD_Token.sol\":14178:14277  function totalSupply() public view virtual returns (uint256) {... */\n      tag_44\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":16219:16502  function transferFrom(... */\n    tag_7:\n      tag_50\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n    tag_8:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"src/assets/BBD_Token.sol\":23402:23471  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n    tag_9:\n      sload(0x09)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":14029:14113  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"src/assets/BBD_Token.sol\":14103:14105  18 */\n      0x12\n        /* \"#utility.yul\":2328:2364   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2316:2318   */\n      0x20\n        /* \"#utility.yul\":2301:2319   */\n      add\n        /* \"src/assets/BBD_Token.sol\":14029:14113  function decimals() public view virtual returns (uint8) {... */\n      tag_44\n        /* \"#utility.yul\":2186:2370   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":23819:23856  mapping(address => bool) public isDex */\n    tag_11:\n      tag_50\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":23240:23316  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n    tag_12:\n      sload(0x07)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":14340:14458  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_56\n      tag_85\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":14432:14450  _balances[account] */\n      and\n        /* \"src/assets/BBD_Token.sol\":14405:14412  uint256 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":14432:14450  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"src/assets/BBD_Token.sol\":14340:14458  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/assets/BBD_Token.sol\":28268:28386  function setDexAddress(address dexAddress, bool status) external isOwner {... */\n    tag_14:\n      tag_65\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":23166:23196  uint256 public lastUnlockMonth */\n    tag_15:\n      tag_56\n      sload(0x05)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":22976:23036  uint256 public constant PUBLIC_SUPPLY = 1_000_000_000 * 1e18 */\n    tag_16:\n      tag_56\n      shl(0x1b, 0x6765c793fa10079d)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":28048:28149  function setBuyingEnabled(bool _enabled) external isOwner {... */\n    tag_17:\n      tag_65\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":23717:23749  bool public buyingEnabled = true */\n    tag_18:\n      sload(0x0c)\n      tag_50\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":22909:22969  uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18 */\n    tag_19:\n      tag_56\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":22909:22969  uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18 */\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":13286:13381  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_46\n      tag_109\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":27928:28040  function setManager(address manager, bool status) external isOwner {... */\n    tag_21:\n      tag_65\n      tag_112\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":23203:23231  uint256 public totalUnlocked */\n    tag_22:\n      tag_56\n      sload(0x06)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":14663:14845  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_50\n      tag_118\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":28157:28260  function setSellingEnabled(bool _enabled) external isOwner {... */\n    tag_24:\n      tag_65\n      tag_122\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":23638:23708  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n    tag_25:\n      sload(0x0c)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":26581:27285  function getNextUnlockInfo()... */\n    tag_26:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3377:3402   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3418:3436   */\n      dup5\n      add\n        /* \"#utility.yul\":3411:3445   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3461:3479   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3454:3488   */\n      mstore\n        /* \"#utility.yul\":3365:3367   */\n      0x60\n        /* \"#utility.yul\":3350:3368   */\n      add\n        /* \"src/assets/BBD_Token.sol\":26581:27285  function getNextUnlockInfo()... */\n      tag_44\n        /* \"#utility.yul\":3175:3494   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":23558:23631  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n    tag_27:\n      sload(0x0b)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":23323:23395  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n    tag_28:\n      sload(0x08)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":14908:15075  function allowance(... */\n    tag_29:\n      tag_56\n      tag_138\n      calldatasize\n      0x04\n      tag_139\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":15040:15058  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"src/assets/BBD_Token.sol\":15013:15020  uint256 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":15040:15058  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":15040:15051  _allowances */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":15040:15058  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":15040:15067  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"src/assets/BBD_Token.sol\":14908:15075  function allowance(... */\n      jump\n        /* \"src/assets/BBD_Token.sol\":23120:23159  uint256 public immutable startTimestamp */\n    tag_30:\n      tag_56\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":23043:23111  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n    tag_31:\n      tag_56\n      tag_146\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":23756:23789  bool public sellingEnabled = true */\n    tag_32:\n      sload(0x0c)\n      tag_50\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":24447:26044  function unlockTokens() external isOwner {... */\n    tag_33:\n      tag_65\n      tag_152\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":23863:23903  mapping(address => bool) public managers */\n    tag_34:\n      tag_50\n      tag_154\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_154:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":13076:13167  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"src/assets/BBD_Token.sol\":13121:13134  string memory */\n      0x60\n        /* \"src/assets/BBD_Token.sol\":13154:13159  _name */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":13147:13159  return _name */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_159\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":13076:13167  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":15394:15609  function approve(... */\n    tag_53:\n        /* \"src/assets/BBD_Token.sol\":15492:15496  bool */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":4367:4377  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":15548:15579  _approve(owner, spender, value) */\n      tag_167\n        /* \"src/assets/BBD_Token.sol\":4367:4377  msg.sender */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":15564:15571  spender */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":15573:15578  value */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":15548:15556  _approve */\n      tag_168\n        /* \"src/assets/BBD_Token.sol\":15548:15579  _approve(owner, spender, value) */\n      jump\t// in\n    tag_167:\n        /* \"src/assets/BBD_Token.sol\":15597:15601  true */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":15590:15601  return true */\n      swap2\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":15394:15609  function approve(... */\n    tag_164:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":16219:16502  function transferFrom(... */\n    tag_63:\n        /* \"src/assets/BBD_Token.sol\":16340:16344  bool */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":4367:4377  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":16398:16435  _spendAllowance(from, spender, value) */\n      tag_172\n        /* \"src/assets/BBD_Token.sol\":16414:16418  from */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":4367:4377  msg.sender */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":16429:16434  value */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":16398:16413  _spendAllowance */\n      tag_173\n        /* \"src/assets/BBD_Token.sol\":16398:16435  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_172:\n        /* \"src/assets/BBD_Token.sol\":16446:16472  _transfer(from, to, value) */\n      tag_174\n        /* \"src/assets/BBD_Token.sol\":16456:16460  from */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":16462:16464  to */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":16466:16471  value */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":16446:16455  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":16446:16472  _transfer(from, to, value) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"src/assets/BBD_Token.sol\":16490:16494  true */\n      0x01\n      swap5\n        /* \"src/assets/BBD_Token.sol\":16219:16502  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n    tag_68:\n        /* \"src/assets/BBD_Token.sol\":24076:24082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token.sol\":24086:24096  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":24076:24096  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token.sol\":24068:24113  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"src/assets/BBD_Token.sol\":26192:26193  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":26183:26188  index */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":26183:26193  index >= 1 */\n      lt\n      iszero\n        /* \"src/assets/BBD_Token.sol\":26183:26207  index >= 1 && index <= 6 */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"src/assets/BBD_Token.sol\":26206:26207  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":26197:26202  index */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":26197:26207  index <= 6 */\n      gt\n      iszero\n        /* \"src/assets/BBD_Token.sol\":26183:26207  index >= 1 && index <= 6 */\n    tag_181:\n        /* \"src/assets/BBD_Token.sol\":26175:26225  require(index >= 1 && index <= 6, \"Invalid index\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4692:4694   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":26175:26225  require(index >= 1 && index <= 6, \"Invalid index\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4674:4695   */\n      mstore\n        /* \"#utility.yul\":4731:4733   */\n      0x0d\n        /* \"#utility.yul\":4711:4729   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4704:4734   */\n      mstore\n      shl(0x9b, 0x092dcecc2d8d2c840d2dcc8caf)\n        /* \"#utility.yul\":4750:4768   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4743:4786   */\n      mstore\n        /* \"#utility.yul\":4803:4821   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":26175:26225  require(index >= 1 && index <= 6, \"Invalid index\") */\n      tag_178\n        /* \"#utility.yul\":4490:4827   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":26175:26225  require(index >= 1 && index <= 6, \"Invalid index\") */\n    tag_182:\n        /* \"src/assets/BBD_Token.sol\":26242:26247  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26251:26252  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":26242:26252  index == 1 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":26238:26565  if (index == 1) liquidityListing = newAddress;... */\n      tag_185\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26254:26270  liquidityListing */\n      0x07\n        /* \"src/assets/BBD_Token.sol\":26254:26283  liquidityListing = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26238:26565  if (index == 1) liquidityListing = newAddress;... */\n    tag_185:\n        /* \"src/assets/BBD_Token.sol\":26303:26308  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26312:26313  2 */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":26303:26313  index == 2 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":26299:26565  if (index == 2) gameTreasury = newAddress;... */\n      tag_187\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26315:26327  gameTreasury */\n      0x08\n        /* \"src/assets/BBD_Token.sol\":26315:26340  gameTreasury = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26299:26565  if (index == 2) gameTreasury = newAddress;... */\n    tag_187:\n        /* \"src/assets/BBD_Token.sol\":26360:26365  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26369:26370  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":26360:26370  index == 3 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":26356:26565  if (index == 3) marketing = newAddress;... */\n      tag_189\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26372:26381  marketing */\n      0x09\n        /* \"src/assets/BBD_Token.sol\":26372:26394  marketing = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26356:26565  if (index == 3) marketing = newAddress;... */\n    tag_189:\n        /* \"src/assets/BBD_Token.sol\":26414:26419  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26423:26424  4 */\n      0x04\n        /* \"src/assets/BBD_Token.sol\":26414:26424  index == 4 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":26410:26565  if (index == 4) stakingReward = newAddress;... */\n      tag_191\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26426:26439  stakingReward */\n      0x0a\n        /* \"src/assets/BBD_Token.sol\":26426:26452  stakingReward = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26410:26565  if (index == 4) stakingReward = newAddress;... */\n    tag_191:\n        /* \"src/assets/BBD_Token.sol\":26472:26477  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26481:26482  5 */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":26472:26482  index == 5 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":26468:26565  if (index == 5) referralBonus = newAddress;... */\n      tag_193\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26484:26497  referralBonus */\n      0x0b\n        /* \"src/assets/BBD_Token.sol\":26484:26510  referralBonus = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26468:26565  if (index == 5) referralBonus = newAddress;... */\n    tag_193:\n        /* \"src/assets/BBD_Token.sol\":26530:26535  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26539:26540  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":26530:26540  index == 6 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":26526:26565  if (index == 6) awardBonus = newAddress */\n      tag_195\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26542:26552  awardBonus */\n      0x0c\n        /* \"src/assets/BBD_Token.sol\":26542:26565  awardBonus = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":26526:26565  if (index == 6) awardBonus = newAddress */\n    tag_195:\n        /* \"src/assets/BBD_Token.sol\":26052:26573  function updateDistributionAddress(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":28268:28386  function setDexAddress(address dexAddress, bool status) external isOwner {... */\n    tag_91:\n        /* \"src/assets/BBD_Token.sol\":24076:24082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token.sol\":24086:24096  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":24076:24096  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token.sol\":24068:24113  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":28352:28369  isDex[dexAddress] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":28352:28357  isDex */\n      0x0e\n        /* \"src/assets/BBD_Token.sol\":28352:28369  isDex[dexAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":28352:28378  isDex[dexAddress] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":28268:28386  function setDexAddress(address dexAddress, bool status) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":28048:28149  function setBuyingEnabled(bool _enabled) external isOwner {... */\n    tag_101:\n        /* \"src/assets/BBD_Token.sol\":24076:24082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token.sol\":24086:24096  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":24076:24096  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token.sol\":24068:24113  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_203:\n        /* \"src/assets/BBD_Token.sol\":28117:28130  buyingEnabled */\n      0x0c\n        /* \"src/assets/BBD_Token.sol\":28117:28141  buyingEnabled = _enabled */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":28048:28149  function setBuyingEnabled(bool _enabled) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":13286:13381  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"src/assets/BBD_Token.sol\":13333:13346  string memory */\n      0x60\n        /* \"src/assets/BBD_Token.sol\":13366:13373  _symbol */\n      0x04\n        /* \"src/assets/BBD_Token.sol\":13359:13373  return _symbol */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":27928:28040  function setManager(address manager, bool status) external isOwner {... */\n    tag_113:\n        /* \"src/assets/BBD_Token.sol\":24076:24082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token.sol\":24086:24096  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":24076:24096  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token.sol\":24068:24113  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":28006:28023  managers[manager] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":28006:28014  managers */\n      0x0f\n        /* \"src/assets/BBD_Token.sol\":28006:28023  managers[manager] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":28006:28032  managers[manager] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":27928:28040  function setManager(address manager, bool status) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":14663:14845  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_119:\n        /* \"src/assets/BBD_Token.sol\":14732:14736  bool */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":4367:4377  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":14788:14815  _transfer(owner, to, value) */\n      tag_167\n        /* \"src/assets/BBD_Token.sol\":4367:4377  msg.sender */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":14805:14807  to */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":14809:14814  value */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":14788:14797  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":14788:14815  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":28157:28260  function setSellingEnabled(bool _enabled) external isOwner {... */\n    tag_123:\n        /* \"src/assets/BBD_Token.sol\":24076:24082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token.sol\":24086:24096  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":24076:24096  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token.sol\":24068:24113  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_220:\n        /* \"src/assets/BBD_Token.sol\":28227:28241  sellingEnabled */\n      0x0c\n        /* \"src/assets/BBD_Token.sol\":28227:28252  sellingEnabled = _enabled */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":28157:28260  function setSellingEnabled(bool _enabled) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":26581:27285  function getNextUnlockInfo()... */\n    tag_128:\n        /* \"src/assets/BBD_Token.sol\":26660:26673  uint256 month */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":26675:26694  uint256 amountTotal */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":26696:26713  uint256 perWallet */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":26731:26740  uint256 m */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":26743:26758  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token.sol\":26761:26762  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":26743:26762  lastUnlockMonth + 1 */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"src/assets/BBD_Token.sol\":26731:26762  uint256 m = lastUnlockMonth + 1 */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":26784:26785  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":26779:26780  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26779:26785  m <= 3 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":26775:27094  if (m <= 3) {... */\n      tag_226\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26838:26842  1000 */\n      0x03e8\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_227\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"src/assets/BBD_Token.sol\":26817:26834  LOCKED_SUPPLY * 5 */\n      tag_229\n      swap1\n        /* \"src/assets/BBD_Token.sol\":26833:26834  5 */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":26817:26834  LOCKED_SUPPLY * 5 */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"src/assets/BBD_Token.sol\":26816:26842  (LOCKED_SUPPLY * 5) / 1000 */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"src/assets/BBD_Token.sol\":26802:26842  amountTotal = (LOCKED_SUPPLY * 5) / 1000 */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token.sol\":26775:27094  if (m <= 3) {... */\n      jump(tag_243)\n    tag_226:\n        /* \"src/assets/BBD_Token.sol\":26869:26870  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":26864:26865  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26864:26870  m <= 6 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":26860:27094  if (m <= 6) {... */\n      tag_234\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":26923:26926  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_235\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_235:\n        /* \"src/assets/BBD_Token.sol\":26902:26919  LOCKED_SUPPLY * 1 */\n      tag_229\n      swap1\n        /* \"src/assets/BBD_Token.sol\":26918:26919  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":26902:26919  LOCKED_SUPPLY * 1 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":26860:27094  if (m <= 6) {... */\n    tag_234:\n        /* \"src/assets/BBD_Token.sol\":26953:26954  9 */\n      0x09\n        /* \"src/assets/BBD_Token.sol\":26948:26949  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":26948:26954  m <= 9 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":26944:27094  if (m <= 9) {... */\n      tag_239\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":27007:27010  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_240\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_240:\n        /* \"src/assets/BBD_Token.sol\":26986:27003  LOCKED_SUPPLY * 2 */\n      tag_229\n      swap1\n        /* \"src/assets/BBD_Token.sol\":27002:27003  2 */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":26986:27003  LOCKED_SUPPLY * 2 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":26944:27094  if (m <= 9) {... */\n    tag_239:\n        /* \"src/assets/BBD_Token.sol\":27079:27082  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_244\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_244:\n        /* \"src/assets/BBD_Token.sol\":27058:27075  LOCKED_SUPPLY * 3 */\n      tag_245\n      swap1\n        /* \"src/assets/BBD_Token.sol\":27074:27075  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":27058:27075  LOCKED_SUPPLY * 3 */\n      tag_230\n      jump\t// in\n    tag_245:\n        /* \"src/assets/BBD_Token.sol\":27057:27082  (LOCKED_SUPPLY * 3) / 100 */\n      tag_246\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_246:\n        /* \"src/assets/BBD_Token.sol\":27043:27082  amountTotal = (LOCKED_SUPPLY * 3) / 100 */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token.sol\":26944:27094  if (m <= 9) {... */\n    tag_243:\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_247\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_247:\n        /* \"src/assets/BBD_Token.sol\":27124:27137  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":27110:27137  amountTotal + totalUnlocked */\n      tag_248\n      swap1\n        /* \"src/assets/BBD_Token.sol\":27110:27121  amountTotal */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":27110:27137  amountTotal + totalUnlocked */\n      tag_225\n      jump\t// in\n    tag_248:\n        /* \"src/assets/BBD_Token.sol\":27110:27153  amountTotal + totalUnlocked > LOCKED_SUPPLY */\n      gt\n        /* \"src/assets/BBD_Token.sol\":27106:27225  if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":27200:27213  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_250\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_250:\n        /* \"src/assets/BBD_Token.sol\":27184:27213  LOCKED_SUPPLY - totalUnlocked */\n      tag_251\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_251:\n        /* \"src/assets/BBD_Token.sol\":27170:27213  amountTotal = LOCKED_SUPPLY - totalUnlocked */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token.sol\":27106:27225  if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {... */\n    tag_249:\n        /* \"src/assets/BBD_Token.sol\":27245:27246  m */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":27248:27259  amountTotal */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":27261:27276  amountTotal / 6 */\n      tag_252\n        /* \"src/assets/BBD_Token.sol\":27275:27276  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":27248:27259  amountTotal */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":27261:27276  amountTotal / 6 */\n      tag_232\n      jump\t// in\n    tag_252:\n        /* \"src/assets/BBD_Token.sol\":27237:27277  return (m, amountTotal, amountTotal / 6) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":26581:27285  function getNextUnlockInfo()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":23043:23111  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n    tag_146:\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_254\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_254:\n        /* \"src/assets/BBD_Token.sol\":23043:23111  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      dup2\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":24447:26044  function unlockTokens() external isOwner {... */\n    tag_152:\n        /* \"src/assets/BBD_Token.sol\":24076:24082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token.sol\":24086:24096  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token.sol\":24076:24096  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token.sol\":24068:24113  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_256:\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_259\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_259:\n        /* \"src/assets/BBD_Token.sol\":24507:24520  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":24507:24536  totalUnlocked < LOCKED_SUPPLY */\n      lt\n        /* \"src/assets/BBD_Token.sol\":24499:24568  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5824:5826   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":24499:24568  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5806:5827   */\n      mstore\n        /* \"#utility.yul\":5863:5865   */\n      0x1b\n        /* \"#utility.yul\":5843:5861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5836:5866   */\n      mstore\n        /* \"#utility.yul\":5902:5931   */\n      0x416c6c20746f6b656e7320616c726561647920756e6c6f636b65640000000000\n        /* \"#utility.yul\":5882:5900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5875:5932   */\n      mstore\n        /* \"#utility.yul\":5949:5967   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":24499:24568  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      tag_178\n        /* \"#utility.yul\":5622:5973   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":24499:24568  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n    tag_260:\n        /* \"src/assets/BBD_Token.sol\":24581:24602  uint256 monthsElapsed */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":24642:24649  30 days */\n      0x278d00\n        /* \"src/assets/BBD_Token.sol\":24606:24638  block.timestamp - startTimestamp */\n      tag_263\n        /* \"src/assets/BBD_Token.sol\":24624:24638  startTimestamp */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"src/assets/BBD_Token.sol\":24606:24621  block.timestamp */\n      timestamp\n        /* \"src/assets/BBD_Token.sol\":24606:24638  block.timestamp - startTimestamp */\n      tag_228\n      jump\t// in\n    tag_263:\n        /* \"src/assets/BBD_Token.sol\":24605:24649  (block.timestamp - startTimestamp) / 30 days */\n      tag_264\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_264:\n        /* \"src/assets/BBD_Token.sol\":24581:24649  uint256 monthsElapsed = (block.timestamp - startTimestamp) / 30 days */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":24684:24699  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token.sol\":24668:24681  monthsElapsed */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":24668:24699  monthsElapsed > lastUnlockMonth */\n      gt\n        /* \"src/assets/BBD_Token.sol\":24660:24726  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":24660:24726  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6162:6183   */\n      mstore\n        /* \"#utility.yul\":6219:6221   */\n      0x16\n        /* \"#utility.yul\":6199:6217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6192:6222   */\n      mstore\n      shl(0x50, 0x4e6f206e6577206d6f6e746820746f20756e6c6f636b)\n        /* \"#utility.yul\":6238:6256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6231:6283   */\n      mstore\n        /* \"#utility.yul\":6300:6318   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":24660:24726  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      tag_178\n        /* \"#utility.yul\":5978:6324   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":24660:24726  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n    tag_265:\n        /* \"src/assets/BBD_Token.sol\":24739:24761  uint256 tokensToUnlock */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":24783:24792  uint256 m */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":24795:24810  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token.sol\":24813:24814  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":24795:24814  lastUnlockMonth + 1 */\n      tag_271\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"src/assets/BBD_Token.sol\":24783:24814  uint256 m = lastUnlockMonth + 1 */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":24778:25260  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n    tag_268:\n        /* \"src/assets/BBD_Token.sol\":24821:24834  monthsElapsed */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":24816:24817  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":24816:24834  m <= monthsElapsed */\n      gt\n        /* \"src/assets/BBD_Token.sol\":24778:25260  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n      tag_269\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":24865:24866  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":24860:24861  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":24860:24866  m <= 3 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":24856:25249  if (m <= 3) {... */\n      tag_272\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":24927:24931  1000 */\n      0x03e8\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_273\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_273:\n        /* \"src/assets/BBD_Token.sol\":24906:24923  LOCKED_SUPPLY * 5 */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token.sol\":24922:24923  5 */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":24906:24923  LOCKED_SUPPLY * 5 */\n      tag_230\n      jump\t// in\n    tag_274:\n        /* \"src/assets/BBD_Token.sol\":24905:24931  (LOCKED_SUPPLY * 5) / 1000 */\n      tag_275\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_275:\n        /* \"src/assets/BBD_Token.sol\":24887:24931  tokensToUnlock += (LOCKED_SUPPLY * 5) / 1000 */\n      tag_276\n      swap1\n      dup4\n      tag_225\n      jump\t// in\n    tag_276:\n      swap2\n      pop\n        /* \"src/assets/BBD_Token.sol\":24856:25249  if (m <= 3) {... */\n      jump(tag_289)\n    tag_272:\n        /* \"src/assets/BBD_Token.sol\":24970:24971  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":24965:24966  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":24965:24971  m <= 6 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":24961:25249  if (m <= 6) {... */\n      tag_278\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":25032:25035  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_279\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_279:\n        /* \"src/assets/BBD_Token.sol\":25011:25028  LOCKED_SUPPLY * 1 */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25027:25028  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":25011:25028  LOCKED_SUPPLY * 1 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":24961:25249  if (m <= 6) {... */\n    tag_278:\n        /* \"src/assets/BBD_Token.sol\":25072:25073  9 */\n      0x09\n        /* \"src/assets/BBD_Token.sol\":25067:25068  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":25067:25073  m <= 9 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":25063:25249  if (m <= 9) {... */\n      tag_284\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":25134:25137  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_285\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_285:\n        /* \"src/assets/BBD_Token.sol\":25113:25130  LOCKED_SUPPLY * 2 */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25129:25130  2 */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":25113:25130  LOCKED_SUPPLY * 2 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":25063:25249  if (m <= 9) {... */\n    tag_284:\n        /* \"src/assets/BBD_Token.sol\":25224:25227  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_290\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_290:\n        /* \"src/assets/BBD_Token.sol\":25203:25220  LOCKED_SUPPLY * 3 */\n      tag_291\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25219:25220  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":25203:25220  LOCKED_SUPPLY * 3 */\n      tag_230\n      jump\t// in\n    tag_291:\n        /* \"src/assets/BBD_Token.sol\":25202:25227  (LOCKED_SUPPLY * 3) / 100 */\n      tag_292\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_292:\n        /* \"src/assets/BBD_Token.sol\":25184:25227  tokensToUnlock += (LOCKED_SUPPLY * 3) / 100 */\n      tag_293\n      swap1\n      dup4\n      tag_225\n      jump\t// in\n    tag_293:\n      swap2\n      pop\n        /* \"src/assets/BBD_Token.sol\":25063:25249  if (m <= 9) {... */\n    tag_289:\n        /* \"src/assets/BBD_Token.sol\":24836:24839  m++ */\n      dup1\n      tag_294\n      dup2\n      tag_295\n      jump\t// in\n    tag_294:\n      swap2\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":24778:25260  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n      jump(tag_268)\n    tag_269:\n      pop\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_296\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_296:\n        /* \"src/assets/BBD_Token.sol\":25293:25306  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":25276:25306  tokensToUnlock + totalUnlocked */\n      tag_297\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25276:25290  tokensToUnlock */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25276:25306  tokensToUnlock + totalUnlocked */\n      tag_225\n      jump\t// in\n    tag_297:\n        /* \"src/assets/BBD_Token.sol\":25276:25322  tokensToUnlock + totalUnlocked > LOCKED_SUPPLY */\n      gt\n        /* \"src/assets/BBD_Token.sol\":25272:25433  if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":25372:25385  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_299\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":22948:22969  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":23083:23111  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_299:\n        /* \"src/assets/BBD_Token.sol\":25356:25385  LOCKED_SUPPLY - totalUnlocked */\n      tag_300\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_300:\n        /* \"src/assets/BBD_Token.sol\":25339:25385  tokensToUnlock = LOCKED_SUPPLY - totalUnlocked */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":25272:25433  if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {... */\n    tag_298:\n        /* \"src/assets/BBD_Token.sol\":25470:25471  0 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":25453:25467  tokensToUnlock */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":25453:25471  tokensToUnlock > 0 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":25445:25493  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6671:6673   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":25445:25493  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6653:6674   */\n      mstore\n        /* \"#utility.yul\":6710:6712   */\n      0x11\n        /* \"#utility.yul\":6690:6708   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6683:6713   */\n      mstore\n      shl(0x78, 0x4e6f7468696e6720746f20756e6c6f636b)\n        /* \"#utility.yul\":6729:6747   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6722:6769   */\n      mstore\n        /* \"#utility.yul\":6786:6804   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":25445:25493  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      tag_178\n        /* \"#utility.yul\":6469:6810   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":25445:25493  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n    tag_301:\n        /* \"src/assets/BBD_Token.sol\":25524:25537  monthsElapsed */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":25506:25521  lastUnlockMonth */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":25506:25537  lastUnlockMonth = monthsElapsed */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/assets/BBD_Token.sol\":25565:25579  tokensToUnlock */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":25548:25561  totalUnlocked */\n      0x06\n      0x00\n        /* \"src/assets/BBD_Token.sol\":25548:25579  totalUnlocked += tokensToUnlock */\n      dup3\n      dup3\n      sload\n      tag_304\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_304:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/assets/BBD_Token.sol\":25592:25605  uint256 share */\n      0x00\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":25608:25626  tokensToUnlock / 6 */\n      tag_305\n        /* \"src/assets/BBD_Token.sol\":25625:25626  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":25608:25622  tokensToUnlock */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25608:25626  tokensToUnlock / 6 */\n      tag_232\n      jump\t// in\n    tag_305:\n        /* \"src/assets/BBD_Token.sol\":25664:25680  liquidityListing */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":25592:25626  uint256 share = tokensToUnlock / 6 */\n      swap1\n      swap2\n      pop\n        /* \"src/assets/BBD_Token.sol\":25639:25688  _transfer(address(this), liquidityListing, share) */\n      tag_306\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25657:25661  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":25664:25680  liquidityListing */\n      and\n        /* \"src/assets/BBD_Token.sol\":25592:25626  uint256 share = tokensToUnlock / 6 */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25639:25648  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":25639:25688  _transfer(address(this), liquidityListing, share) */\n      jump\t// in\n    tag_306:\n        /* \"src/assets/BBD_Token.sol\":25724:25736  gameTreasury */\n      sload(0x08)\n        /* \"src/assets/BBD_Token.sol\":25699:25744  _transfer(address(this), gameTreasury, share) */\n      tag_307\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25717:25721  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":25724:25736  gameTreasury */\n      and\n        /* \"src/assets/BBD_Token.sol\":25738:25743  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25699:25708  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":25699:25744  _transfer(address(this), gameTreasury, share) */\n      jump\t// in\n    tag_307:\n        /* \"src/assets/BBD_Token.sol\":25780:25789  marketing */\n      sload(0x09)\n        /* \"src/assets/BBD_Token.sol\":25755:25797  _transfer(address(this), marketing, share) */\n      tag_308\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25773:25777  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":25780:25789  marketing */\n      and\n        /* \"src/assets/BBD_Token.sol\":25791:25796  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25755:25764  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":25755:25797  _transfer(address(this), marketing, share) */\n      jump\t// in\n    tag_308:\n        /* \"src/assets/BBD_Token.sol\":25833:25846  stakingReward */\n      sload(0x0a)\n        /* \"src/assets/BBD_Token.sol\":25808:25854  _transfer(address(this), stakingReward, share) */\n      tag_309\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25826:25830  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":25833:25846  stakingReward */\n      and\n        /* \"src/assets/BBD_Token.sol\":25848:25853  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25808:25817  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":25808:25854  _transfer(address(this), stakingReward, share) */\n      jump\t// in\n    tag_309:\n        /* \"src/assets/BBD_Token.sol\":25890:25903  referralBonus */\n      sload(0x0b)\n        /* \"src/assets/BBD_Token.sol\":25865:25911  _transfer(address(this), referralBonus, share) */\n      tag_310\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25883:25887  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":25890:25903  referralBonus */\n      and\n        /* \"src/assets/BBD_Token.sol\":25905:25910  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25865:25874  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":25865:25911  _transfer(address(this), referralBonus, share) */\n      jump\t// in\n    tag_310:\n        /* \"src/assets/BBD_Token.sol\":25947:25957  awardBonus */\n      sload(0x0c)\n        /* \"src/assets/BBD_Token.sol\":25922:25965  _transfer(address(this), awardBonus, share) */\n      tag_311\n      swap1\n        /* \"src/assets/BBD_Token.sol\":25940:25944  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":25947:25957  awardBonus */\n      and\n        /* \"src/assets/BBD_Token.sol\":25959:25964  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":25922:25931  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token.sol\":25922:25965  _transfer(address(this), awardBonus, share) */\n      jump\t// in\n    tag_311:\n        /* \"src/assets/BBD_Token.sol\":25998:26013  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token.sol\":26022:26035  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":25983:26036  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3377:3402   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3418:3436   */\n      dup4\n      add\n        /* \"#utility.yul\":3411:3445   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3461:3479   */\n      dup3\n      add\n        /* \"#utility.yul\":3454:3488   */\n      mstore\n        /* \"src/assets/BBD_Token.sol\":25983:26036  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      0xd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac\n      swap1\n        /* \"#utility.yul\":3365:3367   */\n      0x60\n        /* \"#utility.yul\":3350:3368   */\n      add\n        /* \"src/assets/BBD_Token.sol\":25983:26036  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/assets/BBD_Token.sol\":24488:26044  {... */\n      pop\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":24447:26044  function unlockTokens() external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":20491:20621  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_168:\n        /* \"src/assets/BBD_Token.sol\":20576:20613  _approve(owner, spender, value, true) */\n      tag_315\n        /* \"src/assets/BBD_Token.sol\":20585:20590  owner */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":20592:20599  spender */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":20601:20606  value */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":20608:20612  true */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":20576:20584  _approve */\n      tag_316\n        /* \"src/assets/BBD_Token.sol\":20576:20613  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_315:\n        /* \"src/assets/BBD_Token.sol\":20491:20621  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":22266:22868  function _spendAllowance(... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":15040:15058  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"src/assets/BBD_Token.sol\":22400:22424  uint256 currentAllowance */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":15040:15058  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":15040:15051  _allowances */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":15040:15058  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":15040:15067  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/assets/BBD_Token.sol\":22467:22503  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"src/assets/BBD_Token.sol\":22463:22861  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":22543:22548  value */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":22524:22540  currentAllowance */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":22524:22548  currentAllowance < value */\n      lt\n        /* \"src/assets/BBD_Token.sol\":22520:22734  if (currentAllowance < value) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":22576:22718  ERC20InsufficientAllowance(... */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7035:7067   */\n      dup5\n      and\n        /* \"src/assets/BBD_Token.sol\":22576:22718  ERC20InsufficientAllowance(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7017:7068   */\n      mstore\n        /* \"#utility.yul\":7084:7102   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7077:7111   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7127:7145   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7120:7154   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6990:7008   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":22576:22718  ERC20InsufficientAllowance(... */\n      tag_178\n        /* \"#utility.yul\":6815:7160   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":22520:22734  if (currentAllowance < value) {... */\n    tag_320:\n        /* \"src/assets/BBD_Token.sol\":22777:22834  _approve(owner, spender, currentAllowance - value, false) */\n      tag_323\n        /* \"src/assets/BBD_Token.sol\":22786:22791  owner */\n      dup5\n        /* \"src/assets/BBD_Token.sol\":22793:22800  spender */\n      dup5\n        /* \"src/assets/BBD_Token.sol\":22821:22826  value */\n      dup5\n        /* \"src/assets/BBD_Token.sol\":22802:22818  currentAllowance */\n      dup5\n        /* \"src/assets/BBD_Token.sol\":22802:22826  currentAllowance - value */\n      sub\n        /* \"src/assets/BBD_Token.sol\":22828:22833  false */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":22777:22785  _approve */\n      tag_316\n        /* \"src/assets/BBD_Token.sol\":22777:22834  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_323:\n        /* \"src/assets/BBD_Token.sol\":22389:22868  {... */\n      pop\n        /* \"src/assets/BBD_Token.sol\":22266:22868  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":16887:17195  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":16971:16989  from == address(0) */\n      dup4\n      and\n        /* \"src/assets/BBD_Token.sol\":16967:17055  if (from == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":17013:17043  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":17040:17041  0 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":17013:17043  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token.sol\":17013:17043  ERC20InvalidSender(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":16967:17055  if (from == address(0)) {... */\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":17069:17085  to == address(0) */\n      dup3\n      and\n        /* \"src/assets/BBD_Token.sol\":17065:17153  if (to == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":17109:17141  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":17138:17139  0 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":17109:17141  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token.sol\":17109:17141  ERC20InvalidReceiver(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":17065:17153  if (to == address(0)) {... */\n    tag_327:\n        /* \"src/assets/BBD_Token.sol\":17163:17187  _update(from, to, value) */\n      tag_315\n        /* \"src/assets/BBD_Token.sol\":17171:17175  from */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":17177:17179  to */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":17181:17186  value */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":17163:17170  _update */\n      tag_330\n        /* \"src/assets/BBD_Token.sol\":17163:17187  _update(from, to, value) */\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":21488:21974  function _approve(... */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":21644:21663  owner == address(0) */\n      dup5\n      and\n        /* \"src/assets/BBD_Token.sol\":21640:21731  if (owner == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":21687:21719  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":21716:21717  0 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":21687:21719  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token.sol\":21687:21719  ERC20InvalidApprover(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":21640:21731  if (owner == address(0)) {... */\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":21745:21766  spender == address(0) */\n      dup4\n      and\n        /* \"src/assets/BBD_Token.sol\":21741:21833  if (spender == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":21790:21821  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":21818:21819  0 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":21790:21821  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token.sol\":21790:21821  ERC20InvalidSpender(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":21741:21833  if (spender == address(0)) {... */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":21843:21861  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":21843:21854  _allowances */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":21843:21861  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":21843:21870  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":21843:21878  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":21889:21967  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_323\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":21940:21947  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":21924:21955  Approval(owner, spender, value) */\n      and\n        /* \"src/assets/BBD_Token.sol\":21933:21938  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":21924:21955  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/assets/BBD_Token.sol\":21949:21954  value */\n      dup5\n        /* \"src/assets/BBD_Token.sol\":21924:21955  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_337\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":21924:21955  Approval(owner, spender, value) */\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/assets/BBD_Token.sol\":21488:21974  function _approve(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":17519:18702  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_330:\n        /* \"src/assets/BBD_Token.sol\":17605:17642  _beforeTokenTransfer(from, to, value) */\n      tag_339\n        /* \"src/assets/BBD_Token.sol\":17626:17630  from */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":17632:17634  to */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":17636:17641  value */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":17605:17625  _beforeTokenTransfer */\n      tag_340\n        /* \"src/assets/BBD_Token.sol\":17605:17642  _beforeTokenTransfer(from, to, value) */\n      jump\t// in\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":17657:17675  from == address(0) */\n      dup4\n      and\n        /* \"src/assets/BBD_Token.sol\":17653:18205  if (from == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":17811:17816  value */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":17795:17807  _totalSupply */\n      0x02\n      0x00\n        /* \"src/assets/BBD_Token.sol\":17795:17816  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_342\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_342:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/assets/BBD_Token.sol\":17653:18205  if (from == address(0)) {... */\n      tag_343\n      swap1\n      pop\n      jump\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":17871:17886  _balances[from] */\n      dup4\n      and\n        /* \"src/assets/BBD_Token.sol\":17849:17868  uint256 fromBalance */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":17871:17886  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/assets/BBD_Token.sol\":17905:17924  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"src/assets/BBD_Token.sol\":17901:18018  if (fromBalance < value) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":17952:18002  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7035:7067   */\n      dup6\n      and\n        /* \"src/assets/BBD_Token.sol\":17952:18002  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7017:7068   */\n      mstore\n        /* \"#utility.yul\":7084:7102   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7077:7111   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7127:7145   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7120:7154   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6990:7008   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":17952:18002  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_178\n        /* \"#utility.yul\":6815:7160   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":17901:18018  if (fromBalance < value) {... */\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":18141:18156  _balances[from] */\n      dup5\n      and\n        /* \"src/assets/BBD_Token.sol\":18141:18150  _balances */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":18141:18156  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":18159:18178  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"src/assets/BBD_Token.sol\":18141:18178  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":17653:18205  if (from == address(0)) {... */\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":18221:18237  to == address(0) */\n      dup3\n      and\n        /* \"src/assets/BBD_Token.sol\":18217:18652  if (to == address(0)) {... */\n      tag_346\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":18387:18399  _totalSupply */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":18387:18408  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":18217:18652  if (to == address(0)) {... */\n      jump(tag_347)\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":18603:18616  _balances[to] */\n      dup3\n      and\n        /* \"src/assets/BBD_Token.sol\":18603:18612  _balances */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":18603:18616  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token.sol\":18603:18625  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":18217:18652  if (to == address(0)) {... */\n    tag_347:\n        /* \"src/assets/BBD_Token.sol\":18684:18686  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n      and\n        /* \"src/assets/BBD_Token.sol\":18678:18682  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/assets/BBD_Token.sol\":18688:18693  value */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n      mload(0x40)\n      tag_348\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":18669:18694  Transfer(from, to, value) */\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/assets/BBD_Token.sol\":17519:18702  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":28467:28676  function _beforeTokenTransfer(... */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":27446:27459  isDex[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":27446:27451  isDex */\n      0x0e\n        /* \"src/assets/BBD_Token.sol\":27446:27459  isDex[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/assets/BBD_Token.sol\":28603:28607  from */\n      dup4\n      swap1\n        /* \"src/assets/BBD_Token.sol\":28609:28611  to */\n      dup4\n      swap1\n        /* \"src/assets/BBD_Token.sol\":27446:27459  isDex[sender] */\n      0xff\n      and\n        /* \"src/assets/BBD_Token.sol\":27446:27477  isDex[sender] && !buyingEnabled */\n      dup1\n      iszero\n      tag_350\n      jumpi\n      pop\n        /* \"src/assets/BBD_Token.sol\":27464:27477  buyingEnabled */\n      sload(0x0c)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"src/assets/BBD_Token.sol\":27463:27477  !buyingEnabled */\n      iszero\n        /* \"src/assets/BBD_Token.sol\":27446:27477  isDex[sender] && !buyingEnabled */\n    tag_350:\n        /* \"src/assets/BBD_Token.sol\":27442:27628  if (isDex[sender] && !buyingEnabled) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":27533:27539  _owner */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":27520:27539  recipient == _owner */\n      dup3\n      dup2\n      and\n        /* \"src/assets/BBD_Token.sol\":27533:27539  _owner */\n      swap2\n      and\n        /* \"src/assets/BBD_Token.sol\":27520:27539  recipient == _owner */\n      eq\n      dup1\n        /* \"src/assets/BBD_Token.sol\":27520:27562  recipient == _owner || managers[recipient] */\n      tag_352\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":27543:27562  managers[recipient] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":27543:27551  managers */\n      0x0f\n        /* \"src/assets/BBD_Token.sol\":27543:27562  managers[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/assets/BBD_Token.sol\":27520:27562  recipient == _owner || managers[recipient] */\n    tag_352:\n        /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7367:7369   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7349:7370   */\n      mstore\n        /* \"#utility.yul\":7406:7408   */\n      0x12\n        /* \"#utility.yul\":7386:7404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7379:7409   */\n      mstore\n      shl(0x72, 0x109d5e5a5b99c81a5cc8191a5cd8589b1959)\n        /* \"#utility.yul\":7425:7443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7418:7466   */\n      mstore\n        /* \"#utility.yul\":7483:7501   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n      tag_178\n        /* \"#utility.yul\":7165:7507   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":27494:27616  require(... */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":27720:27736  isDex[recipient] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":27720:27725  isDex */\n      0x0e\n        /* \"src/assets/BBD_Token.sol\":27720:27736  isDex[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/assets/BBD_Token.sol\":27720:27755  isDex[recipient] && !sellingEnabled */\n      dup1\n      iszero\n      tag_356\n      jumpi\n      pop\n        /* \"src/assets/BBD_Token.sol\":27741:27755  sellingEnabled */\n      sload(0x0c)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"src/assets/BBD_Token.sol\":27740:27755  !sellingEnabled */\n      iszero\n        /* \"src/assets/BBD_Token.sol\":27720:27755  isDex[recipient] && !sellingEnabled */\n    tag_356:\n        /* \"src/assets/BBD_Token.sol\":27716:27901  if (isDex[recipient] && !sellingEnabled) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":27808:27814  _owner */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":27798:27814  sender == _owner */\n      dup4\n      dup2\n      and\n        /* \"src/assets/BBD_Token.sol\":27808:27814  _owner */\n      swap2\n      and\n        /* \"src/assets/BBD_Token.sol\":27798:27814  sender == _owner */\n      eq\n      dup1\n        /* \"src/assets/BBD_Token.sol\":27798:27834  sender == _owner || managers[sender] */\n      tag_358\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":27818:27834  managers[sender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token.sol\":27818:27826  managers */\n      0x0f\n        /* \"src/assets/BBD_Token.sol\":27818:27834  managers[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/assets/BBD_Token.sol\":27798:27834  sender == _owner || managers[sender] */\n    tag_358:\n        /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7714:7716   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7696:7717   */\n      mstore\n        /* \"#utility.yul\":7753:7755   */\n      0x13\n        /* \"#utility.yul\":7733:7751   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7726:7756   */\n      mstore\n      shl(0x6a, 0x14d95b1b1a5b99c81a5cc8191a5cd8589b1959)\n        /* \"#utility.yul\":7772:7790   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7765:7814   */\n      mstore\n        /* \"#utility.yul\":7831:7849   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n      tag_178\n        /* \"#utility.yul\":7512:7855   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":27772:27889  require(... */\n    tag_359:\n        /* \"src/assets/BBD_Token.sol\":28467:28676  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:640   */\n    tag_49:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":505:511   */\n      dup1\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":492:498   */\n      dup6\n        /* \"#utility.yul\":488:503   */\n      add\n        /* \"#utility.yul\":483:485   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup6\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":462:512   */\n      mcopy\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":556:558   */\n      0x40\n        /* \"#utility.yul\":547:553   */\n      dup3\n        /* \"#utility.yul\":536:545   */\n      dup6\n        /* \"#utility.yul\":532:554   */\n      add\n        /* \"#utility.yul\":528:559   */\n      add\n        /* \"#utility.yul\":521:563   */\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x40\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":620:627   */\n      not\n        /* \"#utility.yul\":615:617   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:618   */\n      add\n        /* \"#utility.yul\":599:628   */\n      and\n        /* \"#utility.yul\":588:597   */\n      dup5\n        /* \"#utility.yul\":584:629   */\n      add\n        /* \"#utility.yul\":580:634   */\n      add\n        /* \"#utility.yul\":572:634   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_366:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_373:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_52:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      dup1\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      dup1\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_375:\n        /* \"#utility.yul\":991:1020   */\n      tag_376\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_366\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_62:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      dup1\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_380:\n        /* \"#utility.yul\":1687:1716   */\n      tag_381\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_366\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_382\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_366\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":1881:2181   */\n    tag_67:\n        /* \"#utility.yul\":1949:1955   */\n      0x00\n        /* \"#utility.yul\":1957:1963   */\n      dup1\n        /* \"#utility.yul\":2010:2012   */\n      0x40\n        /* \"#utility.yul\":1998:2007   */\n      dup4\n        /* \"#utility.yul\":1989:1996   */\n      dup6\n        /* \"#utility.yul\":1985:2008   */\n      sub\n        /* \"#utility.yul\":1981:2013   */\n      slt\n        /* \"#utility.yul\":1978:2030   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2026:2027   */\n      0x00\n        /* \"#utility.yul\":2023:2024   */\n      dup1\n        /* \"#utility.yul\":2016:2028   */\n      revert\n        /* \"#utility.yul\":1978:2030   */\n    tag_384:\n        /* \"#utility.yul\":2071:2094   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2137:2175   */\n      tag_385\n        /* \"#utility.yul\":2171:2173   */\n      0x20\n        /* \"#utility.yul\":2156:2174   */\n      dup5\n      add\n        /* \"#utility.yul\":2137:2175   */\n      tag_366\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2127:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1881:2181   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2375:2561   */\n    tag_78:\n        /* \"#utility.yul\":2434:2440   */\n      0x00\n        /* \"#utility.yul\":2487:2489   */\n      0x20\n        /* \"#utility.yul\":2475:2484   */\n      dup3\n        /* \"#utility.yul\":2466:2473   */\n      dup5\n        /* \"#utility.yul\":2462:2485   */\n      sub\n        /* \"#utility.yul\":2458:2490   */\n      slt\n        /* \"#utility.yul\":2455:2507   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2455:2507   */\n    tag_388:\n        /* \"#utility.yul\":2526:2555   */\n      tag_389\n        /* \"#utility.yul\":2545:2554   */\n      dup3\n        /* \"#utility.yul\":2526:2555   */\n      tag_366\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2516:2555   */\n      swap4\n        /* \"#utility.yul\":2375:2561   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2566:2726   */\n    tag_367:\n        /* \"#utility.yul\":2631:2651   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2687:2700   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2680:2701   */\n      iszero\n        /* \"#utility.yul\":2670:2702   */\n      dup2\n      eq\n        /* \"#utility.yul\":2660:2720   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2716:2717   */\n      0x00\n        /* \"#utility.yul\":2713:2714   */\n      dup1\n        /* \"#utility.yul\":2706:2718   */\n      revert\n        /* \"#utility.yul\":2731:2985   */\n    tag_90:\n        /* \"#utility.yul\":2796:2802   */\n      0x00\n        /* \"#utility.yul\":2804:2810   */\n      dup1\n        /* \"#utility.yul\":2857:2859   */\n      0x40\n        /* \"#utility.yul\":2845:2854   */\n      dup4\n        /* \"#utility.yul\":2836:2843   */\n      dup6\n        /* \"#utility.yul\":2832:2855   */\n      sub\n        /* \"#utility.yul\":2828:2860   */\n      slt\n        /* \"#utility.yul\":2825:2877   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2873:2874   */\n      0x00\n        /* \"#utility.yul\":2870:2871   */\n      dup1\n        /* \"#utility.yul\":2863:2875   */\n      revert\n        /* \"#utility.yul\":2825:2877   */\n    tag_393:\n        /* \"#utility.yul\":2896:2925   */\n      tag_394\n        /* \"#utility.yul\":2915:2924   */\n      dup4\n        /* \"#utility.yul\":2896:2925   */\n      tag_366\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2886:2925   */\n      swap2\n      pop\n        /* \"#utility.yul\":2944:2979   */\n      tag_385\n        /* \"#utility.yul\":2975:2977   */\n      0x20\n        /* \"#utility.yul\":2964:2973   */\n      dup5\n        /* \"#utility.yul\":2960:2978   */\n      add\n        /* \"#utility.yul\":2944:2979   */\n      tag_367\n      jump\t// in\n        /* \"#utility.yul\":2990:3170   */\n    tag_100:\n        /* \"#utility.yul\":3046:3052   */\n      0x00\n        /* \"#utility.yul\":3099:3101   */\n      0x20\n        /* \"#utility.yul\":3087:3096   */\n      dup3\n        /* \"#utility.yul\":3078:3085   */\n      dup5\n        /* \"#utility.yul\":3074:3097   */\n      sub\n        /* \"#utility.yul\":3070:3102   */\n      slt\n        /* \"#utility.yul\":3067:3119   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3115:3116   */\n      0x00\n        /* \"#utility.yul\":3112:3113   */\n      dup1\n        /* \"#utility.yul\":3105:3117   */\n      revert\n        /* \"#utility.yul\":3067:3119   */\n    tag_397:\n        /* \"#utility.yul\":3138:3164   */\n      tag_389\n        /* \"#utility.yul\":3154:3163   */\n      dup3\n        /* \"#utility.yul\":3138:3164   */\n      tag_367\n      jump\t// in\n        /* \"#utility.yul\":3499:3759   */\n    tag_139:\n        /* \"#utility.yul\":3567:3573   */\n      0x00\n        /* \"#utility.yul\":3575:3581   */\n      dup1\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3616:3625   */\n      dup4\n        /* \"#utility.yul\":3607:3614   */\n      dup6\n        /* \"#utility.yul\":3603:3626   */\n      sub\n        /* \"#utility.yul\":3599:3631   */\n      slt\n        /* \"#utility.yul\":3596:3648   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3644:3645   */\n      0x00\n        /* \"#utility.yul\":3641:3642   */\n      dup1\n        /* \"#utility.yul\":3634:3646   */\n      revert\n        /* \"#utility.yul\":3596:3648   */\n    tag_401:\n        /* \"#utility.yul\":3667:3696   */\n      tag_402\n        /* \"#utility.yul\":3686:3695   */\n      dup4\n        /* \"#utility.yul\":3667:3696   */\n      tag_366\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3657:3696   */\n      swap2\n      pop\n        /* \"#utility.yul\":3715:3753   */\n      tag_385\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup5\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3715:3753   */\n      tag_366\n      jump\t// in\n        /* \"#utility.yul\":3764:4144   */\n    tag_159:\n        /* \"#utility.yul\":3843:3844   */\n      0x01\n        /* \"#utility.yul\":3839:3851   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3886:3898   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3907:3968   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3961:3965   */\n      0x7f\n        /* \"#utility.yul\":3953:3959   */\n      dup3\n        /* \"#utility.yul\":3949:3966   */\n      and\n        /* \"#utility.yul\":3939:3966   */\n      swap2\n      pop\n        /* \"#utility.yul\":3907:3968   */\n    tag_405:\n        /* \"#utility.yul\":4014:4016   */\n      0x20\n        /* \"#utility.yul\":4006:4012   */\n      dup3\n        /* \"#utility.yul\":4003:4017   */\n      lt\n        /* \"#utility.yul\":3983:4001   */\n      dup2\n        /* \"#utility.yul\":3980:4018   */\n      sub\n        /* \"#utility.yul\":3977:4138   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":4060:4070   */\n      0x4e487b71\n        /* \"#utility.yul\":4055:4058   */\n      0xe0\n        /* \"#utility.yul\":4051:4071   */\n      shl\n        /* \"#utility.yul\":4048:4049   */\n      0x00\n        /* \"#utility.yul\":4041:4072   */\n      mstore\n        /* \"#utility.yul\":4095:4099   */\n      0x22\n        /* \"#utility.yul\":4092:4093   */\n      0x04\n        /* \"#utility.yul\":4085:4100   */\n      mstore\n        /* \"#utility.yul\":4123:4127   */\n      0x24\n        /* \"#utility.yul\":4120:4121   */\n      0x00\n        /* \"#utility.yul\":4113:4128   */\n      revert\n        /* \"#utility.yul\":3977:4138   */\n    tag_406:\n      pop\n        /* \"#utility.yul\":3764:4144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4149:4485   */\n    tag_179:\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4333:4354   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4390:4392   */\n      0x0c\n        /* \"#utility.yul\":4370:4388   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4363:4393   */\n      mstore\n      shl(0xa0, 0x4e6f7420616c6c6f77656421)\n        /* \"#utility.yul\":4424:4426   */\n      0x40\n        /* \"#utility.yul\":4409:4427   */\n      dup3\n      add\n        /* \"#utility.yul\":4402:4444   */\n      mstore\n        /* \"#utility.yul\":4476:4478   */\n      0x60\n        /* \"#utility.yul\":4461:4479   */\n      add\n      swap1\n        /* \"#utility.yul\":4149:4485   */\n      jump\t// out\n        /* \"#utility.yul\":4832:4959   */\n    tag_368:\n        /* \"#utility.yul\":4893:4903   */\n      0x4e487b71\n        /* \"#utility.yul\":4888:4891   */\n      0xe0\n        /* \"#utility.yul\":4884:4904   */\n      shl\n        /* \"#utility.yul\":4881:4882   */\n      0x00\n        /* \"#utility.yul\":4874:4905   */\n      mstore\n        /* \"#utility.yul\":4924:4928   */\n      0x11\n        /* \"#utility.yul\":4921:4922   */\n      0x04\n        /* \"#utility.yul\":4914:4929   */\n      mstore\n        /* \"#utility.yul\":4948:4952   */\n      0x24\n        /* \"#utility.yul\":4945:4946   */\n      0x00\n        /* \"#utility.yul\":4938:4953   */\n      revert\n        /* \"#utility.yul\":4964:5089   */\n    tag_225:\n        /* \"#utility.yul\":5029:5038   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5050:5060   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5047:5083   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5063:5081   */\n      tag_164\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":5094:5222   */\n    tag_228:\n        /* \"#utility.yul\":5161:5170   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5182:5193   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5179:5216   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5196:5214   */\n      tag_164\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":5227:5395   */\n    tag_230:\n        /* \"#utility.yul\":5300:5309   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5331:5340   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5348:5363   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5342:5364   */\n      dup5\n      eq\n        /* \"#utility.yul\":5328:5365   */\n      or\n        /* \"#utility.yul\":5318:5389   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5369:5387   */\n      tag_164\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":5400:5617   */\n    tag_232:\n        /* \"#utility.yul\":5440:5441   */\n      0x00\n        /* \"#utility.yul\":5466:5467   */\n      dup3\n        /* \"#utility.yul\":5456:5588   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5510:5520   */\n      0x4e487b71\n        /* \"#utility.yul\":5505:5508   */\n      0xe0\n        /* \"#utility.yul\":5501:5521   */\n      shl\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5491:5522   */\n      mstore\n        /* \"#utility.yul\":5545:5549   */\n      0x12\n        /* \"#utility.yul\":5542:5543   */\n      0x04\n        /* \"#utility.yul\":5535:5550   */\n      mstore\n        /* \"#utility.yul\":5573:5577   */\n      0x24\n        /* \"#utility.yul\":5570:5571   */\n      0x00\n        /* \"#utility.yul\":5563:5578   */\n      revert\n        /* \"#utility.yul\":5456:5588   */\n    tag_420:\n      pop\n        /* \"#utility.yul\":5602:5611   */\n      div\n      swap1\n        /* \"#utility.yul\":5400:5617   */\n      jump\t// out\n        /* \"#utility.yul\":6329:6464   */\n    tag_295:\n        /* \"#utility.yul\":6368:6371   */\n      0x00\n        /* \"#utility.yul\":6389:6406   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6386:6429   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6409:6427   */\n      tag_425\n      tag_368\n      jump\t// in\n    tag_425:\n      pop\n        /* \"#utility.yul\":6456:6457   */\n      0x01\n        /* \"#utility.yul\":6445:6458   */\n      add\n      swap1\n        /* \"#utility.yul\":6329:6464   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e48139f6ec74dd2f2cd832075023aa86de42945a39e6a247f89762f6c0a3da2b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_899": {
									"entryPoint": null,
									"id": 899,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1375": {
									"entryPoint": 778,
									"id": 1375,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_627": {
									"entryPoint": 1140,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_617": {
									"entryPoint": 412,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_584": {
									"entryPoint": 473,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4482:1",
										"nodeType": "YulBlock",
										"src": "0:4482:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:1",
													"nodeType": "YulBlock",
													"src": "1447:1203:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:1",
															"nodeType": "YulAssignment",
															"src": "1688:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:1",
																"nodeType": "YulLiteral",
																"src": "1701:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:1",
																		"nodeType": "YulBlock",
																		"src": "1751:642:1",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:1"
																							},
																							"nativeSrc": "1792:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:1"
																					},
																					"nativeSrc": "1780:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:1"
																					},
																					"nativeSrc": "1827:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:1",
																					"nodeType": "YulBlock",
																					"src": "1955:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:1"
																												},
																												"nativeSrc": "1994:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:1"
																										},
																										"nativeSrc": "1988:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:1"
																								},
																								"nativeSrc": "1973:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:1"
																							},
																							"nativeSrc": "1973:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:1"
																						},
																						{
																							"nativeSrc": "2032:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:1"
																								},
																								"nativeSrc": "2042:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:1"
																								},
																								"nativeSrc": "2086:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:1"
																					},
																					"nativeSrc": "1906:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:1"
																				},
																				"nativeSrc": "1898:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:1",
																					"nodeType": "YulBlock",
																					"src": "1921:21:1",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:1",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:1",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:1"
																								},
																								"nativeSrc": "1928:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:1",
																					"nodeType": "YulBlock",
																					"src": "1902:3:1",
																					"statements": []
																				},
																				"src": "1898:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:1",
																					"nodeType": "YulBlock",
																					"src": "2168:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:1"
																										},
																										"nativeSrc": "2209:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:1"
																								},
																								"nativeSrc": "2203:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:1"
																																		},
																																		"nativeSrc": "2288:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:1"
																																},
																																"nativeSrc": "2284:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:1"
																																},
																																"nativeSrc": "2310:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:1"
																														},
																														"nativeSrc": "2280:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:1"
																												},
																												"nativeSrc": "2276:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:1"
																										},
																										"nativeSrc": "2261:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:1"
																								},
																								"nativeSrc": "2246:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:1"
																							},
																							"nativeSrc": "2246:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:1"
																					},
																					"nativeSrc": "2136:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:1"
																				},
																				"nativeSrc": "2133:201:1",
																				"nodeType": "YulIf",
																				"src": "2133:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:1"
																									},
																									"nativeSrc": "2364:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:1"
																							},
																							"nativeSrc": "2360:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:1"
																					},
																					"nativeSrc": "2347:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:1"
																				},
																				"nativeSrc": "2347:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:1",
																	"nodeType": "YulCase",
																	"src": "1744:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:1",
																		"nodeType": "YulBlock",
																		"src": "2410:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:1",
																					"nodeType": "YulBlock",
																					"src": "2473:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:1"
																										},
																										"nativeSrc": "2506:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:1"
																								},
																								"nativeSrc": "2500:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:1"
																				},
																				"nativeSrc": "2451:89:1",
																				"nodeType": "YulIf",
																				"src": "2451:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:1"
																							},
																							"nativeSrc": "2566:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:1"
																					},
																					"nativeSrc": "2553:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:1"
																				},
																				"nativeSrc": "2553:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:1",
																	"nodeType": "YulCase",
																	"src": "2402:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:1"
																},
																"nativeSrc": "1721:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:1"
															},
															"nativeSrc": "1714:930:1",
															"nodeType": "YulSwitch",
															"src": "1714:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1299:1"
											},
											{
												"body": {
													"nativeSrc": "2687:95:1",
													"nodeType": "YulBlock",
													"src": "2687:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2704:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2704:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2711:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2711:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2716:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2707:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nativeSrc": "2707:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2697:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:1"
																},
																"nativeSrc": "2697:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2697:31:1"
															},
															"nativeSrc": "2697:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2697:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:1"
																},
																"nativeSrc": "2737:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:1"
															},
															"nativeSrc": "2737:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:1"
																},
																"nativeSrc": "2761:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:1"
															},
															"nativeSrc": "2761:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2655:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2655:127:1"
											},
											{
												"body": {
													"nativeSrc": "2836:79:1",
													"nodeType": "YulBlock",
													"src": "2836:79:1",
													"statements": [
														{
															"nativeSrc": "2846:17:1",
															"nodeType": "YulAssignment",
															"src": "2846:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2858:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2858:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2861:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2861:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2854:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:1"
																},
																"nativeSrc": "2854:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2854:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2846:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2887:22:1",
																"nodeType": "YulBlock",
																"src": "2887:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2889:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2889:16:1"
																			},
																			"nativeSrc": "2889:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2889:18:1"
																		},
																		"nativeSrc": "2889:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2889:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2878:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2878:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2884:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2884:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2875:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2875:2:1"
																},
																"nativeSrc": "2875:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2875:11:1"
															},
															"nativeSrc": "2872:37:1",
															"nodeType": "YulIf",
															"src": "2872:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2787:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2818:1:1",
														"nodeType": "YulTypedName",
														"src": "2818:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2821:1:1",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2827:4:1",
														"nodeType": "YulTypedName",
														"src": "2827:4:1",
														"type": ""
													}
												],
												"src": "2787:128:1"
											},
											{
												"body": {
													"nativeSrc": "3021:102:1",
													"nodeType": "YulBlock",
													"src": "3021:102:1",
													"statements": [
														{
															"nativeSrc": "3031:26:1",
															"nodeType": "YulAssignment",
															"src": "3031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3043:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3054:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3039:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:1"
																},
																"nativeSrc": "3039:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3031:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3088:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3104:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3104:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3109:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3109:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3100:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3100:3:1"
																						},
																						"nativeSrc": "3100:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3100:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3113:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3113:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3096:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:1"
																				},
																				"nativeSrc": "3096:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3096:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:1"
																		},
																		"nativeSrc": "3084:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3084:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3066:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3066:6:1"
																},
																"nativeSrc": "3066:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3066:51:1"
															},
															"nativeSrc": "3066:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3066:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2920:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2990:9:1",
														"nodeType": "YulTypedName",
														"src": "2990:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3001:6:1",
														"nodeType": "YulTypedName",
														"src": "3001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3012:4:1",
														"nodeType": "YulTypedName",
														"src": "3012:4:1",
														"type": ""
													}
												],
												"src": "2920:203:1"
											},
											{
												"body": {
													"nativeSrc": "3176:77:1",
													"nodeType": "YulBlock",
													"src": "3176:77:1",
													"statements": [
														{
															"nativeSrc": "3186:16:1",
															"nodeType": "YulAssignment",
															"src": "3186:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3197:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3197:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3200:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3200:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3193:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3193:3:1"
																},
																"nativeSrc": "3193:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3193:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3186:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3225:22:1",
																"nodeType": "YulBlock",
																"src": "3225:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3227:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3227:16:1"
																			},
																			"nativeSrc": "3227:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3227:18:1"
																		},
																		"nativeSrc": "3227:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3227:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3217:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3217:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3220:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3220:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3214:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3214:2:1"
																},
																"nativeSrc": "3214:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3214:10:1"
															},
															"nativeSrc": "3211:36:1",
															"nodeType": "YulIf",
															"src": "3211:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3128:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3159:1:1",
														"nodeType": "YulTypedName",
														"src": "3159:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3162:1:1",
														"nodeType": "YulTypedName",
														"src": "3162:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3168:3:1",
														"nodeType": "YulTypedName",
														"src": "3168:3:1",
														"type": ""
													}
												],
												"src": "3128:125:1"
											},
											{
												"body": {
													"nativeSrc": "3415:188:1",
													"nodeType": "YulBlock",
													"src": "3415:188:1",
													"statements": [
														{
															"nativeSrc": "3425:26:1",
															"nodeType": "YulAssignment",
															"src": "3425:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3437:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3437:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3448:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3448:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3433:3:1"
																},
																"nativeSrc": "3433:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3433:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3425:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3425:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3467:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3482:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3482:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3498:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3498:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3503:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3503:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3494:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3494:3:1"
																						},
																						"nativeSrc": "3494:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3494:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3507:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3507:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3490:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3490:3:1"
																				},
																				"nativeSrc": "3490:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3490:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:1"
																		},
																		"nativeSrc": "3478:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:1"
																},
																"nativeSrc": "3460:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3460:51:1"
															},
															"nativeSrc": "3460:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3460:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3531:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3527:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:1"
																		},
																		"nativeSrc": "3527:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3527:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3547:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:1"
																},
																"nativeSrc": "3520:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3520:34:1"
															},
															"nativeSrc": "3520:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3520:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3574:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3585:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3585:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3570:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:1"
																		},
																		"nativeSrc": "3570:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3590:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3590:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3563:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:1"
																},
																"nativeSrc": "3563:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3563:34:1"
															},
															"nativeSrc": "3563:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3563:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3258:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3368:9:1",
														"nodeType": "YulTypedName",
														"src": "3368:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3379:6:1",
														"nodeType": "YulTypedName",
														"src": "3379:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3387:6:1",
														"nodeType": "YulTypedName",
														"src": "3387:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3395:6:1",
														"nodeType": "YulTypedName",
														"src": "3395:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3406:4:1",
														"nodeType": "YulTypedName",
														"src": "3406:4:1",
														"type": ""
													}
												],
												"src": "3258:345:1"
											},
											{
												"body": {
													"nativeSrc": "3709:76:1",
													"nodeType": "YulBlock",
													"src": "3709:76:1",
													"statements": [
														{
															"nativeSrc": "3719:26:1",
															"nodeType": "YulAssignment",
															"src": "3719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3731:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3731:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3742:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:1"
																},
																"nativeSrc": "3727:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3719:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3761:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3761:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3772:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3772:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3754:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:1"
																},
																"nativeSrc": "3754:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3754:25:1"
															},
															"nativeSrc": "3754:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3754:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3608:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3678:9:1",
														"nodeType": "YulTypedName",
														"src": "3678:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3689:6:1",
														"nodeType": "YulTypedName",
														"src": "3689:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3700:4:1",
														"nodeType": "YulTypedName",
														"src": "3700:4:1",
														"type": ""
													}
												],
												"src": "3608:177:1"
											},
											{
												"body": {
													"nativeSrc": "3964:168:1",
													"nodeType": "YulBlock",
													"src": "3964:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3981:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3981:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3992:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3974:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:1"
																},
																"nativeSrc": "3974:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3974:21:1"
															},
															"nativeSrc": "3974:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3974:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4015:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4026:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4011:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:1"
																		},
																		"nativeSrc": "4011:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4011:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4031:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4031:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4004:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:1"
																},
																"nativeSrc": "4004:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4004:30:1"
															},
															"nativeSrc": "4004:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4004:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4054:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4065:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4050:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:1"
																		},
																		"nativeSrc": "4050:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:18:1"
																	},
																	{
																		"hexValue": "427579696e672069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "4070:20:1",
																		"nodeType": "YulLiteral",
																		"src": "4070:20:1",
																		"type": "",
																		"value": "Buying is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4043:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:1"
																},
																"nativeSrc": "4043:48:1",
																"nodeType": "YulFunctionCall",
																"src": "4043:48:1"
															},
															"nativeSrc": "4043:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "4043:48:1"
														},
														{
															"nativeSrc": "4100:26:1",
															"nodeType": "YulAssignment",
															"src": "4100:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4112:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4112:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4123:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4123:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:1"
																},
																"nativeSrc": "4108:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4108:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4100:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4100:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3790:342:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3941:9:1",
														"nodeType": "YulTypedName",
														"src": "3941:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3955:4:1",
														"nodeType": "YulTypedName",
														"src": "3955:4:1",
														"type": ""
													}
												],
												"src": "3790:342:1"
											},
											{
												"body": {
													"nativeSrc": "4311:169:1",
													"nodeType": "YulBlock",
													"src": "4311:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4328:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4328:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4339:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4339:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4321:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:1"
																},
																"nativeSrc": "4321:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4321:21:1"
															},
															"nativeSrc": "4321:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4321:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4362:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4373:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4373:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4358:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4358:3:1"
																		},
																		"nativeSrc": "4358:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4358:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4378:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:1"
																},
																"nativeSrc": "4351:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4351:30:1"
															},
															"nativeSrc": "4351:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4351:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4401:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4401:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4412:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4412:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4397:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4397:3:1"
																		},
																		"nativeSrc": "4397:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:18:1"
																	},
																	{
																		"hexValue": "53656c6c696e672069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "4417:21:1",
																		"nodeType": "YulLiteral",
																		"src": "4417:21:1",
																		"type": "",
																		"value": "Selling is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4390:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:1"
																},
																"nativeSrc": "4390:49:1",
																"nodeType": "YulFunctionCall",
																"src": "4390:49:1"
															},
															"nativeSrc": "4390:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "4390:49:1"
														},
														{
															"nativeSrc": "4448:26:1",
															"nodeType": "YulAssignment",
															"src": "4448:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4460:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4460:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4471:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4456:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4456:3:1"
																},
																"nativeSrc": "4456:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4456:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4448:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4448:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4137:343:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4288:9:1",
														"nodeType": "YulTypedName",
														"src": "4288:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4302:4:1",
														"nodeType": "YulTypedName",
														"src": "4302:4:1",
														"type": ""
													}
												],
												"src": "4137:343:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Buying is disabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Selling is disabled\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052600780546001600160a01b0319908116737ec13697d98925ba1dc2bcc705c071bd168b10c217909155600880548216738de119e98707ac240aba2cb77e83b29882a343571790556009805482167303499c18f7265be9afda16504a34cd1892f278ae179055600a8054821673cc234a1d3e32148461b7eacb5a8bf4d0c4b6be74179055600b805490911673ceea0e87b553bc445c5eb2242b5f28cd81b4acaa179055600c80547501017e23e2781a1da5dace87b4f0e7bf68191263fc326001600160b01b03199091161790553480156100db575f80fd5b5060405180604001604052806009815260200168212122102a37b5b2b760b91b8152506040518060400160405280600381526020016210909160ea1b81525081600390816101299190610509565b5060046101368282610509565b5050600d80546001600160a01b0319163390811790915561016491506b033b2e3c9fd0803ce800000061019c565b61018f3061018a6b033b2e3c9fd0803ce80000006b204fce5e3e250261100000006105d7565b61019c565b426080525f600555610603565b6001600160a01b0382166101ca5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6101d55f83836101d9565b5050565b6101e483838361030a565b6001600160a01b03831661020e578060025f82825461020391906105f0565b9091555061027e9050565b6001600160a01b0383165f90815260208190526040902054818110156102605760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101c1565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661029a576002805482900390556102b8565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102fd91815260200190565b60405180910390a3505050565b6001600160a01b0383165f908152600e60205260409020548390839060ff16801561033f5750600c54600160a01b900460ff16155b156103b857600d546001600160a01b038281169116148061037757506001600160a01b0381165f908152600f602052604090205460ff165b6103b85760405162461bcd60e51b8152602060048201526012602482015271109d5e5a5b99c81a5cc8191a5cd8589b195960721b60448201526064016101c1565b6001600160a01b0381165f908152600e602052604090205460ff1680156103e95750600c54600160a81b900460ff16155b1561046d57600d546001600160a01b038381169116148061042157506001600160a01b0382165f908152600f602052604090205460ff165b61046d5760405162461bcd60e51b815260206004820152601360248201527f53656c6c696e672069732064697361626c65640000000000000000000000000060448201526064016101c1565b5050505050565b505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104a157607f821691505b6020821081036104bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561047457805f5260205f20601f840160051c810160208510156104ea5750805b601f840160051c820191505b8181101561046d575f81556001016104f6565b81516001600160401b0381111561052257610522610479565b61053681610530845461048d565b846104c5565b6020601f821160018114610568575f83156105515750848201515b5f19600385901b1c1916600184901b17845561046d565b5f84815260208120601f198516915b828110156105975787850151825560209485019460019092019101610577565b50848210156105b457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b818103818111156105ea576105ea6105c3565b92915050565b808201808211156105ea576105ea6105c3565b6080516114ce6106225f395f81816104570152610a9601526114ce5ff3fe608060405234801561000f575f80fd5b50600436106101e7575f3560e01c8063902d55a511610109578063ce7842f51161009e578063e8be9a441161006e578063e8be9a4414610479578063f771cb6514610481578063f968f49314610495578063fdff9b4d1461049d575f80fd5b8063ce7842f5146103f4578063d2f9efab14610407578063dd62ed3e1461041a578063e6fd48bc14610452575f80fd5b8063a9059cbb116100d9578063a9059cbb14610398578063b16d78cf146103ab578063b361412a146103be578063be381b85146103d1575f80fd5b8063902d55a51461036157806395d89b4114610374578063a5e90eee1461037c578063a779d0801461038f575f80fd5b80633c11e12a1161017f5780638310a74d1161014f5780638310a74d1461031f5780638342083a146103285780638ddedb331461033a5780638ed2fe911461034d575f80fd5b80633c11e12a146102af57806367859b6e146102d157806370a08231146102e45780637cdf6fb11461030c575f80fd5b806323b872dd116101ba57806323b872dd146102655780632be8781f146102785780632d3e474a1461028d578063313ce567146102a0575f80fd5b8063042249bb146101eb57806306fdde031461021b578063095ea7b31461023057806318160ddd14610253575b5f80fd5b600a546101fe906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102236104bf565b604051610212919061123e565b61024361023e36600461128e565b61054f565b6040519015158152602001610212565b6002545b604051908152602001610212565b6102436102733660046112b6565b610568565b61028b6102863660046112f0565b61058b565b005b6009546101fe906001600160a01b031681565b60405160128152602001610212565b6102436102bd36600461131a565b600e6020525f908152604090205460ff1681565b6007546101fe906001600160a01b031681565b6102576102f236600461131a565b6001600160a01b03165f9081526020819052604090205490565b61028b61031a366004611349565b6106f7565b61025760055481565b610257676765c793fa10079d601b1b81565b61028b610348366004611371565b61074b565b600c5461024390600160a01b900460ff1681565b6102576b204fce5e3e2502611000000081565b610223610793565b61028b61038a366004611349565b6107a2565b61025760065481565b6102436103a636600461128e565b6107f6565b61028b6103b9366004611371565b610803565b600c546101fe906001600160a01b031681565b6103d961084b565b60408051938452602084019290925290820152606001610212565b600b546101fe906001600160a01b031681565b6008546101fe906001600160a01b031681565b61025761042836600461138a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102577f000000000000000000000000000000000000000000000000000000000000000081565b6102576109cd565b600c5461024390600160a81b900460ff1681565b61028b6109f1565b6102436104ab36600461131a565b600f6020525f908152604090205460ff1681565b6060600380546104ce906113b2565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa906113b2565b80156105455780601f1061051c57610100808354040283529160200191610545565b820191905f5260205f20905b81548152906001019060200180831161052857829003601f168201915b5050505050905090565b5f3361055c818585610df0565b60019150505b92915050565b5f33610575858285610e02565b610580858585610e7e565b506001949350505050565b600d546001600160a01b031633146105be5760405162461bcd60e51b81526004016105b5906113ea565b60405180910390fd5b600182101580156105d0575060068211155b61060c5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016105b5565b8160010361063357600780546001600160a01b0319166001600160a01b0383161790555050565b8160020361065a57600880546001600160a01b0319166001600160a01b0383161790555050565b8160030361068157600980546001600160a01b0319166001600160a01b0383161790555050565b816004036106a857600a80546001600160a01b0319166001600160a01b0383161790555050565b816005036106cf57600b80546001600160a01b0319166001600160a01b0383161790555050565b816006036106f357600c80546001600160a01b0319166001600160a01b0383161790555b5050565b600d546001600160a01b031633146107215760405162461bcd60e51b81526004016105b5906113ea565b6001600160a01b03919091165f908152600e60205260409020805460ff1916911515919091179055565b600d546001600160a01b031633146107755760405162461bcd60e51b81526004016105b5906113ea565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6060600480546104ce906113b2565b600d546001600160a01b031633146107cc5760405162461bcd60e51b81526004016105b5906113ea565b6001600160a01b03919091165f908152600f60205260409020805460ff1916911515919091179055565b5f3361055c818585610e7e565b600d546001600160a01b0316331461082d5760405162461bcd60e51b81526004016105b5906113ea565b600c8054911515600160a81b0260ff60a81b19909216919091179055565b5f805f80600554600161085e9190611424565b9050600381116108a8576103e861088c676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61089790600561144a565b6108a19190611461565b925061094f565b600681116108de5760646108d3676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61089790600161144a565b60098111610914576064610909676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61089790600261144a565b6064610937676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61094290600361144a565b61094c9190611461565b92505b610970676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b60065461097d9085611424565b11156109b4576006546109a7676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b6109b19190611437565b92505b80836109c1600682611461565b93509350935050909192565b6109ee676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b81565b600d546001600160a01b03163314610a1b5760405162461bcd60e51b81526004016105b5906113ea565b610a3c676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b60065410610a8c5760405162461bcd60e51b815260206004820152601b60248201527f416c6c20746f6b656e7320616c726561647920756e6c6f636b6564000000000060448201526064016105b5565b5f62278d00610abb7f000000000000000000000000000000000000000000000000000000000000000042611437565b610ac59190611461565b90506005548111610b115760405162461bcd60e51b81526020600482015260166024820152754e6f206e6577206d6f6e746820746f20756e6c6f636b60501b60448201526064016105b5565b5f806005546001610b229190611424565b90505b828111610c415760038111610b7e576103e8610b58676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610b6390600561144a565b610b6d9190611461565b610b779083611424565b9150610c2f565b60068111610bb4576064610ba9676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610b6390600161144a565b60098111610bea576064610bdf676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610b6390600261144a565b6064610c0d676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610c1890600361144a565b610c229190611461565b610c2c9083611424565b91505b80610c3981611480565b915050610b25565b50610c63676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b600654610c709083611424565b1115610ca757600654610c9a676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610ca49190611437565b90505b5f8111610cea5760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b60448201526064016105b5565b816005819055508060065f828254610d029190611424565b909155505f9050610d14600683611461565b600754909150610d2f9030906001600160a01b031683610e7e565b600854610d479030906001600160a01b031683610e7e565b600954610d5f9030906001600160a01b031683610e7e565b600a54610d779030906001600160a01b031683610e7e565b600b54610d8f9030906001600160a01b031683610e7e565b600c54610da79030906001600160a01b031683610e7e565b60055460065460408051928352602083018490528201527fd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac9060600160405180910390a1505050565b610dfd8383836001610edb565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610e785781811015610e6a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105b5565b610e7884848484035f610edb565b50505050565b6001600160a01b038316610ea757604051634b637e8f60e11b81525f60048201526024016105b5565b6001600160a01b038216610ed05760405163ec442f0560e01b81525f60048201526024016105b5565b610dfd838383610fad565b6001600160a01b038416610f045760405163e602df0560e01b81525f60048201526024016105b5565b6001600160a01b038316610f2d57604051634a1406b160e11b81525f60048201526024016105b5565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610e7857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f9f91815260200190565b60405180910390a350505050565b610fb88383836110de565b6001600160a01b038316610fe2578060025f828254610fd79190611424565b909155506110529050565b6001600160a01b0383165f90815260208190526040902054818110156110345760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661106e5760028054829003905561108c565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110d191815260200190565b60405180910390a3505050565b6001600160a01b0383165f908152600e60205260409020548390839060ff1680156111135750600c54600160a01b900460ff16155b1561118c57600d546001600160a01b038281169116148061114b57506001600160a01b0381165f908152600f602052604090205460ff165b61118c5760405162461bcd60e51b8152602060048201526012602482015271109d5e5a5b99c81a5cc8191a5cd8589b195960721b60448201526064016105b5565b6001600160a01b0381165f908152600e602052604090205460ff1680156111bd5750600c54600160a81b900460ff16155b1561123757600d546001600160a01b03838116911614806111f557506001600160a01b0382165f908152600f602052604090205460ff165b6112375760405162461bcd60e51b815260206004820152601360248201527214d95b1b1a5b99c81a5cc8191a5cd8589b1959606a1b60448201526064016105b5565b5050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611289575f80fd5b919050565b5f806040838503121561129f575f80fd5b6112a883611273565b946020939093013593505050565b5f805f606084860312156112c8575f80fd5b6112d184611273565b92506112df60208501611273565b929592945050506040919091013590565b5f8060408385031215611301575f80fd5b8235915061131160208401611273565b90509250929050565b5f6020828403121561132a575f80fd5b61133382611273565b9392505050565b80358015158114611289575f80fd5b5f806040838503121561135a575f80fd5b61136383611273565b91506113116020840161133a565b5f60208284031215611381575f80fd5b6113338261133a565b5f806040838503121561139b575f80fd5b6113a483611273565b915061131160208401611273565b600181811c908216806113c657607f821691505b6020821081036113e457634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252600c908201526b4e6f7420616c6c6f7765642160a01b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561056257610562611410565b8181038181111561056257610562611410565b808202811582820484141761056257610562611410565b5f8261147b57634e487b7160e01b5f52601260045260245ffd5b500490565b5f6001820161149157611491611410565b506001019056fea2646970667358221220e48139f6ec74dd2f2cd832075023aa86de42945a39e6a247f89762f6c0a3da2b64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x7EC13697D98925BA1DC2BCC705C071BD168B10C2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND PUSH20 0x8DE119E98707AC240ABA2CB77E83B29882A34357 OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH20 0x3499C18F7265BE9AFDA16504A34CD1892F278AE OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND PUSH20 0xCC234A1D3E32148461B7EACB5A8BF4D0C4B6BE74 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xCEEA0E87B553BC445C5EB2242B5F28CD81B4ACAA OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH22 0x1017E23E2781A1DA5DACE87B4F0E7BF68191263FC32 PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x212122102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x109091 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x136 DUP3 DUP3 PUSH2 0x509 JUMP JUMPDEST POP POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x164 SWAP2 POP PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x19C JUMP JUMPDEST PUSH2 0x18F ADDRESS PUSH2 0x18A PUSH12 0x33B2E3C9FD0803CE8000000 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST TIMESTAMP PUSH1 0x80 MSTORE PUSH0 PUSH1 0x5 SSTORE PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5 PUSH0 DUP4 DUP4 PUSH2 0x1D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E4 DUP4 DUP4 DUP4 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x27E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x260 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29A JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x33F JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x3B8 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x377 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109D5E5A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x3E9 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x46D JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x421 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C696E672069732064697361626C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x474 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4EA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x46D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4F6 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x536 DUP2 PUSH2 0x530 DUP5 SLOAD PUSH2 0x48D JUMP JUMPDEST DUP5 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x568 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x551 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x46D JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x597 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x577 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x5B4 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5EA PUSH2 0x5C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5EA JUMPI PUSH2 0x5EA PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x14CE PUSH2 0x622 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x457 ADD MSTORE PUSH2 0xA96 ADD MSTORE PUSH2 0x14CE PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x902D55A5 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xCE7842F5 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE8BE9A44 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE8BE9A44 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF771CB65 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xFDFF9B4D EQ PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD2F9EFAB EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x452 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xB16D78CF EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xB361412A EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xBE381B85 EQ PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA5E90EEE EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA779D080 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x8310A74D GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x8310A74D EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x8342083A EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DDEDB33 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x8ED2FE91 EQ PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x67859B6E EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x7CDF6FB1 EQ PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x2BE8781F EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42249BB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x253 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x131A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x131A JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x13B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x13B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x545 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x528 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x575 DUP6 DUP3 DUP6 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x580 DUP6 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI POP PUSH1 0x6 DUP3 GT ISZERO JUMPDEST PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x633 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x65A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x681 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x6A8 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x6CF JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x6F3 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 GT PUSH2 0x8A8 JUMPI PUSH2 0x3E8 PUSH2 0x88C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x5 PUSH2 0x144A JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP PUSH2 0x94F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x8DE JUMPI PUSH1 0x64 PUSH2 0x8D3 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x1 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x914 JUMPI PUSH1 0x64 PUSH2 0x909 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x2 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x937 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x942 SWAP1 PUSH1 0x3 PUSH2 0x144A JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x970 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x97D SWAP1 DUP6 PUSH2 0x1424 JUMP JUMPDEST GT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9A7 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP4 PUSH2 0x9C1 PUSH1 0x6 DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x9EE PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0xA3C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x6 SLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH2 0xABB PUSH32 0x0 TIMESTAMP PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F206E6577206D6F6E746820746F20756E6C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xC41 JUMPI PUSH1 0x3 DUP2 GT PUSH2 0xB7E JUMPI PUSH2 0x3E8 PUSH2 0xB58 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x5 PUSH2 0x144A JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0xB77 SWAP1 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0xBB4 JUMPI PUSH1 0x64 PUSH2 0xBA9 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x1 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0xBEA JUMPI PUSH1 0x64 PUSH2 0xBDF PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x2 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x64 PUSH2 0xC0D PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xC18 SWAP1 PUSH1 0x3 PUSH2 0x144A JUMP JUMPDEST PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0xC2C SWAP1 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xC39 DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB25 JUMP JUMPDEST POP PUSH2 0xC63 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xC70 SWAP1 DUP4 PUSH2 0x1424 JUMP JUMPDEST GT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x6 SLOAD PUSH2 0xC9A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F20756E6C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0xD14 PUSH1 0x6 DUP4 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xD2F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xD47 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xD5F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xD77 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD8F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xDA7 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xE78 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xE78 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE78 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF9F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xFB8 DUP4 DUP4 DUP4 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFE2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1052 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x106E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x108C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1113 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x118C JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x114B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109D5E5A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11BD JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1237 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x11F5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D95B1B1A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1289 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12D1 DUP5 PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP PUSH2 0x12DF PUSH1 0x20 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1311 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1333 DUP3 PUSH2 0x1273 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1289 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1363 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH2 0x1311 PUSH1 0x20 DUP5 ADD PUSH2 0x133A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1333 DUP3 PUSH2 0x133A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13A4 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH2 0x1311 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E6F7420616C6C6F77656421 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x1410 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x1410 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x1410 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x147B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1491 JUMPI PUSH2 0x1491 PUSH2 0x1410 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP2 CODECOPY 0xF6 0xEC PUSH21 0xDD2F2CD832075023AA86DE42945A39E6A247F89762 0xF6 0xC0 LOG3 0xDA 0x2B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "22875:5804:0:-:0;;;23240:76;;;-1:-1:-1;;;;;;23240:76:0;;;23274:42;23240:76;;;;23323:72;;;;;23353:42;23323:72;;;23402:69;;;;;23429:42;23402:69;;;23478:73;;;;;23509:42;23478:73;;;23558;;;;;;23589:42;23558:73;;;23638:70;;;23756:33;-1:-1:-1;;;;;;23756:33:0;;;;;;24141:298;;;;;;;;;;12890:116;;;;;;;;;;;;;-1:-1:-1;;;12890:116:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12890:116:0;;;12965:5;12957;:13;;;;;;:::i;:::-;-1:-1:-1;12981:7:0;:17;12991:7;12981;:17;:::i;:::-;-1:-1:-1;;24192:6:0::1;:19:::0;;-1:-1:-1;;;;;;24192:19:0::1;24201:10;24192:19:::0;;::::1;::::0;;;24222:28:::1;::::0;-1:-1:-1;23016:20:0::1;24222:5;:28::i;:::-;24283:35;24297:4;23083:28;23016:20;22948:21;23083:28;:::i;:::-;24283:5;:35::i;:::-;24386:15;24369:32;::::0;24430:1:::1;24412:15;:19:::0;22875:5804;;19055:213;-1:-1:-1;;;;;19126:21:0;;19122:93;;19171:32;;-1:-1:-1;;;19171:32:0;;19200:1;19171:32;;;3066:51:1;3039:18;;19171:32:0;;;;;;;;19122:93;19225:35;19241:1;19245:7;19254:5;19225:7;:35::i;:::-;19055:213;;:::o;17519:1183::-;17605:37;17626:4;17632:2;17636:5;17605:20;:37::i;:::-;-1:-1:-1;;;;;17657:18:0;;17653:552;;17811:5;17795:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17653:552:0;;-1:-1:-1;17653:552:0;;-1:-1:-1;;;;;17871:15:0;;17849:19;17871:15;;;;;;;;;;;17905:19;;;17901:117;;;17952:50;;-1:-1:-1;;;17952:50:0;;-1:-1:-1;;;;;3478:32:1;;17952:50:0;;;3460:51:1;3527:18;;;3520:34;;;3570:18;;;3563:34;;;3433:18;;17952:50:0;3258:345:1;17901:117:0;-1:-1:-1;;;;;18141:15:0;;:9;:15;;;;;;;;;;18159:19;;;;18141:37;;17653:552;-1:-1:-1;;;;;18221:16:0;;18217:435;;18387:12;:21;;;;;;;18217:435;;;-1:-1:-1;;;;;18603:13:0;;:9;:13;;;;;;;;;;:22;;;;;;18217:435;18684:2;-1:-1:-1;;;;;18669:25:0;18678:4;-1:-1:-1;;;;;18669:25:0;;18688:5;18669:25;;;;3754::1;;3742:2;3727:18;;3608:177;18669:25:0;;;;;;;;17519:1183;;;:::o;28467:209::-;-1:-1:-1;;;;;27446:13:0;;;;;;:5;:13;;;;;;28603:4;;28609:2;;27446:13;;:31;;;;-1:-1:-1;27464:13:0;;-1:-1:-1;;;27464:13:0;;;;27463:14;27446:31;27442:186;;;27533:6;;-1:-1:-1;;;;;27520:19:0;;;27533:6;;27520:19;;:42;;-1:-1:-1;;;;;;27543:19:0;;;;;;:8;:19;;;;;;;;27520:42;27494:122;;;;-1:-1:-1;;;27494:122:0;;3992:2:1;27494:122:0;;;3974:21:1;4031:2;4011:18;;;4004:30;-1:-1:-1;;;4050:18:1;;;4043:48;4108:18;;27494:122:0;3790:342:1;27494:122:0;-1:-1:-1;;;;;27720:16:0;;;;;;:5;:16;;;;;;;;:35;;;;-1:-1:-1;27741:14:0;;-1:-1:-1;;;27741:14:0;;;;27740:15;27720:35;27716:185;;;27808:6;;-1:-1:-1;;;;;27798:16:0;;;27808:6;;27798:16;;:36;;-1:-1:-1;;;;;;27818:16:0;;;;;;:8;:16;;;;;;;;27798:36;27772:117;;;;-1:-1:-1;;;27772:117:0;;4339:2:1;27772:117:0;;;4321:21:1;4378:2;4358:18;;;4351:30;4417:21;4397:18;;;4390:49;4456:18;;27772:117:0;4137:343:1;27772:117:0;28467:209;;;;;:::o;19276:125::-;;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;1351:1299;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:1;;;2500:26;2451:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:1;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:1;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:1;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:1:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:128;2854:9;;;2875:11;;;2872:37;;;2889:18;;:::i;:::-;2787:128;;;;:::o;3128:125::-;3193:9;;;3214:10;;;3211:36;;;3227:18;;:::i;4137:343::-;22875:5804:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LOCKED_SUPPLY_804": {
									"entryPoint": 2509,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PUBLIC_SUPPLY_799": {
									"entryPoint": null,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_678": {
									"entryPoint": 3568,
									"id": 678,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_738": {
									"entryPoint": 3803,
									"id": 738,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1375": {
									"entryPoint": 4318,
									"id": 1375,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_627": {
									"entryPoint": null,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_786": {
									"entryPoint": 3586,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 3710,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_584": {
									"entryPoint": 4013,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1359,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@awardBonus_828": {
									"entryPoint": null,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyingEnabled_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@gameTreasury_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getNextUnlockInfo_1250": {
									"entryPoint": 2123,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@isDex_840": {
									"entryPoint": null,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastUnlockMonth_808": {
									"entryPoint": null,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityListing_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@managers_844": {
									"entryPoint": null,
									"id": 844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketing_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1215,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@referralBonus_825": {
									"entryPoint": null,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellingEnabled_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBuyingEnabled_1324": {
									"entryPoint": 1867,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDexAddress_1352": {
									"entryPoint": 1783,
									"id": 1352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setManager_1312": {
									"entryPoint": 1954,
									"id": 1312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setSellingEnabled_1336": {
									"entryPoint": 2051,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingReward_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTimestamp_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1939,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalUnlocked_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_454": {
									"entryPoint": 1384,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 2038,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockTokens_1093": {
									"entryPoint": 2545,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateDistributionAddress_1162": {
									"entryPoint": 1419,
									"id": 1162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7857:1",
										"nodeType": "YulBlock",
										"src": "0:7857:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:1",
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:1",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:1",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nativeSrc": "194:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:1",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nativeSrc": "190:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nativeSrc": "178:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:51:1",
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nativeSrc": "160:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nativeSrc": "343:297:1",
													"nodeType": "YulBlock",
													"src": "343:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:1",
																		"nodeType": "YulLiteral",
																		"src": "371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:1"
																},
																"nativeSrc": "353:21:1",
																"nodeType": "YulFunctionCall",
																"src": "353:21:1"
															},
															"nativeSrc": "353:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:1"
														},
														{
															"nativeSrc": "383:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:1"
																},
																"nativeSrc": "397:13:1",
																"nodeType": "YulFunctionCall",
																"src": "397:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:1",
																	"nodeType": "YulTypedName",
																	"src": "387:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:1",
																				"nodeType": "YulLiteral",
																				"src": "441:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:1"
																		},
																		"nativeSrc": "426:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nativeSrc": "419:34:1",
																"nodeType": "YulFunctionCall",
																"src": "419:34:1"
															},
															"nativeSrc": "419:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:1",
																				"nodeType": "YulLiteral",
																				"src": "483:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:1"
																		},
																		"nativeSrc": "468:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "492:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:1",
																				"nodeType": "YulLiteral",
																				"src": "500:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:1"
																		},
																		"nativeSrc": "488:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "488:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "505:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "462:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:1"
																},
																"nativeSrc": "462:50:1",
																"nodeType": "YulFunctionCall",
																"src": "462:50:1"
															},
															"nativeSrc": "462:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "462:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "536:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "536:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "547:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "547:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "532:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:1"
																				},
																				"nativeSrc": "532:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "532:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:1",
																				"nodeType": "YulLiteral",
																				"src": "556:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:1"
																		},
																		"nativeSrc": "528:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "528:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:1",
																		"nodeType": "YulLiteral",
																		"src": "561:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:1"
																},
																"nativeSrc": "521:42:1",
																"nodeType": "YulFunctionCall",
																"src": "521:42:1"
															},
															"nativeSrc": "521:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "521:42:1"
														},
														{
															"nativeSrc": "572:62:1",
															"nodeType": "YulAssignment",
															"src": "572:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "607:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "607:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "615:2:1",
																								"nodeType": "YulLiteral",
																								"src": "615:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "603:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "603:3:1"
																						},
																						"nativeSrc": "603:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "603:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "624:2:1",
																								"nodeType": "YulLiteral",
																								"src": "624:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "620:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:1"
																						},
																						"nativeSrc": "620:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "620:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "599:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:1"
																				},
																				"nativeSrc": "599:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "599:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:1"
																		},
																		"nativeSrc": "584:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "584:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:1",
																		"nodeType": "YulLiteral",
																		"src": "631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "580:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:1"
																},
																"nativeSrc": "580:54:1",
																"nodeType": "YulFunctionCall",
																"src": "580:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "572:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:1",
														"nodeType": "YulTypedName",
														"src": "312:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:1",
														"nodeType": "YulTypedName",
														"src": "323:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:1",
														"nodeType": "YulTypedName",
														"src": "334:4:1",
														"type": ""
													}
												],
												"src": "222:418:1"
											},
											{
												"body": {
													"nativeSrc": "694:124:1",
													"nodeType": "YulBlock",
													"src": "694:124:1",
													"statements": [
														{
															"nativeSrc": "704:29:1",
															"nodeType": "YulAssignment",
															"src": "704:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:1"
																},
																"nativeSrc": "713:20:1",
																"nodeType": "YulFunctionCall",
																"src": "713:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:1",
																"nodeType": "YulBlock",
																"src": "796:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:1",
																					"nodeType": "YulLiteral",
																					"src": "805:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:1",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:1"
																			},
																			"nativeSrc": "798:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:1"
																		},
																		"nativeSrc": "798:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:1",
																										"nodeType": "YulLiteral",
																										"src": "781:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:1",
																										"nodeType": "YulLiteral",
																										"src": "786:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:1"
																								},
																								"nativeSrc": "777:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:1",
																								"nodeType": "YulLiteral",
																								"src": "790:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:1"
																						},
																						"nativeSrc": "773:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:1"
																				},
																				"nativeSrc": "762:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:1"
																		},
																		"nativeSrc": "752:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:50:1",
																"nodeType": "YulFunctionCall",
																"src": "745:50:1"
															},
															"nativeSrc": "742:70:1",
															"nodeType": "YulIf",
															"src": "742:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:1",
														"nodeType": "YulTypedName",
														"src": "673:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:1",
														"nodeType": "YulTypedName",
														"src": "684:5:1",
														"type": ""
													}
												],
												"src": "645:173:1"
											},
											{
												"body": {
													"nativeSrc": "910:213:1",
													"nodeType": "YulBlock",
													"src": "910:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:1",
																"nodeType": "YulBlock",
																"src": "956:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:1",
																					"nodeType": "YulLiteral",
																					"src": "965:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:1",
																					"nodeType": "YulLiteral",
																					"src": "968:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			"nativeSrc": "958:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:1"
																		},
																		"nativeSrc": "958:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:1"
																		},
																		"nativeSrc": "927:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:1",
																		"nodeType": "YulLiteral",
																		"src": "952:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:1"
																},
																"nativeSrc": "923:32:1",
																"nodeType": "YulFunctionCall",
																"src": "923:32:1"
															},
															"nativeSrc": "920:52:1",
															"nodeType": "YulIf",
															"src": "920:52:1"
														},
														{
															"nativeSrc": "981:39:1",
															"nodeType": "YulAssignment",
															"src": "981:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:1"
																},
																"nativeSrc": "991:29:1",
																"nodeType": "YulFunctionCall",
																"src": "991:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:1"
																}
															]
														},
														{
															"nativeSrc": "1029:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:1",
																"nodeType": "YulLiteral",
																"src": "1042:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:1",
															"nodeType": "YulAssignment",
															"src": "1052:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:1"
																		},
																		"nativeSrc": "1074:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:1"
																},
																"nativeSrc": "1061:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:1"
																}
															]
														},
														{
															"nativeSrc": "1102:15:1",
															"nodeType": "YulAssignment",
															"src": "1102:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:1",
																"nodeType": "YulIdentifier",
																"src": "1112:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:1",
														"nodeType": "YulTypedName",
														"src": "868:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:1",
														"nodeType": "YulTypedName",
														"src": "879:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:1",
														"nodeType": "YulTypedName",
														"src": "891:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:1",
														"nodeType": "YulTypedName",
														"src": "899:6:1",
														"type": ""
													}
												],
												"src": "823:300:1"
											},
											{
												"body": {
													"nativeSrc": "1223:92:1",
													"nodeType": "YulBlock",
													"src": "1223:92:1",
													"statements": [
														{
															"nativeSrc": "1233:26:1",
															"nodeType": "YulAssignment",
															"src": "1233:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:1"
																},
																"nativeSrc": "1241:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:1"
																				},
																				"nativeSrc": "1293:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:1"
																		},
																		"nativeSrc": "1286:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:1"
																},
																"nativeSrc": "1268:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:1"
															},
															"nativeSrc": "1268:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:1",
														"nodeType": "YulTypedName",
														"src": "1192:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:1",
														"nodeType": "YulTypedName",
														"src": "1203:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:1",
														"nodeType": "YulTypedName",
														"src": "1214:4:1",
														"type": ""
													}
												],
												"src": "1128:187:1"
											},
											{
												"body": {
													"nativeSrc": "1421:76:1",
													"nodeType": "YulBlock",
													"src": "1421:76:1",
													"statements": [
														{
															"nativeSrc": "1431:26:1",
															"nodeType": "YulAssignment",
															"src": "1431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:1"
																},
																"nativeSrc": "1439:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:1"
															},
															"nativeSrc": "1466:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:1",
														"nodeType": "YulTypedName",
														"src": "1390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:1",
														"nodeType": "YulTypedName",
														"src": "1401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:1",
														"nodeType": "YulTypedName",
														"src": "1412:4:1",
														"type": ""
													}
												],
												"src": "1320:177:1"
											},
											{
												"body": {
													"nativeSrc": "1606:270:1",
													"nodeType": "YulBlock",
													"src": "1606:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:1",
																"nodeType": "YulBlock",
																"src": "1652:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:1"
																			},
																			"nativeSrc": "1654:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:1"
																		},
																		"nativeSrc": "1654:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:1"
																},
																"nativeSrc": "1619:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:1"
															},
															"nativeSrc": "1616:52:1",
															"nodeType": "YulIf",
															"src": "1616:52:1"
														},
														{
															"nativeSrc": "1677:39:1",
															"nodeType": "YulAssignment",
															"src": "1677:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:1"
																},
																"nativeSrc": "1687:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:1"
																}
															]
														},
														{
															"nativeSrc": "1725:48:1",
															"nodeType": "YulAssignment",
															"src": "1725:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:1"
																		},
																		"nativeSrc": "1754:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:1"
																},
																"nativeSrc": "1735:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:1"
																}
															]
														},
														{
															"nativeSrc": "1782:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:1",
																"nodeType": "YulLiteral",
																"src": "1795:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:1",
															"nodeType": "YulAssignment",
															"src": "1805:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nativeSrc": "1827:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:1"
																},
																"nativeSrc": "1814:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:1"
																}
															]
														},
														{
															"nativeSrc": "1855:15:1",
															"nodeType": "YulAssignment",
															"src": "1855:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:1",
																"nodeType": "YulIdentifier",
																"src": "1865:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:1",
														"nodeType": "YulTypedName",
														"src": "1556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:1",
														"nodeType": "YulTypedName",
														"src": "1567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:1",
														"nodeType": "YulTypedName",
														"src": "1579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:1",
														"nodeType": "YulTypedName",
														"src": "1587:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:1",
														"nodeType": "YulTypedName",
														"src": "1595:6:1",
														"type": ""
													}
												],
												"src": "1502:374:1"
											},
											{
												"body": {
													"nativeSrc": "1968:213:1",
													"nodeType": "YulBlock",
													"src": "1968:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2014:16:1",
																"nodeType": "YulBlock",
																"src": "2014:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2023:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2026:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2026:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2016:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2016:6:1"
																			},
																			"nativeSrc": "2016:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2016:12:1"
																		},
																		"nativeSrc": "2016:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2016:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1989:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1998:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1985:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:1"
																		},
																		"nativeSrc": "1985:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2010:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2010:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1981:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:1"
																},
																"nativeSrc": "1981:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1981:32:1"
															},
															"nativeSrc": "1978:52:1",
															"nodeType": "YulIf",
															"src": "1978:52:1"
														},
														{
															"nativeSrc": "2039:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2039:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2052:1:1",
																"nodeType": "YulLiteral",
																"src": "2052:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2043:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2043:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2062:32:1",
															"nodeType": "YulAssignment",
															"src": "2062:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2084:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2084:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2071:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2071:12:1"
																},
																"nativeSrc": "2071:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2071:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2062:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2062:5:1"
																}
															]
														},
														{
															"nativeSrc": "2103:15:1",
															"nodeType": "YulAssignment",
															"src": "2103:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2113:5:1",
																"nodeType": "YulIdentifier",
																"src": "2113:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:1"
																}
															]
														},
														{
															"nativeSrc": "2127:48:1",
															"nodeType": "YulAssignment",
															"src": "2127:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2160:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2171:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2171:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2156:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:1"
																		},
																		"nativeSrc": "2156:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2137:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2137:18:1"
																},
																"nativeSrc": "2137:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2137:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1881:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1926:9:1",
														"nodeType": "YulTypedName",
														"src": "1926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1937:7:1",
														"nodeType": "YulTypedName",
														"src": "1937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1949:6:1",
														"nodeType": "YulTypedName",
														"src": "1949:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1957:6:1",
														"nodeType": "YulTypedName",
														"src": "1957:6:1",
														"type": ""
													}
												],
												"src": "1881:300:1"
											},
											{
												"body": {
													"nativeSrc": "2283:87:1",
													"nodeType": "YulBlock",
													"src": "2283:87:1",
													"statements": [
														{
															"nativeSrc": "2293:26:1",
															"nodeType": "YulAssignment",
															"src": "2293:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2305:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2305:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2316:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2316:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2301:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:1"
																},
																"nativeSrc": "2301:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2301:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2293:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2293:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2335:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2350:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2350:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2358:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2358:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:1"
																		},
																		"nativeSrc": "2346:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2346:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:1"
																},
																"nativeSrc": "2328:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2328:36:1"
															},
															"nativeSrc": "2328:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2328:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2186:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2252:9:1",
														"nodeType": "YulTypedName",
														"src": "2252:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2263:6:1",
														"nodeType": "YulTypedName",
														"src": "2263:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2274:4:1",
														"nodeType": "YulTypedName",
														"src": "2274:4:1",
														"type": ""
													}
												],
												"src": "2186:184:1"
											},
											{
												"body": {
													"nativeSrc": "2445:116:1",
													"nodeType": "YulBlock",
													"src": "2445:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2491:16:1",
																"nodeType": "YulBlock",
																"src": "2491:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2503:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:1"
																			},
																			"nativeSrc": "2493:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:1"
																		},
																		"nativeSrc": "2493:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2466:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2466:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2462:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:1"
																		},
																		"nativeSrc": "2462:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2458:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:1"
																},
																"nativeSrc": "2458:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2458:32:1"
															},
															"nativeSrc": "2455:52:1",
															"nodeType": "YulIf",
															"src": "2455:52:1"
														},
														{
															"nativeSrc": "2516:39:1",
															"nodeType": "YulAssignment",
															"src": "2516:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2545:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2545:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2526:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2526:18:1"
																},
																"nativeSrc": "2526:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2526:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2375:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2411:9:1",
														"nodeType": "YulTypedName",
														"src": "2411:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2422:7:1",
														"nodeType": "YulTypedName",
														"src": "2422:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2434:6:1",
														"nodeType": "YulTypedName",
														"src": "2434:6:1",
														"type": ""
													}
												],
												"src": "2375:186:1"
											},
											{
												"body": {
													"nativeSrc": "2612:114:1",
													"nodeType": "YulBlock",
													"src": "2612:114:1",
													"statements": [
														{
															"nativeSrc": "2622:29:1",
															"nodeType": "YulAssignment",
															"src": "2622:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2644:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2644:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2631:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2631:12:1"
																},
																"nativeSrc": "2631:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2631:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2622:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2622:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2704:16:1",
																"nodeType": "YulBlock",
																"src": "2704:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2713:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2713:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2716:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2716:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2706:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2706:6:1"
																			},
																			"nativeSrc": "2706:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2706:12:1"
																		},
																		"nativeSrc": "2706:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2706:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2673:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2673:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2694:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2694:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2687:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2687:6:1"
																						},
																						"nativeSrc": "2687:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2687:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2680:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2680:6:1"
																				},
																				"nativeSrc": "2680:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2680:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2670:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:1"
																		},
																		"nativeSrc": "2670:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2663:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:1"
																},
																"nativeSrc": "2663:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2663:40:1"
															},
															"nativeSrc": "2660:60:1",
															"nodeType": "YulIf",
															"src": "2660:60:1"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "2566:160:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2591:6:1",
														"nodeType": "YulTypedName",
														"src": "2591:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2602:5:1",
														"nodeType": "YulTypedName",
														"src": "2602:5:1",
														"type": ""
													}
												],
												"src": "2566:160:1"
											},
											{
												"body": {
													"nativeSrc": "2815:170:1",
													"nodeType": "YulBlock",
													"src": "2815:170:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2861:16:1",
																"nodeType": "YulBlock",
																"src": "2861:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2870:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2870:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2863:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2863:6:1"
																			},
																			"nativeSrc": "2863:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2863:12:1"
																		},
																		"nativeSrc": "2863:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2863:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2836:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2836:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2845:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2845:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2832:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2832:3:1"
																		},
																		"nativeSrc": "2832:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2857:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2857:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2828:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:1"
																},
																"nativeSrc": "2828:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2828:32:1"
															},
															"nativeSrc": "2825:52:1",
															"nodeType": "YulIf",
															"src": "2825:52:1"
														},
														{
															"nativeSrc": "2886:39:1",
															"nodeType": "YulAssignment",
															"src": "2886:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2915:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2915:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2896:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2896:18:1"
																},
																"nativeSrc": "2896:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2896:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2886:6:1"
																}
															]
														},
														{
															"nativeSrc": "2934:45:1",
															"nodeType": "YulAssignment",
															"src": "2934:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2964:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2964:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2975:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2960:3:1"
																		},
																		"nativeSrc": "2960:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2960:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "2944:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2944:15:1"
																},
																"nativeSrc": "2944:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2944:35:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2731:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2773:9:1",
														"nodeType": "YulTypedName",
														"src": "2773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2784:7:1",
														"nodeType": "YulTypedName",
														"src": "2784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2796:6:1",
														"nodeType": "YulTypedName",
														"src": "2796:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2804:6:1",
														"nodeType": "YulTypedName",
														"src": "2804:6:1",
														"type": ""
													}
												],
												"src": "2731:254:1"
											},
											{
												"body": {
													"nativeSrc": "3057:113:1",
													"nodeType": "YulBlock",
													"src": "3057:113:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3103:16:1",
																"nodeType": "YulBlock",
																"src": "3103:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3112:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3112:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3115:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3115:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3105:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3105:6:1"
																			},
																			"nativeSrc": "3105:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3105:12:1"
																		},
																		"nativeSrc": "3105:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3105:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3078:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3078:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3087:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3087:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3074:3:1"
																		},
																		"nativeSrc": "3074:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3074:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3099:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3070:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:1"
																},
																"nativeSrc": "3070:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3070:32:1"
															},
															"nativeSrc": "3067:52:1",
															"nodeType": "YulIf",
															"src": "3067:52:1"
														},
														{
															"nativeSrc": "3128:36:1",
															"nodeType": "YulAssignment",
															"src": "3128:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3154:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3154:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "3138:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "3138:15:1"
																},
																"nativeSrc": "3138:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3138:26:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3128:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2990:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3023:9:1",
														"nodeType": "YulTypedName",
														"src": "3023:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3034:7:1",
														"nodeType": "YulTypedName",
														"src": "3034:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3046:6:1",
														"nodeType": "YulTypedName",
														"src": "3046:6:1",
														"type": ""
													}
												],
												"src": "2990:180:1"
											},
											{
												"body": {
													"nativeSrc": "3332:162:1",
													"nodeType": "YulBlock",
													"src": "3332:162:1",
													"statements": [
														{
															"nativeSrc": "3342:26:1",
															"nodeType": "YulAssignment",
															"src": "3342:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3354:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3354:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3365:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3365:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3350:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3350:3:1"
																},
																"nativeSrc": "3350:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3350:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3342:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3342:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3395:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3395:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3377:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:1"
																},
																"nativeSrc": "3377:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3377:25:1"
															},
															"nativeSrc": "3377:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3377:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3422:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3433:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3433:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3418:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:1"
																		},
																		"nativeSrc": "3418:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3438:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3411:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:1"
																},
																"nativeSrc": "3411:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3411:34:1"
															},
															"nativeSrc": "3411:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3411:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3465:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3465:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3476:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3476:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3461:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:1"
																		},
																		"nativeSrc": "3461:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3461:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3481:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:1"
																},
																"nativeSrc": "3454:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3454:34:1"
															},
															"nativeSrc": "3454:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3454:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3175:319:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3285:9:1",
														"nodeType": "YulTypedName",
														"src": "3285:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3296:6:1",
														"nodeType": "YulTypedName",
														"src": "3296:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3304:6:1",
														"nodeType": "YulTypedName",
														"src": "3304:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3312:6:1",
														"nodeType": "YulTypedName",
														"src": "3312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3323:4:1",
														"nodeType": "YulTypedName",
														"src": "3323:4:1",
														"type": ""
													}
												],
												"src": "3175:319:1"
											},
											{
												"body": {
													"nativeSrc": "3586:173:1",
													"nodeType": "YulBlock",
													"src": "3586:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3632:16:1",
																"nodeType": "YulBlock",
																"src": "3632:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3641:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3641:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3644:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3644:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3634:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3634:6:1"
																			},
																			"nativeSrc": "3634:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:12:1"
																		},
																		"nativeSrc": "3634:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3607:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3607:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3616:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3603:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:1"
																		},
																		"nativeSrc": "3603:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3599:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:1"
																},
																"nativeSrc": "3599:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3599:32:1"
															},
															"nativeSrc": "3596:52:1",
															"nodeType": "YulIf",
															"src": "3596:52:1"
														},
														{
															"nativeSrc": "3657:39:1",
															"nodeType": "YulAssignment",
															"src": "3657:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3686:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3686:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3667:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3667:18:1"
																},
																"nativeSrc": "3667:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3667:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:1"
																}
															]
														},
														{
															"nativeSrc": "3705:48:1",
															"nodeType": "YulAssignment",
															"src": "3705:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3738:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3738:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3749:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3734:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3734:3:1"
																		},
																		"nativeSrc": "3734:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3734:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3715:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3715:18:1"
																},
																"nativeSrc": "3715:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3715:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3499:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3544:9:1",
														"nodeType": "YulTypedName",
														"src": "3544:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3555:7:1",
														"nodeType": "YulTypedName",
														"src": "3555:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3567:6:1",
														"nodeType": "YulTypedName",
														"src": "3567:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3575:6:1",
														"nodeType": "YulTypedName",
														"src": "3575:6:1",
														"type": ""
													}
												],
												"src": "3499:260:1"
											},
											{
												"body": {
													"nativeSrc": "3819:325:1",
													"nodeType": "YulBlock",
													"src": "3819:325:1",
													"statements": [
														{
															"nativeSrc": "3829:22:1",
															"nodeType": "YulAssignment",
															"src": "3829:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3843:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3843:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3846:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3846:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3839:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3839:3:1"
																},
																"nativeSrc": "3839:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3839:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:1"
																}
															]
														},
														{
															"nativeSrc": "3860:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3860:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3890:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3890:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3896:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3896:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3886:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:1"
																},
																"nativeSrc": "3886:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3886:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3864:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3864:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3937:31:1",
																"nodeType": "YulBlock",
																"src": "3937:31:1",
																"statements": [
																	{
																		"nativeSrc": "3939:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3939:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3953:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3953:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3961:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3961:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3949:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3949:3:1"
																			},
																			"nativeSrc": "3949:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3949:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3939:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3939:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3917:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3917:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:1"
																},
																"nativeSrc": "3910:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3910:26:1"
															},
															"nativeSrc": "3907:61:1",
															"nodeType": "YulIf",
															"src": "3907:61:1"
														},
														{
															"body": {
																"nativeSrc": "4027:111:1",
																"nodeType": "YulBlock",
																"src": "4027:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4048:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4048:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4055:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4055:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4060:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4060:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4051:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4051:3:1"
																					},
																					"nativeSrc": "4051:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4051:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4041:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4041:6:1"
																			},
																			"nativeSrc": "4041:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4041:31:1"
																		},
																		"nativeSrc": "4041:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4041:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4092:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4095:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4095:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4085:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:1"
																			},
																			"nativeSrc": "4085:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4085:15:1"
																		},
																		"nativeSrc": "4085:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4120:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4120:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4123:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4123:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4113:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4113:6:1"
																			},
																			"nativeSrc": "4113:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:15:1"
																		},
																		"nativeSrc": "4113:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3983:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4006:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4006:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4003:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4003:2:1"
																		},
																		"nativeSrc": "4003:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4003:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3980:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3980:2:1"
																},
																"nativeSrc": "3980:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3980:38:1"
															},
															"nativeSrc": "3977:161:1",
															"nodeType": "YulIf",
															"src": "3977:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3764:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3799:4:1",
														"nodeType": "YulTypedName",
														"src": "3799:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3808:6:1",
														"nodeType": "YulTypedName",
														"src": "3808:6:1",
														"type": ""
													}
												],
												"src": "3764:380:1"
											},
											{
												"body": {
													"nativeSrc": "4323:162:1",
													"nodeType": "YulBlock",
													"src": "4323:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4333:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:1"
																},
																"nativeSrc": "4333:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4333:21:1"
															},
															"nativeSrc": "4333:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4333:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4374:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4374:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4385:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4385:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4370:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:1"
																		},
																		"nativeSrc": "4370:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4363:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:1"
																},
																"nativeSrc": "4363:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4363:30:1"
															},
															"nativeSrc": "4363:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4363:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4413:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4424:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4424:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4409:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:1"
																		},
																		"nativeSrc": "4409:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:1"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f77656421",
																		"kind": "string",
																		"nativeSrc": "4429:14:1",
																		"nodeType": "YulLiteral",
																		"src": "4429:14:1",
																		"type": "",
																		"value": "Not allowed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:1"
																},
																"nativeSrc": "4402:42:1",
																"nodeType": "YulFunctionCall",
																"src": "4402:42:1"
															},
															"nativeSrc": "4402:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "4402:42:1"
														},
														{
															"nativeSrc": "4453:26:1",
															"nodeType": "YulAssignment",
															"src": "4453:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4465:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4465:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4476:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4476:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:1"
																},
																"nativeSrc": "4461:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4461:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4453:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4149:336:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4300:9:1",
														"nodeType": "YulTypedName",
														"src": "4300:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4314:4:1",
														"nodeType": "YulTypedName",
														"src": "4314:4:1",
														"type": ""
													}
												],
												"src": "4149:336:1"
											},
											{
												"body": {
													"nativeSrc": "4664:163:1",
													"nodeType": "YulBlock",
													"src": "4664:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4674:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:1"
																},
																"nativeSrc": "4674:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4674:21:1"
															},
															"nativeSrc": "4674:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4674:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4715:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4715:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4726:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4711:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4711:3:1"
																		},
																		"nativeSrc": "4711:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4711:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4731:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4704:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4704:6:1"
																},
																"nativeSrc": "4704:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4704:30:1"
															},
															"nativeSrc": "4704:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4704:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4765:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4750:3:1"
																		},
																		"nativeSrc": "4750:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4750:18:1"
																	},
																	{
																		"hexValue": "496e76616c696420696e646578",
																		"kind": "string",
																		"nativeSrc": "4770:15:1",
																		"nodeType": "YulLiteral",
																		"src": "4770:15:1",
																		"type": "",
																		"value": "Invalid index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4743:6:1"
																},
																"nativeSrc": "4743:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4743:43:1"
															},
															"nativeSrc": "4743:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "4743:43:1"
														},
														{
															"nativeSrc": "4795:26:1",
															"nodeType": "YulAssignment",
															"src": "4795:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4807:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4807:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4818:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4818:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:1"
																},
																"nativeSrc": "4803:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4803:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4795:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4490:337:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4641:9:1",
														"nodeType": "YulTypedName",
														"src": "4641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4655:4:1",
														"nodeType": "YulTypedName",
														"src": "4655:4:1",
														"type": ""
													}
												],
												"src": "4490:337:1"
											},
											{
												"body": {
													"nativeSrc": "4864:95:1",
													"nodeType": "YulBlock",
													"src": "4864:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4881:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4888:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4888:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4893:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4893:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4884:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:1"
																		},
																		"nativeSrc": "4884:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4884:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4874:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:1"
																},
																"nativeSrc": "4874:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4874:31:1"
															},
															"nativeSrc": "4874:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4874:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4921:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4921:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4924:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4924:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:1"
																},
																"nativeSrc": "4914:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4914:15:1"
															},
															"nativeSrc": "4914:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4914:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4945:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4945:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4948:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4948:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4938:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:1"
																},
																"nativeSrc": "4938:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4938:15:1"
															},
															"nativeSrc": "4938:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4938:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4832:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4832:127:1"
											},
											{
												"body": {
													"nativeSrc": "5012:77:1",
													"nodeType": "YulBlock",
													"src": "5012:77:1",
													"statements": [
														{
															"nativeSrc": "5022:16:1",
															"nodeType": "YulAssignment",
															"src": "5022:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5033:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5033:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5036:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5029:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5029:3:1"
																},
																"nativeSrc": "5029:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5029:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5022:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5061:22:1",
																"nodeType": "YulBlock",
																"src": "5061:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5063:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5063:16:1"
																			},
																			"nativeSrc": "5063:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5063:18:1"
																		},
																		"nativeSrc": "5063:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5063:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5053:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5053:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5056:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5056:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5050:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5050:2:1"
																},
																"nativeSrc": "5050:10:1",
																"nodeType": "YulFunctionCall",
																"src": "5050:10:1"
															},
															"nativeSrc": "5047:36:1",
															"nodeType": "YulIf",
															"src": "5047:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4964:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4995:1:1",
														"nodeType": "YulTypedName",
														"src": "4995:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4998:1:1",
														"nodeType": "YulTypedName",
														"src": "4998:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5004:3:1",
														"nodeType": "YulTypedName",
														"src": "5004:3:1",
														"type": ""
													}
												],
												"src": "4964:125:1"
											},
											{
												"body": {
													"nativeSrc": "5143:79:1",
													"nodeType": "YulBlock",
													"src": "5143:79:1",
													"statements": [
														{
															"nativeSrc": "5153:17:1",
															"nodeType": "YulAssignment",
															"src": "5153:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5165:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5168:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5168:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5161:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5161:3:1"
																},
																"nativeSrc": "5161:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5161:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5153:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5153:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5194:22:1",
																"nodeType": "YulBlock",
																"src": "5194:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5196:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5196:16:1"
																			},
																			"nativeSrc": "5196:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5196:18:1"
																		},
																		"nativeSrc": "5196:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5196:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5185:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5185:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5191:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5191:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5182:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5182:2:1"
																},
																"nativeSrc": "5182:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5182:11:1"
															},
															"nativeSrc": "5179:37:1",
															"nodeType": "YulIf",
															"src": "5179:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5094:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5125:1:1",
														"nodeType": "YulTypedName",
														"src": "5125:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5128:1:1",
														"nodeType": "YulTypedName",
														"src": "5128:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5134:4:1",
														"nodeType": "YulTypedName",
														"src": "5134:4:1",
														"type": ""
													}
												],
												"src": "5094:128:1"
											},
											{
												"body": {
													"nativeSrc": "5279:116:1",
													"nodeType": "YulBlock",
													"src": "5279:116:1",
													"statements": [
														{
															"nativeSrc": "5289:20:1",
															"nodeType": "YulAssignment",
															"src": "5289:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5304:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5307:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5307:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5367:22:1",
																"nodeType": "YulBlock",
																"src": "5367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5369:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5369:16:1"
																			},
																			"nativeSrc": "5369:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5369:18:1"
																		},
																		"nativeSrc": "5369:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5338:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5338:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5331:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5331:6:1"
																				},
																				"nativeSrc": "5331:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5331:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5345:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5345:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5352:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "5352:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5361:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "5361:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5348:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5348:3:1"
																						},
																						"nativeSrc": "5348:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5348:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5342:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5342:2:1"
																				},
																				"nativeSrc": "5342:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5342:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5328:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5328:2:1"
																		},
																		"nativeSrc": "5328:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5328:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5321:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5321:6:1"
																},
																"nativeSrc": "5321:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5321:45:1"
															},
															"nativeSrc": "5318:71:1",
															"nodeType": "YulIf",
															"src": "5318:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5227:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5258:1:1",
														"nodeType": "YulTypedName",
														"src": "5258:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5261:1:1",
														"nodeType": "YulTypedName",
														"src": "5261:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5267:7:1",
														"nodeType": "YulTypedName",
														"src": "5267:7:1",
														"type": ""
													}
												],
												"src": "5227:168:1"
											},
											{
												"body": {
													"nativeSrc": "5446:171:1",
													"nodeType": "YulBlock",
													"src": "5446:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5477:111:1",
																"nodeType": "YulBlock",
																"src": "5477:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5498:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5498:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5505:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5505:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5510:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5510:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5501:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5501:3:1"
																					},
																					"nativeSrc": "5501:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5501:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5491:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5491:6:1"
																			},
																			"nativeSrc": "5491:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5491:31:1"
																		},
																		"nativeSrc": "5491:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5491:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5542:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5542:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5545:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5545:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5535:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:1"
																			},
																			"nativeSrc": "5535:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5535:15:1"
																		},
																		"nativeSrc": "5535:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5535:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5570:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5573:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5573:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5563:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5563:6:1"
																			},
																			"nativeSrc": "5563:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5563:15:1"
																		},
																		"nativeSrc": "5563:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5563:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5466:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5466:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5459:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:1"
																},
																"nativeSrc": "5459:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5459:9:1"
															},
															"nativeSrc": "5456:132:1",
															"nodeType": "YulIf",
															"src": "5456:132:1"
														},
														{
															"nativeSrc": "5597:14:1",
															"nodeType": "YulAssignment",
															"src": "5597:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5606:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5606:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5609:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5609:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:1"
																},
																"nativeSrc": "5602:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5602:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5597:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5597:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5400:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5431:1:1",
														"nodeType": "YulTypedName",
														"src": "5431:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5434:1:1",
														"nodeType": "YulTypedName",
														"src": "5434:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5440:1:1",
														"nodeType": "YulTypedName",
														"src": "5440:1:1",
														"type": ""
													}
												],
												"src": "5400:217:1"
											},
											{
												"body": {
													"nativeSrc": "5796:177:1",
													"nodeType": "YulBlock",
													"src": "5796:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5813:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5813:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5806:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5806:6:1"
																},
																"nativeSrc": "5806:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5806:21:1"
															},
															"nativeSrc": "5806:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5806:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5847:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5847:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5858:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5843:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:1"
																		},
																		"nativeSrc": "5843:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5863:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5863:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5836:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:1"
																},
																"nativeSrc": "5836:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5836:30:1"
															},
															"nativeSrc": "5836:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5836:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5886:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5886:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5897:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5882:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5882:3:1"
																		},
																		"nativeSrc": "5882:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5882:18:1"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e7320616c726561647920756e6c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "5902:29:1",
																		"nodeType": "YulLiteral",
																		"src": "5902:29:1",
																		"type": "",
																		"value": "All tokens already unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5875:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:1"
																},
																"nativeSrc": "5875:57:1",
																"nodeType": "YulFunctionCall",
																"src": "5875:57:1"
															},
															"nativeSrc": "5875:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "5875:57:1"
														},
														{
															"nativeSrc": "5941:26:1",
															"nodeType": "YulAssignment",
															"src": "5941:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5953:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5953:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5964:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5949:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:1"
																},
																"nativeSrc": "5949:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5949:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5941:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5941:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5622:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5773:9:1",
														"nodeType": "YulTypedName",
														"src": "5773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5787:4:1",
														"nodeType": "YulTypedName",
														"src": "5787:4:1",
														"type": ""
													}
												],
												"src": "5622:351:1"
											},
											{
												"body": {
													"nativeSrc": "6152:172:1",
													"nodeType": "YulBlock",
													"src": "6152:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6169:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6169:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6180:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:1"
																},
																"nativeSrc": "6162:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6162:21:1"
															},
															"nativeSrc": "6162:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6162:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6203:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6203:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6214:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6214:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6199:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:1"
																		},
																		"nativeSrc": "6199:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6219:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6192:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6192:6:1"
																},
																"nativeSrc": "6192:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6192:30:1"
															},
															"nativeSrc": "6192:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6192:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6253:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6253:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:1"
																		},
																		"nativeSrc": "6238:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:18:1"
																	},
																	{
																		"hexValue": "4e6f206e6577206d6f6e746820746f20756e6c6f636b",
																		"kind": "string",
																		"nativeSrc": "6258:24:1",
																		"nodeType": "YulLiteral",
																		"src": "6258:24:1",
																		"type": "",
																		"value": "No new month to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:1"
																},
																"nativeSrc": "6231:52:1",
																"nodeType": "YulFunctionCall",
																"src": "6231:52:1"
															},
															"nativeSrc": "6231:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "6231:52:1"
														},
														{
															"nativeSrc": "6292:26:1",
															"nodeType": "YulAssignment",
															"src": "6292:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6304:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6304:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6315:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6315:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6300:3:1"
																},
																"nativeSrc": "6300:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6300:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6292:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6292:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5978:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6129:9:1",
														"nodeType": "YulTypedName",
														"src": "6129:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6143:4:1",
														"nodeType": "YulTypedName",
														"src": "6143:4:1",
														"type": ""
													}
												],
												"src": "5978:346:1"
											},
											{
												"body": {
													"nativeSrc": "6376:88:1",
													"nodeType": "YulBlock",
													"src": "6376:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6407:22:1",
																"nodeType": "YulBlock",
																"src": "6407:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6409:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6409:16:1"
																			},
																			"nativeSrc": "6409:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6409:18:1"
																		},
																		"nativeSrc": "6409:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6409:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6392:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6392:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6403:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6403:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:1"
																		},
																		"nativeSrc": "6399:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6399:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6389:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6389:2:1"
																},
																"nativeSrc": "6389:17:1",
																"nodeType": "YulFunctionCall",
																"src": "6389:17:1"
															},
															"nativeSrc": "6386:43:1",
															"nodeType": "YulIf",
															"src": "6386:43:1"
														},
														{
															"nativeSrc": "6438:20:1",
															"nodeType": "YulAssignment",
															"src": "6438:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6449:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6449:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6456:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6456:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6445:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6445:3:1"
																},
																"nativeSrc": "6445:13:1",
																"nodeType": "YulFunctionCall",
																"src": "6445:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6438:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6329:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6358:5:1",
														"nodeType": "YulTypedName",
														"src": "6358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6368:3:1",
														"nodeType": "YulTypedName",
														"src": "6368:3:1",
														"type": ""
													}
												],
												"src": "6329:135:1"
											},
											{
												"body": {
													"nativeSrc": "6643:167:1",
													"nodeType": "YulBlock",
													"src": "6643:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6660:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6653:6:1"
																},
																"nativeSrc": "6653:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6653:21:1"
															},
															"nativeSrc": "6653:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6653:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6694:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6694:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6705:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6705:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6690:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6690:3:1"
																		},
																		"nativeSrc": "6690:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6710:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6710:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6683:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:1"
																},
																"nativeSrc": "6683:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6683:30:1"
															},
															"nativeSrc": "6683:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6683:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6733:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6733:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6744:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6744:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6729:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6729:3:1"
																		},
																		"nativeSrc": "6729:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6729:18:1"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20756e6c6f636b",
																		"kind": "string",
																		"nativeSrc": "6749:19:1",
																		"nodeType": "YulLiteral",
																		"src": "6749:19:1",
																		"type": "",
																		"value": "Nothing to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:1"
																},
																"nativeSrc": "6722:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6722:47:1"
															},
															"nativeSrc": "6722:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6722:47:1"
														},
														{
															"nativeSrc": "6778:26:1",
															"nodeType": "YulAssignment",
															"src": "6778:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6790:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6790:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6801:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6786:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6786:3:1"
																},
																"nativeSrc": "6786:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6786:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6778:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6778:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6469:341:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6620:9:1",
														"nodeType": "YulTypedName",
														"src": "6620:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6634:4:1",
														"nodeType": "YulTypedName",
														"src": "6634:4:1",
														"type": ""
													}
												],
												"src": "6469:341:1"
											},
											{
												"body": {
													"nativeSrc": "6972:188:1",
													"nodeType": "YulBlock",
													"src": "6972:188:1",
													"statements": [
														{
															"nativeSrc": "6982:26:1",
															"nodeType": "YulAssignment",
															"src": "6982:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6994:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6994:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7005:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6990:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:1"
																},
																"nativeSrc": "6990:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6990:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6982:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7024:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7024:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7039:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7039:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7055:3:1",
																								"nodeType": "YulLiteral",
																								"src": "7055:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7060:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7060:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7051:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7051:3:1"
																						},
																						"nativeSrc": "7051:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7051:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7064:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7064:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7047:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7047:3:1"
																				},
																				"nativeSrc": "7047:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7047:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7035:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:1"
																		},
																		"nativeSrc": "7035:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7035:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:1"
																},
																"nativeSrc": "7017:51:1",
																"nodeType": "YulFunctionCall",
																"src": "7017:51:1"
															},
															"nativeSrc": "7017:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "7017:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7088:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7088:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7099:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7099:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7084:3:1"
																		},
																		"nativeSrc": "7084:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7084:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7104:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7077:6:1"
																},
																"nativeSrc": "7077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7077:34:1"
															},
															"nativeSrc": "7077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7077:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7131:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7131:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7142:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7127:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7127:3:1"
																		},
																		"nativeSrc": "7127:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7127:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7147:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7147:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:1"
																},
																"nativeSrc": "7120:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7120:34:1"
															},
															"nativeSrc": "7120:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7120:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6815:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6925:9:1",
														"nodeType": "YulTypedName",
														"src": "6925:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6936:6:1",
														"nodeType": "YulTypedName",
														"src": "6936:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6944:6:1",
														"nodeType": "YulTypedName",
														"src": "6944:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6952:6:1",
														"nodeType": "YulTypedName",
														"src": "6952:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6963:4:1",
														"nodeType": "YulTypedName",
														"src": "6963:4:1",
														"type": ""
													}
												],
												"src": "6815:345:1"
											},
											{
												"body": {
													"nativeSrc": "7339:168:1",
													"nodeType": "YulBlock",
													"src": "7339:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7356:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7356:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:1"
																},
																"nativeSrc": "7349:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7349:21:1"
															},
															"nativeSrc": "7349:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7349:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7390:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7390:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7401:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7401:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7386:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:1"
																		},
																		"nativeSrc": "7386:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7406:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7379:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:1"
																},
																"nativeSrc": "7379:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7379:30:1"
															},
															"nativeSrc": "7379:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7379:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7429:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7440:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7440:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7425:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7425:3:1"
																		},
																		"nativeSrc": "7425:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7425:18:1"
																	},
																	{
																		"hexValue": "427579696e672069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "7445:20:1",
																		"nodeType": "YulLiteral",
																		"src": "7445:20:1",
																		"type": "",
																		"value": "Buying is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7418:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:1"
																},
																"nativeSrc": "7418:48:1",
																"nodeType": "YulFunctionCall",
																"src": "7418:48:1"
															},
															"nativeSrc": "7418:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "7418:48:1"
														},
														{
															"nativeSrc": "7475:26:1",
															"nodeType": "YulAssignment",
															"src": "7475:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7487:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7487:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7498:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7498:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:1"
																},
																"nativeSrc": "7483:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7483:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7475:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7475:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7165:342:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7316:9:1",
														"nodeType": "YulTypedName",
														"src": "7316:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7330:4:1",
														"nodeType": "YulTypedName",
														"src": "7330:4:1",
														"type": ""
													}
												],
												"src": "7165:342:1"
											},
											{
												"body": {
													"nativeSrc": "7686:169:1",
													"nodeType": "YulBlock",
													"src": "7686:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7703:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7703:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7714:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7696:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:1"
																},
																"nativeSrc": "7696:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7696:21:1"
															},
															"nativeSrc": "7696:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7696:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7748:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7748:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:3:1"
																		},
																		"nativeSrc": "7733:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7733:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7753:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7753:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:1"
																},
																"nativeSrc": "7726:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7726:30:1"
															},
															"nativeSrc": "7726:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7726:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7776:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7776:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7787:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7787:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7772:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:1"
																		},
																		"nativeSrc": "7772:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7772:18:1"
																	},
																	{
																		"hexValue": "53656c6c696e672069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "7792:21:1",
																		"nodeType": "YulLiteral",
																		"src": "7792:21:1",
																		"type": "",
																		"value": "Selling is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7765:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7765:6:1"
																},
																"nativeSrc": "7765:49:1",
																"nodeType": "YulFunctionCall",
																"src": "7765:49:1"
															},
															"nativeSrc": "7765:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "7765:49:1"
														},
														{
															"nativeSrc": "7823:26:1",
															"nodeType": "YulAssignment",
															"src": "7823:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7835:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7835:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7846:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7831:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7831:3:1"
																},
																"nativeSrc": "7831:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7831:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7823:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7823:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7512:343:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7663:9:1",
														"nodeType": "YulTypedName",
														"src": "7663:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7677:4:1",
														"nodeType": "YulTypedName",
														"src": "7677:4:1",
														"type": ""
													}
												],
												"src": "7512:343:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not allowed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"All tokens already unlocked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"No new month to unlock\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Nothing to unlock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Buying is disabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Selling is disabled\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"806": [
									{
										"length": 32,
										"start": 1111
									},
									{
										"length": 32,
										"start": 2710
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101e7575f3560e01c8063902d55a511610109578063ce7842f51161009e578063e8be9a441161006e578063e8be9a4414610479578063f771cb6514610481578063f968f49314610495578063fdff9b4d1461049d575f80fd5b8063ce7842f5146103f4578063d2f9efab14610407578063dd62ed3e1461041a578063e6fd48bc14610452575f80fd5b8063a9059cbb116100d9578063a9059cbb14610398578063b16d78cf146103ab578063b361412a146103be578063be381b85146103d1575f80fd5b8063902d55a51461036157806395d89b4114610374578063a5e90eee1461037c578063a779d0801461038f575f80fd5b80633c11e12a1161017f5780638310a74d1161014f5780638310a74d1461031f5780638342083a146103285780638ddedb331461033a5780638ed2fe911461034d575f80fd5b80633c11e12a146102af57806367859b6e146102d157806370a08231146102e45780637cdf6fb11461030c575f80fd5b806323b872dd116101ba57806323b872dd146102655780632be8781f146102785780632d3e474a1461028d578063313ce567146102a0575f80fd5b8063042249bb146101eb57806306fdde031461021b578063095ea7b31461023057806318160ddd14610253575b5f80fd5b600a546101fe906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102236104bf565b604051610212919061123e565b61024361023e36600461128e565b61054f565b6040519015158152602001610212565b6002545b604051908152602001610212565b6102436102733660046112b6565b610568565b61028b6102863660046112f0565b61058b565b005b6009546101fe906001600160a01b031681565b60405160128152602001610212565b6102436102bd36600461131a565b600e6020525f908152604090205460ff1681565b6007546101fe906001600160a01b031681565b6102576102f236600461131a565b6001600160a01b03165f9081526020819052604090205490565b61028b61031a366004611349565b6106f7565b61025760055481565b610257676765c793fa10079d601b1b81565b61028b610348366004611371565b61074b565b600c5461024390600160a01b900460ff1681565b6102576b204fce5e3e2502611000000081565b610223610793565b61028b61038a366004611349565b6107a2565b61025760065481565b6102436103a636600461128e565b6107f6565b61028b6103b9366004611371565b610803565b600c546101fe906001600160a01b031681565b6103d961084b565b60408051938452602084019290925290820152606001610212565b600b546101fe906001600160a01b031681565b6008546101fe906001600160a01b031681565b61025761042836600461138a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102577f000000000000000000000000000000000000000000000000000000000000000081565b6102576109cd565b600c5461024390600160a81b900460ff1681565b61028b6109f1565b6102436104ab36600461131a565b600f6020525f908152604090205460ff1681565b6060600380546104ce906113b2565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa906113b2565b80156105455780601f1061051c57610100808354040283529160200191610545565b820191905f5260205f20905b81548152906001019060200180831161052857829003601f168201915b5050505050905090565b5f3361055c818585610df0565b60019150505b92915050565b5f33610575858285610e02565b610580858585610e7e565b506001949350505050565b600d546001600160a01b031633146105be5760405162461bcd60e51b81526004016105b5906113ea565b60405180910390fd5b600182101580156105d0575060068211155b61060c5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016105b5565b8160010361063357600780546001600160a01b0319166001600160a01b0383161790555050565b8160020361065a57600880546001600160a01b0319166001600160a01b0383161790555050565b8160030361068157600980546001600160a01b0319166001600160a01b0383161790555050565b816004036106a857600a80546001600160a01b0319166001600160a01b0383161790555050565b816005036106cf57600b80546001600160a01b0319166001600160a01b0383161790555050565b816006036106f357600c80546001600160a01b0319166001600160a01b0383161790555b5050565b600d546001600160a01b031633146107215760405162461bcd60e51b81526004016105b5906113ea565b6001600160a01b03919091165f908152600e60205260409020805460ff1916911515919091179055565b600d546001600160a01b031633146107755760405162461bcd60e51b81526004016105b5906113ea565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6060600480546104ce906113b2565b600d546001600160a01b031633146107cc5760405162461bcd60e51b81526004016105b5906113ea565b6001600160a01b03919091165f908152600f60205260409020805460ff1916911515919091179055565b5f3361055c818585610e7e565b600d546001600160a01b0316331461082d5760405162461bcd60e51b81526004016105b5906113ea565b600c8054911515600160a81b0260ff60a81b19909216919091179055565b5f805f80600554600161085e9190611424565b9050600381116108a8576103e861088c676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61089790600561144a565b6108a19190611461565b925061094f565b600681116108de5760646108d3676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61089790600161144a565b60098111610914576064610909676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61089790600261144a565b6064610937676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b61094290600361144a565b61094c9190611461565b92505b610970676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b60065461097d9085611424565b11156109b4576006546109a7676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b6109b19190611437565b92505b80836109c1600682611461565b93509350935050909192565b6109ee676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b81565b600d546001600160a01b03163314610a1b5760405162461bcd60e51b81526004016105b5906113ea565b610a3c676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b60065410610a8c5760405162461bcd60e51b815260206004820152601b60248201527f416c6c20746f6b656e7320616c726561647920756e6c6f636b6564000000000060448201526064016105b5565b5f62278d00610abb7f000000000000000000000000000000000000000000000000000000000000000042611437565b610ac59190611461565b90506005548111610b115760405162461bcd60e51b81526020600482015260166024820152754e6f206e6577206d6f6e746820746f20756e6c6f636b60501b60448201526064016105b5565b5f806005546001610b229190611424565b90505b828111610c415760038111610b7e576103e8610b58676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610b6390600561144a565b610b6d9190611461565b610b779083611424565b9150610c2f565b60068111610bb4576064610ba9676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610b6390600161144a565b60098111610bea576064610bdf676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610b6390600261144a565b6064610c0d676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610c1890600361144a565b610c229190611461565b610c2c9083611424565b91505b80610c3981611480565b915050610b25565b50610c63676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b600654610c709083611424565b1115610ca757600654610c9a676765c793fa10079d601b1b6b204fce5e3e25026110000000611437565b610ca49190611437565b90505b5f8111610cea5760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b60448201526064016105b5565b816005819055508060065f828254610d029190611424565b909155505f9050610d14600683611461565b600754909150610d2f9030906001600160a01b031683610e7e565b600854610d479030906001600160a01b031683610e7e565b600954610d5f9030906001600160a01b031683610e7e565b600a54610d779030906001600160a01b031683610e7e565b600b54610d8f9030906001600160a01b031683610e7e565b600c54610da79030906001600160a01b031683610e7e565b60055460065460408051928352602083018490528201527fd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac9060600160405180910390a1505050565b610dfd8383836001610edb565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610e785781811015610e6a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105b5565b610e7884848484035f610edb565b50505050565b6001600160a01b038316610ea757604051634b637e8f60e11b81525f60048201526024016105b5565b6001600160a01b038216610ed05760405163ec442f0560e01b81525f60048201526024016105b5565b610dfd838383610fad565b6001600160a01b038416610f045760405163e602df0560e01b81525f60048201526024016105b5565b6001600160a01b038316610f2d57604051634a1406b160e11b81525f60048201526024016105b5565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610e7857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f9f91815260200190565b60405180910390a350505050565b610fb88383836110de565b6001600160a01b038316610fe2578060025f828254610fd79190611424565b909155506110529050565b6001600160a01b0383165f90815260208190526040902054818110156110345760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661106e5760028054829003905561108c565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110d191815260200190565b60405180910390a3505050565b6001600160a01b0383165f908152600e60205260409020548390839060ff1680156111135750600c54600160a01b900460ff16155b1561118c57600d546001600160a01b038281169116148061114b57506001600160a01b0381165f908152600f602052604090205460ff165b61118c5760405162461bcd60e51b8152602060048201526012602482015271109d5e5a5b99c81a5cc8191a5cd8589b195960721b60448201526064016105b5565b6001600160a01b0381165f908152600e602052604090205460ff1680156111bd5750600c54600160a81b900460ff16155b1561123757600d546001600160a01b03838116911614806111f557506001600160a01b0382165f908152600f602052604090205460ff165b6112375760405162461bcd60e51b815260206004820152601360248201527214d95b1b1a5b99c81a5cc8191a5cd8589b1959606a1b60448201526064016105b5565b5050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611289575f80fd5b919050565b5f806040838503121561129f575f80fd5b6112a883611273565b946020939093013593505050565b5f805f606084860312156112c8575f80fd5b6112d184611273565b92506112df60208501611273565b929592945050506040919091013590565b5f8060408385031215611301575f80fd5b8235915061131160208401611273565b90509250929050565b5f6020828403121561132a575f80fd5b61133382611273565b9392505050565b80358015158114611289575f80fd5b5f806040838503121561135a575f80fd5b61136383611273565b91506113116020840161133a565b5f60208284031215611381575f80fd5b6113338261133a565b5f806040838503121561139b575f80fd5b6113a483611273565b915061131160208401611273565b600181811c908216806113c657607f821691505b6020821081036113e457634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252600c908201526b4e6f7420616c6c6f7765642160a01b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561056257610562611410565b8181038181111561056257610562611410565b808202811582820484141761056257610562611410565b5f8261147b57634e487b7160e01b5f52601260045260245ffd5b500490565b5f6001820161149157611491611410565b506001019056fea2646970667358221220e48139f6ec74dd2f2cd832075023aa86de42945a39e6a247f89762f6c0a3da2b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x902D55A5 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xCE7842F5 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE8BE9A44 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE8BE9A44 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF771CB65 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xFDFF9B4D EQ PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD2F9EFAB EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x452 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xB16D78CF EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xB361412A EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xBE381B85 EQ PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA5E90EEE EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA779D080 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x8310A74D GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x8310A74D EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x8342083A EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DDEDB33 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x8ED2FE91 EQ PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x67859B6E EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x7CDF6FB1 EQ PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x2BE8781F EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42249BB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x253 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x131A JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x131A JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x13B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x13B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x545 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x528 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x575 DUP6 DUP3 DUP6 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x580 DUP6 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI POP PUSH1 0x6 DUP3 GT ISZERO JUMPDEST PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x633 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x65A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x681 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x6A8 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x6CF JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x6F3 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 GT PUSH2 0x8A8 JUMPI PUSH2 0x3E8 PUSH2 0x88C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x5 PUSH2 0x144A JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP PUSH2 0x94F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x8DE JUMPI PUSH1 0x64 PUSH2 0x8D3 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x1 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x914 JUMPI PUSH1 0x64 PUSH2 0x909 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x2 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x937 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x942 SWAP1 PUSH1 0x3 PUSH2 0x144A JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x970 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x97D SWAP1 DUP6 PUSH2 0x1424 JUMP JUMPDEST GT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9A7 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP4 PUSH2 0x9C1 PUSH1 0x6 DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x9EE PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0xA3C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x6 SLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH2 0xABB PUSH32 0x0 TIMESTAMP PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F206E6577206D6F6E746820746F20756E6C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xC41 JUMPI PUSH1 0x3 DUP2 GT PUSH2 0xB7E JUMPI PUSH2 0x3E8 PUSH2 0xB58 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x5 PUSH2 0x144A JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0xB77 SWAP1 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0xBB4 JUMPI PUSH1 0x64 PUSH2 0xBA9 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x1 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0xBEA JUMPI PUSH1 0x64 PUSH2 0xBDF PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x2 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x64 PUSH2 0xC0D PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xC18 SWAP1 PUSH1 0x3 PUSH2 0x144A JUMP JUMPDEST PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH2 0xC2C SWAP1 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xC39 DUP2 PUSH2 0x1480 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB25 JUMP JUMPDEST POP PUSH2 0xC63 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xC70 SWAP1 DUP4 PUSH2 0x1424 JUMP JUMPDEST GT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x6 SLOAD PUSH2 0xC9A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F20756E6C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0xD14 PUSH1 0x6 DUP4 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xD2F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xD47 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xD5F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xD77 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD8F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xDA7 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xE78 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xE78 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE78 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF9F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xFB8 DUP4 DUP4 DUP4 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFE2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1052 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x106E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x108C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10D1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1113 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x118C JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x114B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109D5E5A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11BD JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1237 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x11F5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D95B1B1A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1289 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12D1 DUP5 PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP PUSH2 0x12DF PUSH1 0x20 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1301 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1311 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1333 DUP3 PUSH2 0x1273 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1289 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1363 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH2 0x1311 PUSH1 0x20 DUP5 ADD PUSH2 0x133A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1333 DUP3 PUSH2 0x133A JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13A4 DUP4 PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP PUSH2 0x1311 PUSH1 0x20 DUP5 ADD PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x13C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E6F7420616C6C6F77656421 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x1410 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x1410 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x1410 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x147B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1491 JUMPI PUSH2 0x1491 PUSH2 0x1410 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP2 CODECOPY 0xF6 0xEC PUSH21 0xDD2F2CD832075023AA86DE42945A39E6A247F89762 0xF6 0xC0 LOG3 0xDA 0x2B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "22875:5804:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23478:73;;;;;-1:-1:-1;;;;;23478:73:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;23478:73:0;;;;;;;;13076:91;;;:::i;:::-;;;;;;;:::i;15394:215::-;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:1;;1286:22;1268:41;;1256:2;1241:18;15394:215:0;1128:187:1;14178:99:0;14257:12;;14178:99;;;1466:25:1;;;1454:2;1439:18;14178:99:0;1320:177:1;16219:283:0;;;;;;:::i;:::-;;:::i;26052:521::-;;;;;;:::i;:::-;;:::i;:::-;;23402:69;;;;;-1:-1:-1;;;;;23402:69:0;;;14029:84;;;14103:2;2328:36:1;;2316:2;2301:18;14029:84:0;2186:184:1;23819:37:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;23240:76;;;;;-1:-1:-1;;;;;23240:76:0;;;14340:118;;;;;;:::i;:::-;-1:-1:-1;;;;;14432:18:0;14405:7;14432:18;;;;;;;;;;;;14340:118;28268;;;;;;:::i;:::-;;:::i;23166:30::-;;;;;;22976:60;;-1:-1:-1;;;22976:60:0;;28048:101;;;;;;:::i;:::-;;:::i;23717:32::-;;;;;-1:-1:-1;;;23717:32:0;;;;;;22909:60;;22948:21;22909:60;;13286:95;;;:::i;27928:112::-;;;;;;:::i;:::-;;:::i;23203:28::-;;;;;;14663:182;;;;;;:::i;:::-;;:::i;28157:103::-;;;;;;:::i;:::-;;:::i;23638:70::-;;;;;-1:-1:-1;;;;;23638:70:0;;;26581:704;;;:::i;:::-;;;;3377:25:1;;;3433:2;3418:18;;3411:34;;;;3461:18;;;3454:34;3365:2;3350:18;26581:704:0;3175:319:1;23558:73:0;;;;;-1:-1:-1;;;;;23558:73:0;;;23323:72;;;;;-1:-1:-1;;;;;23323:72:0;;;14908:167;;;;;;:::i;:::-;-1:-1:-1;;;;;15040:18:0;;;15013:7;15040:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14908:167;23120:39;;;;;23043:68;;;:::i;23756:33::-;;;;;-1:-1:-1;;;23756:33:0;;;;;;24447:1597;;;:::i;23863:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13076:91;13121:13;13154:5;13147:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13076:91;:::o;15394:215::-;15492:4;4367:10;15548:31;4367:10;15564:7;15573:5;15548:8;:31::i;:::-;15597:4;15590:11;;;15394:215;;;;;:::o;16219:283::-;16340:4;4367:10;16398:37;16414:4;4367:10;16429:5;16398:15;:37::i;:::-;16446:26;16456:4;16462:2;16466:5;16446:9;:26::i;:::-;-1:-1:-1;16490:4:0;;16219:283;-1:-1:-1;;;;16219:283:0:o;26052:521::-;24076:6;;-1:-1:-1;;;;;24076:6:0;24086:10;24076:20;24068:45;;;;-1:-1:-1;;;24068:45:0;;;;;;;:::i;:::-;;;;;;;;;26192:1:::1;26183:5;:10;;:24;;;;;26206:1;26197:5;:10;;26183:24;26175:50;;;::::0;-1:-1:-1;;;26175:50:0;;4692:2:1;26175:50:0::1;::::0;::::1;4674:21:1::0;4731:2;4711:18;;;4704:30;-1:-1:-1;;;4750:18:1;;;4743:43;4803:18;;26175:50:0::1;4490:337:1::0;26175:50:0::1;26242:5;26251:1;26242:10:::0;26238:327:::1;;26254:16;:29:::0;;-1:-1:-1;;;;;;26254:29:0::1;-1:-1:-1::0;;;;;26254:29:0;::::1;;::::0;;26052:521;;:::o;26238:327::-:1;26303:5;26312:1;26303:10:::0;26299:266:::1;;26315:12;:25:::0;;-1:-1:-1;;;;;;26315:25:0::1;-1:-1:-1::0;;;;;26315:25:0;::::1;;::::0;;26052:521;;:::o;26299:266::-:1;26360:5;26369:1;26360:10:::0;26356:209:::1;;26372:9;:22:::0;;-1:-1:-1;;;;;;26372:22:0::1;-1:-1:-1::0;;;;;26372:22:0;::::1;;::::0;;26052:521;;:::o;26356:209::-:1;26414:5;26423:1;26414:10:::0;26410:155:::1;;26426:13;:26:::0;;-1:-1:-1;;;;;;26426:26:0::1;-1:-1:-1::0;;;;;26426:26:0;::::1;;::::0;;26052:521;;:::o;26410:155::-:1;26472:5;26481:1;26472:10:::0;26468:97:::1;;26484:13;:26:::0;;-1:-1:-1;;;;;;26484:26:0::1;-1:-1:-1::0;;;;;26484:26:0;::::1;;::::0;;26052:521;;:::o;26468:97::-:1;26530:5;26539:1;26530:10:::0;26526:39:::1;;26542:10;:23:::0;;-1:-1:-1;;;;;;26542:23:0::1;-1:-1:-1::0;;;;;26542:23:0;::::1;;::::0;;26526:39:::1;26052:521:::0;;:::o;28268:118::-;24076:6;;-1:-1:-1;;;;;24076:6:0;24086:10;24076:20;24068:45;;;;-1:-1:-1;;;24068:45:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;28352:17:0;;;::::1;;::::0;;;:5:::1;:17;::::0;;;;:26;;-1:-1:-1;;28352:26:0::1;::::0;::::1;;::::0;;;::::1;::::0;;28268:118::o;28048:101::-;24076:6;;-1:-1:-1;;;;;24076:6:0;24086:10;24076:20;24068:45;;;;-1:-1:-1;;;24068:45:0;;;;;;;:::i;:::-;28117:13:::1;:24:::0;;;::::1;;-1:-1:-1::0;;;28117:24:0::1;-1:-1:-1::0;;;;28117:24:0;;::::1;::::0;;;::::1;::::0;;28048:101::o;13286:95::-;13333:13;13366:7;13359:14;;;;;:::i;27928:112::-;24076:6;;-1:-1:-1;;;;;24076:6:0;24086:10;24076:20;24068:45;;;;-1:-1:-1;;;24068:45:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;28006:17:0;;;::::1;;::::0;;;:8:::1;:17;::::0;;;;:26;;-1:-1:-1;;28006:26:0::1;::::0;::::1;;::::0;;;::::1;::::0;;27928:112::o;14663:182::-;14732:4;4367:10;14788:27;4367:10;14805:2;14809:5;14788:9;:27::i;28157:103::-;24076:6;;-1:-1:-1;;;;;24076:6:0;24086:10;24076:20;24068:45;;;;-1:-1:-1;;;24068:45:0;;;;;;;:::i;:::-;28227:14:::1;:25:::0;;;::::1;;-1:-1:-1::0;;;28227:25:0::1;-1:-1:-1::0;;;;28227:25:0;;::::1;::::0;;;::::1;::::0;;28157:103::o;26581:704::-;26660:13;26675:19;26696:17;26731:9;26743:15;;26761:1;26743:19;;;;:::i;:::-;26731:31;;26784:1;26779;:6;26775:319;;26838:4;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;26817:17;;26833:1;26817:17;:::i;:::-;26816:26;;;;:::i;:::-;26802:40;;26775:319;;;26869:1;26864;:6;26860:234;;26923:3;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;26902:17;;26918:1;26902:17;:::i;26860:234::-;26953:1;26948;:6;26944:150;;27007:3;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;26986:17;;27002:1;26986:17;:::i;26944:150::-;27079:3;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;27058:17;;27074:1;27058:17;:::i;:::-;27057:25;;;;:::i;:::-;27043:39;;26944:150;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;27124:13;;27110:27;;:11;:27;:::i;:::-;:43;27106:119;;;27200:13;;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;27184:29;;;;:::i;:::-;27170:43;;27106:119;27245:1;27248:11;27261:15;27275:1;27248:11;27261:15;:::i;:::-;27237:40;;;;;;;26581:704;;;:::o;23043:68::-;23083:28;-1:-1:-1;;;22948:21:0;23083:28;:::i;:::-;23043:68;:::o;24447:1597::-;24076:6;;-1:-1:-1;;;;;24076:6:0;24086:10;24076:20;24068:45;;;;-1:-1:-1;;;24068:45:0;;;;;;;:::i;:::-;23083:28:::1;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;24507:13;;:29;24499:69;;;::::0;-1:-1:-1;;;24499:69:0;;5824:2:1;24499:69:0::1;::::0;::::1;5806:21:1::0;5863:2;5843:18;;;5836:30;5902:29;5882:18;;;5875:57;5949:18;;24499:69:0::1;5622:351:1::0;24499:69:0::1;24581:21;24642:7;24606:32;24624:14;24606:15;:32;:::i;:::-;24605:44;;;;:::i;:::-;24581:68;;24684:15;;24668:13;:31;24660:66;;;::::0;-1:-1:-1;;;24660:66:0;;6180:2:1;24660:66:0::1;::::0;::::1;6162:21:1::0;6219:2;6199:18;;;6192:30;-1:-1:-1;;;6238:18:1;;;6231:52;6300:18;;24660:66:0::1;5978:346:1::0;24660:66:0::1;24739:22;24783:9:::0;24795:15:::1;;24813:1;24795:19;;;;:::i;:::-;24783:31;;24778:482;24821:13;24816:1;:18;24778:482;;24865:1;24860;:6;24856:393;;24927:4;23083:28;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;24906:17;::::0;24922:1:::1;24906:17;:::i;:::-;24905:26;;;;:::i;:::-;24887:44;::::0;;::::1;:::i;:::-;;;24856:393;;;24970:1;24965;:6;24961:288;;25032:3;23083:28;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;25011:17;::::0;25027:1:::1;25011:17;:::i;24961:288::-;25072:1;25067;:6;25063:186;;25134:3;23083:28;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;25113:17;::::0;25129:1:::1;25113:17;:::i;25063:186::-;25224:3;23083:28;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;25203:17;::::0;25219:1:::1;25203:17;:::i;:::-;25202:25;;;;:::i;:::-;25184:43;::::0;;::::1;:::i;:::-;;;25063:186;24836:3:::0;::::1;::::0;::::1;:::i;:::-;;;;24778:482;;;-1:-1:-1::0;23083:28:0::1;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;25293:13;::::0;25276:30:::1;::::0;:14;:30:::1;:::i;:::-;:46;25272:161;;;25372:13;::::0;23083:28:::1;-1:-1:-1::0;;;22948:21:0::1;23083:28;:::i;:::-;25356:29;;;;:::i;:::-;25339:46;;25272:161;25470:1;25453:14;:18;25445:48;;;::::0;-1:-1:-1;;;25445:48:0;;6671:2:1;25445:48:0::1;::::0;::::1;6653:21:1::0;6710:2;6690:18;;;6683:30;-1:-1:-1;;;6729:18:1;;;6722:47;6786:18;;25445:48:0::1;6469:341:1::0;25445:48:0::1;25524:13;25506:15;:31;;;;25565:14;25548:13;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;25592:13:0::1;::::0;-1:-1:-1;25608:18:0::1;25625:1;25608:14:::0;:18:::1;:::i;:::-;25664:16;::::0;25592:34;;-1:-1:-1;25639:49:0::1;::::0;25657:4:::1;::::0;-1:-1:-1;;;;;25664:16:0::1;25592:34:::0;25639:9:::1;:49::i;:::-;25724:12;::::0;25699:45:::1;::::0;25717:4:::1;::::0;-1:-1:-1;;;;;25724:12:0::1;25738:5:::0;25699:9:::1;:45::i;:::-;25780:9;::::0;25755:42:::1;::::0;25773:4:::1;::::0;-1:-1:-1;;;;;25780:9:0::1;25791:5:::0;25755:9:::1;:42::i;:::-;25833:13;::::0;25808:46:::1;::::0;25826:4:::1;::::0;-1:-1:-1;;;;;25833:13:0::1;25848:5:::0;25808:9:::1;:46::i;:::-;25890:13;::::0;25865:46:::1;::::0;25883:4:::1;::::0;-1:-1:-1;;;;;25890:13:0::1;25905:5:::0;25865:9:::1;:46::i;:::-;25947:10;::::0;25922:43:::1;::::0;25940:4:::1;::::0;-1:-1:-1;;;;;25947:10:0::1;25959:5:::0;25922:9:::1;:43::i;:::-;25998:15;::::0;26022:13:::1;::::0;25983:53:::1;::::0;;3377:25:1;;;3433:2;3418:18;;3411:34;;;3461:18;;3454:34;25983:53:0::1;::::0;3365:2:1;3350:18;25983:53:0::1;;;;;;;24488:1556;;;24447:1597::o:0;20491:130::-;20576:37;20585:5;20592:7;20601:5;20608:4;20576:8;:37::i;:::-;20491:130;;;:::o;22266:602::-;-1:-1:-1;;;;;15040:18:0;;;22400:24;15040:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;22467:36:0;;22463:398;;;22543:5;22524:16;:24;22520:214;;;22576:142;;-1:-1:-1;;;22576:142:0;;-1:-1:-1;;;;;7035:32:1;;22576:142:0;;;7017:51:1;7084:18;;;7077:34;;;7127:18;;;7120:34;;;6990:18;;22576:142:0;6815:345:1;22520:214:0;22777:57;22786:5;22793:7;22821:5;22802:16;:24;22828:5;22777:8;:57::i;:::-;22389:479;22266:602;;;:::o;16887:308::-;-1:-1:-1;;;;;16971:18:0;;16967:88;;17013:30;;-1:-1:-1;;;17013:30:0;;17040:1;17013:30;;;160:51:1;133:18;;17013:30:0;14:203:1;16967:88:0;-1:-1:-1;;;;;17069:16:0;;17065:88;;17109:32;;-1:-1:-1;;;17109:32:0;;17138:1;17109:32;;;160:51:1;133:18;;17109:32:0;14:203:1;17065:88:0;17163:24;17171:4;17177:2;17181:5;17163:7;:24::i;21488:486::-;-1:-1:-1;;;;;21644:19:0;;21640:91;;21687:32;;-1:-1:-1;;;21687:32:0;;21716:1;21687:32;;;160:51:1;133:18;;21687:32:0;14:203:1;21640:91:0;-1:-1:-1;;;;;21745:21:0;;21741:92;;21790:31;;-1:-1:-1;;;21790:31:0;;21818:1;21790:31;;;160:51:1;133:18;;21790:31:0;14:203:1;21741:92:0;-1:-1:-1;;;;;21843:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;21889:78;;;;21940:7;-1:-1:-1;;;;;21924:31:0;21933:5;-1:-1:-1;;;;;21924:31:0;;21949:5;21924:31;;;;1466:25:1;;1454:2;1439:18;;1320:177;21924:31:0;;;;;;;;21488:486;;;;:::o;17519:1183::-;17605:37;17626:4;17632:2;17636:5;17605:20;:37::i;:::-;-1:-1:-1;;;;;17657:18:0;;17653:552;;17811:5;17795:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17653:552:0;;-1:-1:-1;17653:552:0;;-1:-1:-1;;;;;17871:15:0;;17849:19;17871:15;;;;;;;;;;;17905:19;;;17901:117;;;17952:50;;-1:-1:-1;;;17952:50:0;;-1:-1:-1;;;;;7035:32:1;;17952:50:0;;;7017:51:1;7084:18;;;7077:34;;;7127:18;;;7120:34;;;6990:18;;17952:50:0;6815:345:1;17901:117:0;-1:-1:-1;;;;;18141:15:0;;:9;:15;;;;;;;;;;18159:19;;;;18141:37;;17653:552;-1:-1:-1;;;;;18221:16:0;;18217:435;;18387:12;:21;;;;;;;18217:435;;;-1:-1:-1;;;;;18603:13:0;;:9;:13;;;;;;;;;;:22;;;;;;18217:435;18684:2;-1:-1:-1;;;;;18669:25:0;18678:4;-1:-1:-1;;;;;18669:25:0;;18688:5;18669:25;;;;1466::1;;1454:2;1439:18;;1320:177;18669:25:0;;;;;;;;17519:1183;;;:::o;28467:209::-;-1:-1:-1;;;;;27446:13:0;;;;;;:5;:13;;;;;;28603:4;;28609:2;;27446:13;;:31;;;;-1:-1:-1;27464:13:0;;-1:-1:-1;;;27464:13:0;;;;27463:14;27446:31;27442:186;;;27533:6;;-1:-1:-1;;;;;27520:19:0;;;27533:6;;27520:19;;:42;;-1:-1:-1;;;;;;27543:19:0;;;;;;:8;:19;;;;;;;;27520:42;27494:122;;;;-1:-1:-1;;;27494:122:0;;7367:2:1;27494:122:0;;;7349:21:1;7406:2;7386:18;;;7379:30;-1:-1:-1;;;7425:18:1;;;7418:48;7483:18;;27494:122:0;7165:342:1;27494:122:0;-1:-1:-1;;;;;27720:16:0;;;;;;:5;:16;;;;;;;;:35;;;;-1:-1:-1;27741:14:0;;-1:-1:-1;;;27741:14:0;;;;27740:15;27720:35;27716:185;;;27808:6;;-1:-1:-1;;;;;27798:16:0;;;27808:6;;27798:16;;:36;;-1:-1:-1;;;;;;27818:16:0;;;;;;:8;:16;;;;;;;;27798:36;27772:117;;;;-1:-1:-1;;;27772:117:0;;7714:2:1;27772:117:0;;;7696:21:1;7753:2;7733:18;;;7726:30;-1:-1:-1;;;7772:18:1;;;7765:49;7831:18;;27772:117:0;7512:343:1;27772:117:0;28467:209;;;;;:::o;222:418:1:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;505:6;500:2;492:6;488:15;483:2;472:9;468:18;462:50;561:1;556:2;547:6;536:9;532:22;528:31;521:42;631:2;624;620:7;615:2;607:6;603:15;599:29;588:9;584:45;580:54;572:62;;;222:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:1;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:1:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:1;1827:18;;;;1814:32;;1502:374::o;1881:300::-;1949:6;1957;2010:2;1998:9;1989:7;1985:23;1981:32;1978:52;;;2026:1;2023;2016:12;1978:52;2071:23;;;-1:-1:-1;2137:38:1;2171:2;2156:18;;2137:38;:::i;:::-;2127:48;;1881:300;;;;;:::o;2375:186::-;2434:6;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2526:29;2545:9;2526:29;:::i;:::-;2516:39;2375:186;-1:-1:-1;;;2375:186:1:o;2566:160::-;2631:20;;2687:13;;2680:21;2670:32;;2660:60;;2716:1;2713;2706:12;2731:254;2796:6;2804;2857:2;2845:9;2836:7;2832:23;2828:32;2825:52;;;2873:1;2870;2863:12;2825:52;2896:29;2915:9;2896:29;:::i;:::-;2886:39;;2944:35;2975:2;2964:9;2960:18;2944:35;:::i;2990:180::-;3046:6;3099:2;3087:9;3078:7;3074:23;3070:32;3067:52;;;3115:1;3112;3105:12;3067:52;3138:26;3154:9;3138:26;:::i;3499:260::-;3567:6;3575;3628:2;3616:9;3607:7;3603:23;3599:32;3596:52;;;3644:1;3641;3634:12;3596:52;3667:29;3686:9;3667:29;:::i;:::-;3657:39;;3715:38;3749:2;3738:9;3734:18;3715:38;:::i;3764:380::-;3843:1;3839:12;;;;3886;;;3907:61;;3961:4;3953:6;3949:17;3939:27;;3907:61;4014:2;4006:6;4003:14;3983:18;3980:38;3977:161;;4060:10;4055:3;4051:20;4048:1;4041:31;4095:4;4092:1;4085:15;4123:4;4120:1;4113:15;3977:161;;3764:380;;;:::o;4149:336::-;4351:2;4333:21;;;4390:2;4370:18;;;4363:30;-1:-1:-1;;;4424:2:1;4409:18;;4402:42;4476:2;4461:18;;4149:336::o;4832:127::-;4893:10;4888:3;4884:20;4881:1;4874:31;4924:4;4921:1;4914:15;4948:4;4945:1;4938:15;4964:125;5029:9;;;5050:10;;;5047:36;;;5063:18;;:::i;5094:128::-;5161:9;;;5182:11;;;5179:37;;;5196:18;;:::i;5227:168::-;5300:9;;;5331;;5348:15;;;5342:22;;5328:37;5318:71;;5369:18;;:::i;5400:217::-;5440:1;5466;5456:132;;5510:10;5505:3;5501:20;5498:1;5491:31;5545:4;5542:1;5535:15;5573:4;5570:1;5563:15;5456:132;-1:-1:-1;5602:9:1;;5400:217::o;6329:135::-;6368:3;6389:17;;;6386:43;;6409:18;;:::i;:::-;-1:-1:-1;6456:1:1;6445:13;;6329:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1065200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LOCKED_SUPPLY()": "328",
								"PUBLIC_SUPPLY()": "267",
								"TOTAL_SUPPLY()": "240",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24803",
								"awardBonus()": "2414",
								"balanceOf(address)": "2627",
								"buyingEnabled()": "2437",
								"decimals()": "288",
								"gameTreasury()": "2392",
								"getNextUnlockInfo()": "infinite",
								"isDex(address)": "2574",
								"lastUnlockMonth()": "2339",
								"liquidityListing()": "2393",
								"managers(address)": "2638",
								"marketing()": "2415",
								"name()": "infinite",
								"referralBonus()": "2370",
								"sellingEnabled()": "2392",
								"setBuyingEnabled(bool)": "26782",
								"setDexAddress(address,bool)": "infinite",
								"setManager(address,bool)": "infinite",
								"setSellingEnabled(bool)": "26760",
								"stakingReward()": "2372",
								"startTimestamp()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2393",
								"totalUnlocked()": "2406",
								"transfer(address,uint256)": "68768",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockTokens()": "infinite",
								"updateDistributionAddress(uint256,address)": "26990"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23274,
									"end": 23316,
									"name": "PUSH",
									"source": 0,
									"value": "7EC13697D98925BA1DC2BCC705C071BD168B10C2"
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23240,
									"end": 23316,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23353,
									"end": 23395,
									"name": "PUSH",
									"source": 0,
									"value": "8DE119E98707AC240ABA2CB77E83B29882A34357"
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23429,
									"end": 23471,
									"name": "PUSH",
									"source": 0,
									"value": "3499C18F7265BE9AFDA16504A34CD1892F278AE"
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23402,
									"end": 23471,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23509,
									"end": 23551,
									"name": "PUSH",
									"source": 0,
									"value": "CC234A1D3E32148461B7EACB5A8BF4D0C4B6BE74"
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23478,
									"end": 23551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23589,
									"end": 23631,
									"name": "PUSH",
									"source": 0,
									"value": "CEEA0E87B553BC445C5EB2242B5F28CD81B4ACAA"
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23558,
									"end": 23631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23638,
									"end": 23708,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 23638,
									"end": 23708,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23638,
									"end": 23708,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "PUSH",
									"source": 0,
									"value": "1017E23E2781A1DA5DACE87B4F0E7BF68191263FC32"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23756,
									"end": 23789,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24141,
									"end": 24439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "212122102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "109091"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12890,
									"end": 13006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12965,
									"end": 12970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12962,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12957,
									"end": 12970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12957,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12981,
									"end": 12988,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12981,
									"end": 12998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12991,
									"end": 12998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12981,
									"end": 12988,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12981,
									"end": 12998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12981,
									"end": 12998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12981,
									"end": 12998,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12981,
									"end": 12998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24192,
									"end": 24198,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 24192,
									"end": 24211,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24201,
									"end": 24211,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24192,
									"end": 24211,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24222,
									"end": 24250,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24222,
									"end": 24250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 23016,
									"end": 23036,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 24222,
									"end": 24227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24222,
									"end": 24250,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24222,
									"end": 24250,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24222,
									"end": 24250,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24283,
									"end": 24318,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24297,
									"end": 24301,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23083,
									"end": 23111,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23016,
									"end": 23036,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 22948,
									"end": 22969,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 23083,
									"end": 23111,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23083,
									"end": 23111,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23083,
									"end": 23111,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23083,
									"end": 23111,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24283,
									"end": 24288,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24283,
									"end": 24318,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24283,
									"end": 24318,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24283,
									"end": 24318,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24386,
									"end": 24401,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24369,
									"end": 24401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24430,
									"end": 24431,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24412,
									"end": 24427,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24412,
									"end": 24431,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19268,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 19055,
									"end": 19268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19126,
									"end": 19147,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19126,
									"end": 19147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19122,
									"end": 19215,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 19122,
									"end": 19215,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19200,
									"end": 19201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3066,
									"end": 3117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19171,
									"end": 19203,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19122,
									"end": 19215,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 19122,
									"end": 19215,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19225,
									"end": 19260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 19241,
									"end": 19242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19245,
									"end": 19252,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19254,
									"end": 19259,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19225,
									"end": 19232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19225,
									"end": 19260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19225,
									"end": 19260,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 19225,
									"end": 19260,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19055,
									"end": 19268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17519,
									"end": 18702,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17519,
									"end": 18702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17605,
									"end": 17642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17626,
									"end": 17630,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17632,
									"end": 17634,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17636,
									"end": 17641,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17605,
									"end": 17625,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17605,
									"end": 17642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17605,
									"end": 17642,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17605,
									"end": 17642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17657,
									"end": 17675,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17657,
									"end": 17675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17811,
									"end": 17816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17807,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17795,
									"end": 17807,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17795,
									"end": 17816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17795,
									"end": 17816,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17849,
									"end": 17868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17886,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17924,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17924,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17924,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17901,
									"end": 18018,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17901,
									"end": 18018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17901,
									"end": 18018,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3478,
									"end": 3510,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3478,
									"end": 3510,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3460,
									"end": 3511,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3545,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3527,
									"end": 3545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3545,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3554,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3554,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3554,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3433,
									"end": 3451,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3433,
									"end": 3451,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17952,
									"end": 18002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3258,
									"end": 3603,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17901,
									"end": 18018,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17901,
									"end": 18018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18156,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18159,
									"end": 18178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18159,
									"end": 18178,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18159,
									"end": 18178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18159,
									"end": 18178,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18141,
									"end": 18178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17653,
									"end": 18205,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18221,
									"end": 18237,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18221,
									"end": 18237,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18399,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18616,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18625,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18625,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18625,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18625,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18625,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18603,
									"end": 18625,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 18217,
									"end": 18652,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18684,
									"end": 18686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18678,
									"end": 18682,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18688,
									"end": 18693,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3754,
									"end": 3779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3754,
									"end": 3779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3608,
									"end": 3785,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18669,
									"end": 18694,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17519,
									"end": 18702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17519,
									"end": 18702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17519,
									"end": 18702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17519,
									"end": 18702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27451,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 28603,
									"end": 28607,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28603,
									"end": 28607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28609,
									"end": 28611,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28609,
									"end": 28611,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27446,
									"end": 27459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27477,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 27446,
									"end": 27477,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27464,
									"end": 27477,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 27464,
									"end": 27477,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27464,
									"end": 27477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27464,
									"end": 27477,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 27464,
									"end": 27477,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27464,
									"end": 27477,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27463,
									"end": 27477,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27446,
									"end": 27477,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 27446,
									"end": 27477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27442,
									"end": 27628,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27442,
									"end": 27628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 27442,
									"end": 27628,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27533,
									"end": 27539,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 27533,
									"end": 27539,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27520,
									"end": 27539,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27520,
									"end": 27539,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27520,
									"end": 27539,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27533,
									"end": 27539,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27533,
									"end": 27539,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27520,
									"end": 27539,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27520,
									"end": 27539,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27520,
									"end": 27562,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 27520,
									"end": 27562,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27551,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27543,
									"end": 27562,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27520,
									"end": 27562,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 27520,
									"end": 27562,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3992,
									"end": 3994,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3974,
									"end": 3995,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4031,
									"end": 4033,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 4011,
									"end": 4029,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4011,
									"end": 4029,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4011,
									"end": 4029,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4004,
									"end": 4034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "109D5E5A5B99C81A5CC8191A5CD8589B1959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4050,
									"end": 4068,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4050,
									"end": 4068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4068,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4043,
									"end": 4091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4108,
									"end": 4126,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4108,
									"end": 4126,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3790,
									"end": 4132,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 27494,
									"end": 27616,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27725,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27720,
									"end": 27736,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27755,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27755,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 27720,
									"end": 27755,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27741,
									"end": 27755,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 27741,
									"end": 27755,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27741,
									"end": 27755,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27741,
									"end": 27755,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 27741,
									"end": 27755,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27741,
									"end": 27755,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27740,
									"end": 27755,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27720,
									"end": 27755,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 27720,
									"end": 27755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27716,
									"end": 27901,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27716,
									"end": 27901,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 27716,
									"end": 27901,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27808,
									"end": 27814,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 27808,
									"end": 27814,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27798,
									"end": 27814,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27798,
									"end": 27814,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27798,
									"end": 27814,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27808,
									"end": 27814,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27808,
									"end": 27814,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27798,
									"end": 27814,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27798,
									"end": 27814,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27798,
									"end": 27834,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 27798,
									"end": 27834,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27826,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 27818,
									"end": 27834,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27798,
									"end": 27834,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 27798,
									"end": 27834,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4339,
									"end": 4341,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4321,
									"end": 4342,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4378,
									"end": 4380,
									"name": "PUSH",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 4358,
									"end": 4376,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4358,
									"end": 4376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4358,
									"end": 4376,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4351,
									"end": 4381,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4438,
									"name": "PUSH",
									"source": 1,
									"value": "53656C6C696E672069732064697361626C656400000000000000000000000000"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4415,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4390,
									"end": 4439,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4456,
									"end": 4474,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4456,
									"end": 4474,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 4137,
									"end": 4480,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 27772,
									"end": 27889,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28467,
									"end": 28676,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19276,
									"end": 19401,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 19276,
									"end": 19401,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19276,
									"end": 19401,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19276,
									"end": 19401,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19276,
									"end": 19401,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19276,
									"end": 19401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 2726,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2711,
									"end": 2714,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2707,
									"end": 2727,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2728,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2737,
									"end": 2752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2775,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2768,
									"end": 2769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2776,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2863,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2872,
									"end": 2909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2872,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2872,
									"end": 2909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2889,
									"end": 2907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3128,
									"end": 3253,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3128,
									"end": 3253,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3202,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3224,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3224,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3247,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3211,
									"end": 3247,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3227,
									"end": 3245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4137,
									"end": 4480,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 4137,
									"end": 4480,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "806"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22875,
									"end": 28679,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e48139f6ec74dd2f2cd832075023aa86de42945a39e6a247f89762f6c0a3da2b64736f6c634300081a0033",
									".code": [
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "CE7842F5"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "E8BE9A44"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "E8BE9A44"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "F771CB65"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "F968F493"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "FDFF9B4D"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "CE7842F5"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "D2F9EFAB"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "E6FD48BC"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "B16D78CF"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "B361412A"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "BE381B85"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "A5E90EEE"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "A779D080"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "3C11E12A"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "8310A74D"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "8310A74D"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "8342083A"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "8DDEDB33"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "8ED2FE91"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "3C11E12A"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "67859B6E"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "7CDF6FB1"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "2BE8781F"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "2D3E474A"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "42249BB"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22875,
											"end": 28679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23478,
											"end": 23551,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13076,
											"end": 13167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13076,
											"end": 13167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15394,
											"end": 15609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15394,
											"end": 15609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14257,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14257,
											"end": 14269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14178,
											"end": 14277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16219,
											"end": 16502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 16219,
											"end": 16502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23402,
											"end": 23471,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14029,
											"end": 14113,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14029,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14029,
											"end": 14113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14029,
											"end": 14113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14103,
											"end": 14105,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2186,
											"end": 2370,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23819,
											"end": 23856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23856,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23240,
											"end": 23316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14340,
											"end": 14458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14405,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14458,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28268,
											"end": 28386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28268,
											"end": 28386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22976,
											"end": 23036,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22976,
											"end": 23036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22976,
											"end": 23036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22976,
											"end": 23036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22976,
											"end": 23036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28048,
											"end": 28149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28048,
											"end": 28149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23717,
											"end": 23749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22909,
											"end": 22969,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22909,
											"end": 22969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22909,
											"end": 22969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22909,
											"end": 22969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22909,
											"end": 22969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13286,
											"end": 13381,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13286,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13286,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13286,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13286,
											"end": 13381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27928,
											"end": 28040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27928,
											"end": 28040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23203,
											"end": 23231,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14663,
											"end": 14845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14663,
											"end": 14845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28157,
											"end": 28260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28157,
											"end": 28260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23708,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 26581,
											"end": 27285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3175,
											"end": 3494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23558,
											"end": 23631,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 14908,
											"end": 15075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15013,
											"end": 15020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 15075,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23120,
											"end": 23159,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23120,
											"end": 23159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23120,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23120,
											"end": 23159,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 23120,
											"end": 23159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23120,
											"end": 23159,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23043,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23789,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 26044,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24447,
											"end": 26044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24447,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24447,
											"end": 26044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23863,
											"end": 23903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23863,
											"end": 23903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13121,
											"end": 13134,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13154,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13147,
											"end": 13159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13147,
											"end": 13159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13147,
											"end": 13159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13076,
											"end": 13167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15492,
											"end": 15496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15548,
											"end": 15579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15571,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15573,
											"end": 15578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15548,
											"end": 15556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15548,
											"end": 15579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15548,
											"end": 15579,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 15548,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15597,
											"end": 15601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15590,
											"end": 15601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15590,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15590,
											"end": 15601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16340,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16414,
											"end": 16418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16429,
											"end": 16434,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16398,
											"end": 16435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16398,
											"end": 16435,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16398,
											"end": 16435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16446,
											"end": 16472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16456,
											"end": 16460,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16462,
											"end": 16464,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16466,
											"end": 16471,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16446,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16446,
											"end": 16472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16446,
											"end": 16472,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16446,
											"end": 16472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16490,
											"end": 16494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16490,
											"end": 16494,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16219,
											"end": 16502,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16219,
											"end": 16502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24086,
											"end": 24096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24068,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26192,
											"end": 26193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26183,
											"end": 26188,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26193,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26193,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26206,
											"end": 26207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26197,
											"end": 26202,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26207,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26207,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 26183,
											"end": 26207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26175,
											"end": 26225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26175,
											"end": 26225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26175,
											"end": 26225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4711,
											"end": 4729,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4711,
											"end": 4729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840D2DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4490,
											"end": 4827,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 26175,
											"end": 26225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26242,
											"end": 26247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26251,
											"end": 26252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26242,
											"end": 26252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26238,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26254,
											"end": 26283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26254,
											"end": 26283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26254,
											"end": 26283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26283,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26283,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 26238,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26312,
											"end": 26313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26303,
											"end": 26313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26299,
											"end": 26565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 26299,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26315,
											"end": 26340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26340,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26299,
											"end": 26565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 26299,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26360,
											"end": 26365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26369,
											"end": 26370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26360,
											"end": 26370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 26356,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26372,
											"end": 26394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26372,
											"end": 26394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26372,
											"end": 26394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26394,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 26356,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26414,
											"end": 26419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26423,
											"end": 26424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26414,
											"end": 26424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26410,
											"end": 26565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26410,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26426,
											"end": 26439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26426,
											"end": 26452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26426,
											"end": 26452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26426,
											"end": 26452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26426,
											"end": 26452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26426,
											"end": 26452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26426,
											"end": 26452,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26426,
											"end": 26452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26426,
											"end": 26452,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26410,
											"end": 26565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26410,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26472,
											"end": 26477,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26481,
											"end": 26482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26472,
											"end": 26482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26468,
											"end": 26565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 26468,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26484,
											"end": 26497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26484,
											"end": 26510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26484,
											"end": 26510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26484,
											"end": 26510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26484,
											"end": 26510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26484,
											"end": 26510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26484,
											"end": 26510,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26484,
											"end": 26510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26484,
											"end": 26510,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26468,
											"end": 26565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 26468,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26539,
											"end": 26540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26530,
											"end": 26540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26526,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26542,
											"end": 26552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26542,
											"end": 26565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26542,
											"end": 26565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26542,
											"end": 26565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26542,
											"end": 26565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26542,
											"end": 26565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26542,
											"end": 26565,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26542,
											"end": 26565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26542,
											"end": 26565,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26526,
											"end": 26565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26526,
											"end": 26565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28268,
											"end": 28386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24086,
											"end": 24096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24068,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 28352,
											"end": 28369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28352,
											"end": 28378,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28352,
											"end": 28378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28268,
											"end": 28386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28048,
											"end": 28149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24086,
											"end": 24096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24068,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28117,
											"end": 28141,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28117,
											"end": 28141,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28048,
											"end": 28149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13286,
											"end": 13381,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13286,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13333,
											"end": 13346,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13366,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13359,
											"end": 13373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13359,
											"end": 13373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13359,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13359,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13359,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13359,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27928,
											"end": 28040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24086,
											"end": 24096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24068,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 28006,
											"end": 28023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28006,
											"end": 28032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28006,
											"end": 28032,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 28040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14663,
											"end": 14845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14732,
											"end": 14736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14788,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14805,
											"end": 14807,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 14814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14788,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28157,
											"end": 28260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24086,
											"end": 24096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24068,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28227,
											"end": 28252,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28227,
											"end": 28252,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28157,
											"end": 28260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26660,
											"end": 26673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26675,
											"end": 26694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26696,
											"end": 26713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26731,
											"end": 26740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26743,
											"end": 26758,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26743,
											"end": 26758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26761,
											"end": 26762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26743,
											"end": 26762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26743,
											"end": 26762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26743,
											"end": 26762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26743,
											"end": 26762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26743,
											"end": 26762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26743,
											"end": 26762,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26743,
											"end": 26762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26731,
											"end": 26762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26731,
											"end": 26762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26784,
											"end": 26785,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26779,
											"end": 26780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26779,
											"end": 26785,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26775,
											"end": 27094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26775,
											"end": 27094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26842,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26817,
											"end": 26834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26833,
											"end": 26834,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26817,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26817,
											"end": 26834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26817,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26816,
											"end": 26842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26816,
											"end": 26842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26842,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26816,
											"end": 26842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 26842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 26842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26775,
											"end": 27094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26775,
											"end": 27094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26775,
											"end": 27094,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26775,
											"end": 27094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26869,
											"end": 26870,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26864,
											"end": 26865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26864,
											"end": 26870,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26860,
											"end": 27094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26860,
											"end": 27094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26923,
											"end": 26926,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26902,
											"end": 26919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26902,
											"end": 26919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26918,
											"end": 26919,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26902,
											"end": 26919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26902,
											"end": 26919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26860,
											"end": 27094,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 26860,
											"end": 27094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26953,
											"end": 26954,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26948,
											"end": 26949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26948,
											"end": 26954,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26944,
											"end": 27094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26944,
											"end": 27094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27010,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26986,
											"end": 27003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26986,
											"end": 27003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27002,
											"end": 27003,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26986,
											"end": 27003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26986,
											"end": 27003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26944,
											"end": 27094,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26944,
											"end": 27094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27079,
											"end": 27082,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27058,
											"end": 27075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 27058,
											"end": 27075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27074,
											"end": 27075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27058,
											"end": 27075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 27058,
											"end": 27075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27058,
											"end": 27075,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 27058,
											"end": 27075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27057,
											"end": 27082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 27057,
											"end": 27082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27057,
											"end": 27082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27057,
											"end": 27082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27057,
											"end": 27082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27057,
											"end": 27082,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 27057,
											"end": 27082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27043,
											"end": 27082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27043,
											"end": 27082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26944,
											"end": 27094,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26944,
											"end": 27094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27124,
											"end": 27137,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27124,
											"end": 27137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 27110,
											"end": 27137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27110,
											"end": 27137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27137,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 27110,
											"end": 27137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27110,
											"end": 27153,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27106,
											"end": 27225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27106,
											"end": 27225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27106,
											"end": 27225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27200,
											"end": 27213,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27200,
											"end": 27213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27184,
											"end": 27213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 27184,
											"end": 27213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27170,
											"end": 27213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27170,
											"end": 27213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27106,
											"end": 27225,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 27106,
											"end": 27225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27245,
											"end": 27246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27248,
											"end": 27259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27261,
											"end": 27276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27275,
											"end": 27276,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27248,
											"end": 27259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27261,
											"end": 27276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27261,
											"end": 27276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27261,
											"end": 27276,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 27261,
											"end": 27276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 27285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 23083,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23043,
											"end": 23111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 26044,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24447,
											"end": 26044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24076,
											"end": 24082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24086,
											"end": 24096,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 24068,
											"end": 24113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 24068,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24507,
											"end": 24520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24507,
											"end": 24520,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24507,
											"end": 24536,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24499,
											"end": 24568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24499,
											"end": 24568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24499,
											"end": 24568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24499,
											"end": 24568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5931,
											"name": "PUSH",
											"source": 1,
											"value": "416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000"
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 24499,
											"end": 24568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24581,
											"end": 24602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24642,
											"end": 24649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 24606,
											"end": 24638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 24624,
											"end": 24638,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 24606,
											"end": 24621,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 24606,
											"end": 24638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 24606,
											"end": 24638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 24605,
											"end": 24649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 24605,
											"end": 24649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24605,
											"end": 24649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 24605,
											"end": 24649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24581,
											"end": 24649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24581,
											"end": 24649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24684,
											"end": 24699,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24681,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24668,
											"end": 24699,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24660,
											"end": 24726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24660,
											"end": 24726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24660,
											"end": 24726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206E6577206D6F6E746820746F20756E6C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5978,
											"end": 6324,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 24660,
											"end": 24726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24739,
											"end": 24761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24783,
											"end": 24792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24795,
											"end": 24810,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24813,
											"end": 24814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24795,
											"end": 24814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 24795,
											"end": 24814,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24795,
											"end": 24814,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 24795,
											"end": 24814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24814,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24821,
											"end": 24834,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24834,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24865,
											"end": 24866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24860,
											"end": 24861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24860,
											"end": 24866,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24856,
											"end": 25249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 24856,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24927,
											"end": 24931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24906,
											"end": 24923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 24906,
											"end": 24923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24922,
											"end": 24923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24906,
											"end": 24923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 24906,
											"end": 24923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24906,
											"end": 24923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 24906,
											"end": 24923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24905,
											"end": 24931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 24905,
											"end": 24931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24905,
											"end": 24931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24905,
											"end": 24931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 24905,
											"end": 24931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24905,
											"end": 24931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 24905,
											"end": 24931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24887,
											"end": 24931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 24887,
											"end": 24931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24887,
											"end": 24931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24887,
											"end": 24931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24887,
											"end": 24931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24887,
											"end": 24931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 24887,
											"end": 24931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24887,
											"end": 24931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24887,
											"end": 24931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24856,
											"end": 25249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 24856,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24856,
											"end": 25249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 24856,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24970,
											"end": 24971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24965,
											"end": 24966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24965,
											"end": 24971,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 25249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 24961,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25032,
											"end": 25035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25011,
											"end": 25028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 25011,
											"end": 25028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25027,
											"end": 25028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25011,
											"end": 25028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25011,
											"end": 25028,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24961,
											"end": 25249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 24961,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25072,
											"end": 25073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25067,
											"end": 25068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25073,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 25063,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25134,
											"end": 25137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25113,
											"end": 25130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 25113,
											"end": 25130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25129,
											"end": 25130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25113,
											"end": 25130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25113,
											"end": 25130,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 25063,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25224,
											"end": 25227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25203,
											"end": 25220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 25203,
											"end": 25220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25219,
											"end": 25220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25203,
											"end": 25220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25203,
											"end": 25220,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25203,
											"end": 25220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 25203,
											"end": 25220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 25202,
											"end": 25227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 25202,
											"end": 25227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 25202,
											"end": 25227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 25184,
											"end": 25227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25184,
											"end": 25227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 25184,
											"end": 25227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25227,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 25063,
											"end": 25249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 24836,
											"end": 24839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 24836,
											"end": 24839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24836,
											"end": 24839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 24778,
											"end": 25260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25293,
											"end": 25306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25293,
											"end": 25306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 25276,
											"end": 25306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25276,
											"end": 25306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 25276,
											"end": 25306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25276,
											"end": 25322,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 25272,
											"end": 25433,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25372,
											"end": 25385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25372,
											"end": 25385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22948,
											"end": 22969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23083,
											"end": 23111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 23083,
											"end": 23111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25356,
											"end": 25385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 25356,
											"end": 25385,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25356,
											"end": 25385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25356,
											"end": 25385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 25356,
											"end": 25385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25356,
											"end": 25385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 25356,
											"end": 25385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25339,
											"end": 25385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25339,
											"end": 25385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 25272,
											"end": 25433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25470,
											"end": 25471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25453,
											"end": 25467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25453,
											"end": 25471,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25445,
											"end": 25493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25445,
											"end": 25493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25445,
											"end": 25493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25445,
											"end": 25493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7468696E6720746F20756E6C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6469,
											"end": 6810,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 25445,
											"end": 25493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25524,
											"end": 25537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25506,
											"end": 25537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25537,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25579,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25548,
											"end": 25561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25548,
											"end": 25579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 25548,
											"end": 25579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25579,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25592,
											"end": 25605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25608,
											"end": 25626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 25625,
											"end": 25626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25608,
											"end": 25622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25608,
											"end": 25626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 25608,
											"end": 25626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25608,
											"end": 25626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 25608,
											"end": 25626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25664,
											"end": 25680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25592,
											"end": 25626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25592,
											"end": 25626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25639,
											"end": 25688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 25639,
											"end": 25688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25657,
											"end": 25661,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25657,
											"end": 25661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25664,
											"end": 25680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25592,
											"end": 25626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25639,
											"end": 25688,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25639,
											"end": 25688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 25639,
											"end": 25688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25724,
											"end": 25736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25699,
											"end": 25744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 25699,
											"end": 25744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25721,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25717,
											"end": 25721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25724,
											"end": 25736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25738,
											"end": 25743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25699,
											"end": 25708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25699,
											"end": 25744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25699,
											"end": 25744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 25699,
											"end": 25744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25780,
											"end": 25789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25780,
											"end": 25789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25755,
											"end": 25797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 25755,
											"end": 25797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25773,
											"end": 25777,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25773,
											"end": 25777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25780,
											"end": 25789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25791,
											"end": 25796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25755,
											"end": 25764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25755,
											"end": 25797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25755,
											"end": 25797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 25755,
											"end": 25797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25833,
											"end": 25846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25833,
											"end": 25846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 25854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 25808,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25830,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25826,
											"end": 25830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25833,
											"end": 25846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25848,
											"end": 25853,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 25817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25808,
											"end": 25854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 25854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 25808,
											"end": 25854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25890,
											"end": 25903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25890,
											"end": 25903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25865,
											"end": 25911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 25865,
											"end": 25911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25887,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25883,
											"end": 25887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25890,
											"end": 25903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25905,
											"end": 25910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25865,
											"end": 25874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25865,
											"end": 25911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25865,
											"end": 25911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 25865,
											"end": 25911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 25947,
											"end": 25957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25922,
											"end": 25965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 25922,
											"end": 25965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25940,
											"end": 25944,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25940,
											"end": 25944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25947,
											"end": 25957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25959,
											"end": 25964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25922,
											"end": 25931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25922,
											"end": 25965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25922,
											"end": 25965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 25922,
											"end": 25965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25998,
											"end": 26013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25998,
											"end": 26013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26022,
											"end": 26035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25983,
											"end": 26036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC"
										},
										{
											"begin": 25983,
											"end": 26036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25983,
											"end": 26036,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 24488,
											"end": 26044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24488,
											"end": 26044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24488,
											"end": 26044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 26044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20491,
											"end": 20621,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 20491,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20576,
											"end": 20613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20585,
											"end": 20590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 20606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20608,
											"end": 20612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20576,
											"end": 20584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20576,
											"end": 20613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20576,
											"end": 20613,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20576,
											"end": 20613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20491,
											"end": 20621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20491,
											"end": 20621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20491,
											"end": 20621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20491,
											"end": 20621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22868,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 22266,
											"end": 22868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22400,
											"end": 22424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15040,
											"end": 15067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22467,
											"end": 22503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22467,
											"end": 22503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 22463,
											"end": 22861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22543,
											"end": 22548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22524,
											"end": 22540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22524,
											"end": 22548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22520,
											"end": 22734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22520,
											"end": 22734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 22520,
											"end": 22734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22576,
											"end": 22718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6815,
											"end": 7160,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22520,
											"end": 22734,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 22520,
											"end": 22734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22777,
											"end": 22834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 22786,
											"end": 22791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22793,
											"end": 22800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22821,
											"end": 22826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22802,
											"end": 22818,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22802,
											"end": 22826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22828,
											"end": 22833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22777,
											"end": 22785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 22777,
											"end": 22834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22777,
											"end": 22834,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 22777,
											"end": 22834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22389,
											"end": 22868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16887,
											"end": 17195,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16887,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16971,
											"end": 16989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16971,
											"end": 16989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 16967,
											"end": 17055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17040,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17013,
											"end": 17043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16967,
											"end": 17055,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 16967,
											"end": 17055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17069,
											"end": 17085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17069,
											"end": 17085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17065,
											"end": 17153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 17065,
											"end": 17153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17138,
											"end": 17139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17065,
											"end": 17153,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 17065,
											"end": 17153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 17171,
											"end": 17175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17177,
											"end": 17179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17181,
											"end": 17186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17163,
											"end": 17170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 17163,
											"end": 17187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21974,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 21488,
											"end": 21974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21644,
											"end": 21663,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21644,
											"end": 21663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 21640,
											"end": 21731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21687,
											"end": 21719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21640,
											"end": 21731,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 21640,
											"end": 21731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21745,
											"end": 21766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21745,
											"end": 21766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 21741,
											"end": 21833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21818,
											"end": 21819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21790,
											"end": 21821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21741,
											"end": 21833,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 21741,
											"end": 21833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21854,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21878,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 21889,
											"end": 21967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21940,
											"end": 21947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21933,
											"end": 21938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21949,
											"end": 21954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21924,
											"end": 21955,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21488,
											"end": 21974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17519,
											"end": 18702,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 17519,
											"end": 18702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17605,
											"end": 17642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 17626,
											"end": 17630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17632,
											"end": 17634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17636,
											"end": 17641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17605,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 17605,
											"end": 17642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17605,
											"end": 17642,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 17605,
											"end": 17642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17657,
											"end": 17675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17657,
											"end": 17675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17811,
											"end": 17816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17807,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17795,
											"end": 17807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 17795,
											"end": 17816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17849,
											"end": 17868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17924,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17901,
											"end": 18018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17901,
											"end": 18018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 17901,
											"end": 18018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17952,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6815,
											"end": 7160,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17901,
											"end": 18018,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 17901,
											"end": 18018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18156,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18159,
											"end": 18178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18159,
											"end": 18178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18159,
											"end": 18178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18159,
											"end": 18178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18141,
											"end": 18178,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 17653,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18221,
											"end": 18237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18221,
											"end": 18237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18399,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18603,
											"end": 18625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 18217,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18684,
											"end": 18686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18688,
											"end": 18693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18669,
											"end": 18694,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17519,
											"end": 18702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17519,
											"end": 18702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17519,
											"end": 18702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17519,
											"end": 18702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27451,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 28607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 28607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28609,
											"end": 28611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28609,
											"end": 28611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27446,
											"end": 27459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 27446,
											"end": 27477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27464,
											"end": 27477,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27464,
											"end": 27477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27464,
											"end": 27477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27464,
											"end": 27477,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27464,
											"end": 27477,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27464,
											"end": 27477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27446,
											"end": 27477,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 27446,
											"end": 27477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27442,
											"end": 27628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27442,
											"end": 27628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 27442,
											"end": 27628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27533,
											"end": 27539,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 27533,
											"end": 27539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27520,
											"end": 27539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27533,
											"end": 27539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27533,
											"end": 27539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27539,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 27520,
											"end": 27562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27551,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27543,
											"end": 27562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27562,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 27520,
											"end": 27562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109D5E5A5B99C81A5CC8191A5CD8589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7165,
											"end": 7507,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 27494,
											"end": 27616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27725,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27720,
											"end": 27736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27755,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 27720,
											"end": 27755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27741,
											"end": 27755,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 27741,
											"end": 27755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27741,
											"end": 27755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27755,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27741,
											"end": 27755,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27741,
											"end": 27755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27740,
											"end": 27755,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27755,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 27720,
											"end": 27755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27716,
											"end": 27901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27716,
											"end": 27901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 27716,
											"end": 27901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27808,
											"end": 27814,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 27808,
											"end": 27814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27798,
											"end": 27814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27798,
											"end": 27814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27798,
											"end": 27814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27808,
											"end": 27814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27808,
											"end": 27814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27798,
											"end": 27814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27798,
											"end": 27814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27798,
											"end": 27834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 27798,
											"end": 27834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27826,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27818,
											"end": 27834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27798,
											"end": 27834,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 27798,
											"end": 27834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D95B1B1A5B99C81A5CC8191A5CD8589B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7831,
											"end": 7849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7512,
											"end": 7855,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 27772,
											"end": 27889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28467,
											"end": 28676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 222,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 488,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 603,
											"end": 618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 588,
											"end": 597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 584,
											"end": 629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 580,
											"end": 634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2137,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2490,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2526,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2555,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2566,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2702,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2660,
											"end": 2720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2731,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2860,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 2915,
											"end": 2924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2896,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2944,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3170,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2990,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3102,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 3154,
											"end": 3163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3138,
											"end": 3164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3759,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3499,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3626,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3667,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3715,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4017,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4055,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4051,
											"end": 4071,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4099,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4485,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4149,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420616C6C6F77656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4959,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4832,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4903,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4888,
											"end": 4891,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4884,
											"end": 4904,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4928,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4945,
											"end": 4946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 5089,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4964,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5047,
											"end": 5083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5063,
											"end": 5081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5222,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5094,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5193,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5179,
											"end": 5216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5196,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5395,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5227,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5364,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5369,
											"end": 5387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5400,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5505,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5501,
											"end": 5521,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5577,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5578,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6464,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6329,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6386,
											"end": 6429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6409,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6456,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6445,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/assets/BBD_Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"LOCKED_SUPPLY()": "e8be9a44",
							"PUBLIC_SUPPLY()": "8342083a",
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"awardBonus()": "b361412a",
							"balanceOf(address)": "70a08231",
							"buyingEnabled()": "8ed2fe91",
							"decimals()": "313ce567",
							"gameTreasury()": "d2f9efab",
							"getNextUnlockInfo()": "be381b85",
							"isDex(address)": "3c11e12a",
							"lastUnlockMonth()": "8310a74d",
							"liquidityListing()": "67859b6e",
							"managers(address)": "fdff9b4d",
							"marketing()": "2d3e474a",
							"name()": "06fdde03",
							"referralBonus()": "ce7842f5",
							"sellingEnabled()": "f771cb65",
							"setBuyingEnabled(bool)": "8ddedb33",
							"setDexAddress(address,bool)": "7cdf6fb1",
							"setManager(address,bool)": "a5e90eee",
							"setSellingEnabled(bool)": "b16d78cf",
							"stakingReward()": "042249bb",
							"startTimestamp()": "e6fd48bc",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalUnlocked()": "a779d080",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockTokens()": "f968f493",
							"updateDistributionAddress(uint256,address)": "2be8781f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPerWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUnlocked\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LOCKED_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"awardBonus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextUnlockInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"perWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUnlockMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralBonus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setBuyingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setDexAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setSellingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateDistributionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"BBDToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 808,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "lastUnlockMonth",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 810,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "totalUnlocked",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 813,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "liquidityListing",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 816,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "gameTreasury",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 819,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "marketing",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 822,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "stakingReward",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 825,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "referralBonus",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 828,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "awardBonus",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 831,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "buyingEnabled",
								"offset": 20,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 834,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "sellingEnabled",
								"offset": 21,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 836,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_owner",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 840,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "isDex",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 844,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "managers",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/assets/BBD_Token.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/assets/BBD_Token.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/assets/BBD_Token.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/assets/BBD_Token.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/assets/BBD_Token.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0xce4d6b140f474c0cd5439ca14e4cf4c2cbbf771c80bef5140a7a50c6ca1865e4\",\"license\":\"None\",\"urls\":[\"bzz-raw://dbb8ae1f65e3f410aa8530478920d9e49060afd6cef07a2b04bda9d877aefb32\",\"dweb:/ipfs/QmSzT1PovYp61a11uFoJqmqL1XFGohu2Quu6AqmYD41qrZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/assets/BBD_Token.sol": {
				"ast": {
					"absolutePath": "src/assets/BBD_Token.sol",
					"exportedSymbols": {
						"BBDToken": [
							1376
						],
						"Context": [
							129
						],
						"ERC20": [
							787
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						]
					},
					"id": 1377,
					"license": "None",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:73:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "146:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "160:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "335:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "344:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "366:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "394:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "386:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:57:0"
									},
									"src": "329:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "409:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "572:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "607:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "591:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "623:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "665:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:97:0"
									},
									"src": "566:112:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "686:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "768:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "805:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:9:0"
									},
									"scope": 77,
									"src": "759:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "822:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "910:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "960:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:9:0"
									},
									"scope": 77,
									"src": "901:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "977:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1211:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1228:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1220:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1240:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1232:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:6:0"
									},
									"scope": 77,
									"src": "1202:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1564:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1592:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:57:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:9:0"
									},
									"scope": 77,
									"src": "1555:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1671:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2367:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2400:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2392:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2425:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:6:0"
									},
									"scope": 77,
									"src": "2358:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2439:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2759:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2790:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2782:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2813:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2805:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2834:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2826:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:75:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2865:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:6:0"
									},
									"scope": 77,
									"src": "2750:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1377,
							"src": "136:2738:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3051:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3198:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3198:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3198:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3079:89:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3180:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3212:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3283:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3287:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3313:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3313:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:15:0"
									},
									"scope": 100,
									"src": "3274:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3336:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3409:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3441:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3441:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:15:0"
									},
									"scope": 100,
									"src": "3400:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3464:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3546:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3554:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3580:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3580:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3579:7:0"
									},
									"scope": 100,
									"src": "3537:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1377,
							"src": "3170:420:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3719:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3747:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4272:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4349:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4367:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4371:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4367:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4360:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4296:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4306:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:9:0"
									},
									"scope": 129,
									"src": "4287:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4460:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4478:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4482:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4478:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4471:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4402:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4410:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4444:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4444:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4443:16:0"
									},
									"scope": 129,
									"src": "4393:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4574:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4592:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4585:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4511:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4531:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:9:0"
									},
									"scope": 129,
									"src": "4502:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1377,
							"src": "4254:350:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4755:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4783:144:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4939:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4959:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5285:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5328:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5320:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5353:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5345:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5379:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5371:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5309:83:0"
									},
									"src": "5279:114:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5401:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5568:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5586:16:0"
									},
									"src": "5562:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5611:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5785:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5814:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5806:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5805:18:0"
									},
									"src": "5779:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5832:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6194:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6239:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6231:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6265:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6257:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6293:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6220:86:0"
									},
									"src": "6188:119:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6315:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6504:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6533:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6525:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6524:18:0"
									},
									"src": "6498:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6551:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6761:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6780:17:0"
									},
									"src": "6755:43:0"
								}
							],
							"scope": 1377,
							"src": "4929:1872:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6805:146:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6963:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6984:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7219:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7246:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7238:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7237:15:0"
									},
									"src": "7213:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7261:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7408:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7439:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7431:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7430:17:0"
									},
									"src": "7402:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7456:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7762:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7791:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7783:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7782:48:0"
									},
									"src": "7756:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7839:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "8006:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8034:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "8026:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8025:16:0"
									},
									"src": "8000:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "8050:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "8224:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8254:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8246:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8245:18:0"
									},
									"src": "8218:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8272:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8535:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8570:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8562:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8588:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8580:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8561:35:0"
									},
									"src": "8529:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8605:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8794:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8824:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8816:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8815:18:0"
									},
									"src": "8788:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8842:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "9054:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "9076:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9075:18:0"
									},
									"src": "9048:46:0"
								}
							],
							"scope": 1377,
							"src": "6953:2144:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "9101:148:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "9261:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9283:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9662:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9707:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9699:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9758:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9750:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9783:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9775:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9688:109:0"
									},
									"src": "9656:142:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9806:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9973:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10002:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9994:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9993:16:0"
									},
									"src": "9967:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "10018:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "10192:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10223:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "10215:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10214:18:0"
									},
									"src": "10186:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "10241:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10513:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10550:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10542:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10541:33:0"
									},
									"src": "10507:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10583:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10772:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:18:0"
									},
									"src": "10766:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10821:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "11033:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11064:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "11056:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11055:18:0"
									},
									"src": "11027:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "11082:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11379:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11413:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11405:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11432:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11424:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11404:41:0"
									},
									"src": "11373:73:0"
								}
							],
							"scope": 1377,
							"src": "9251:2198:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11586:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12417:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12417:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12417:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12426:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12426:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12426:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12434:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12434:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12434:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12450:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12450:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12450:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11614:774:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12408:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12514:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "12470:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12486:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12470:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12497:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12613:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "12532:92:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12548:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12540:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12532:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12575:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12567:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12559:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12586:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12649:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "12633:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12633:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12685:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "12670:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12670:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12712:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "12697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12697:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12946:60:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12957:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12965:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12957:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12957:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12981:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12981:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12728:156:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12916:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12902:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12902:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12923:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12923:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12901:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12946:0:0"
									},
									"scope": 787,
									"src": "12890:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "13136:31:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13154:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13147:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "13014:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "13085:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13089:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "13121:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13120:15:0"
									},
									"scope": 787,
									"src": "13076:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13348:33:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13359:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13175:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13295:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13301:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13333:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13332:15:0"
									},
									"scope": 787,
									"src": "13286:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "14085:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14103:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "14096:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13389:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "14038:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14046:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "14078:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14078:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14077:7:0"
									},
									"scope": 787,
									"src": "14029:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14239:38:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14257:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14250:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "14121:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14187:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14198:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14229:9:0"
									},
									"scope": 787,
									"src": "14178:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14414:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14432:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14432:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14425:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14285:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14349:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14367:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14359:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14358:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14405:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14404:9:0"
									},
									"scope": 787,
									"src": "14340:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14738:107:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14757:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14749:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14749:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14765:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14765:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14749:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14805:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14788:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14788:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14788:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14833:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14826:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14466:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14672:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14689:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14681:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14701:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14693:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14680:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14732:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14731:6:0"
									},
									"scope": 787,
									"src": "14663:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "15022:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "15040:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "15052:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15040:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "15059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15040:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "15033:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14853:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14917:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14945:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14937:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14969:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14961:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14926:57:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "15013:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15012:9:0"
									},
									"scope": 787,
									"src": "14908:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15498:111:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15517:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15509:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15509:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15525:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15525:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15509:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15557:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															678,
															738
														],
														"referencedDeclaration": 678,
														"src": "15548:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15548:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15548:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15590:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "15083:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15429:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15421:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15410:57:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15492:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15491:6:0"
									},
									"scope": 787,
									"src": "15394:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "16346:156:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16365:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16357:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16357:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16375:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16375:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16357:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16429:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "16398:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16398:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16398:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16456:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16462:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16446:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16446:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16446:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16483:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15617:596:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16228:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16251:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16282:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16274:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16303:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16240:75:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16340:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16339:6:0"
									},
									"scope": 787,
									"src": "16219:283:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16956:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16971:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16979:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16979:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16971:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16967:88:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16991:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17040:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17032:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17032:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17032:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "17013:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17013:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "17006:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "17069:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17083:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17075:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17075:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17069:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "17065:88:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "17087:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17138:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17130:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17130:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17130:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "17109:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17109:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "17102:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "17171:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "17177:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "17181:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "17163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17163:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "17163:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16510:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16896:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16906:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16928:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16920:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16940:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16905:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16956:0:0"
									},
									"scope": 787,
									"src": "16887:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "17594:1108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17626:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17632:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "17605:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17605:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "17605:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 517,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17657:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17673:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 518,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17665:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17665:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17657:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "17834:371:0",
													"statements": [
														{
															"assignments": [
																529
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 529,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17857:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 554,
																	"src": "17849:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 528,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17849:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 533,
															"initialValue": {
																"baseExpression": {
																	"id": 530,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17871:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 532,
																"indexExpression": {
																	"id": 531,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17881:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17871:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17849:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "17905:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 535,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17919:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17905:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 544,
															"nodeType": "IfStatement",
															"src": "17901:117:0",
															"trueBody": {
																"id": 543,
																"nodeType": "Block",
																"src": "17926:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 538,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17977:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 539,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 529,
																					"src": "17983:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 540,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17996:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 537,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17952:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17952:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 542,
																		"nodeType": "RevertStatement",
																		"src": "17945:57:0"
																	}
																]
															}
														},
														{
															"id": 553,
															"nodeType": "UncheckedBlock",
															"src": "18032:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 545,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18141:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 547,
																			"indexExpression": {
																				"id": 546,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "18151:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18141:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 548,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "18159:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 549,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "18173:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18159:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18141:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 552,
																	"nodeType": "ExpressionStatement",
																	"src": "18141:37:0"
																}
															]
														}
													]
												},
												"id": 555,
												"nodeType": "IfStatement",
												"src": "17653:552:0",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "17677:151:0",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 523,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17795:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 524,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17811:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17795:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "17795:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "18221:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 557,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18227:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18227:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18221:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "18441:211:0",
													"statements": [
														{
															"id": 574,
															"nodeType": "UncheckedBlock",
															"src": "18456:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 568,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18603:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 570,
																			"indexExpression": {
																				"id": 569,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18613:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18603:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 571,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18620:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18603:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 573,
																	"nodeType": "ExpressionStatement",
																	"src": "18603:22:0"
																}
															]
														}
													]
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "18217:435:0",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "18239:196:0",
													"statements": [
														{
															"id": 566,
															"nodeType": "UncheckedBlock",
															"src": "18254:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 562,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "18387:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 563,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18403:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18387:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 565,
																	"nodeType": "ExpressionStatement",
																	"src": "18387:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 578,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18684:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 577,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18669:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18669:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "EmitStatement",
												"src": "18664:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "17203:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17528:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "17536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17558:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "17550:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "17562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17535:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17594:0:0"
									},
									"scope": 787,
									"src": "17519:1183:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "19111:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 592,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "19126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19145:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 593,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19137:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19137:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19126:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "19122:93:0",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "19149:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19200:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19192:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 599,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19192:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19192:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 598,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "19171:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19171:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "19164:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19241:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 608,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19233:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19233:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "19245:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "19254:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "19225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19225:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "19225:35:0"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "18710:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "19064:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19078:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "19070:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19095:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "19087:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19069:32:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19111:0:0"
									},
									"scope": 787,
									"src": "19055:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "19399:2:0",
										"statements": []
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "19285:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19324:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "19316:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19347:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "19339:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19368:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "19360:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19305:76:0"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19399:0:0"
									},
									"scope": 787,
									"src": "19276:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "19783:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 635,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "19798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19817:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 636,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19809:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19809:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19798:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "19794:91:0",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "19821:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19870:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19862:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 642,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19862:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19862:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 641,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19843:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19843:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 647,
															"nodeType": "RevertStatement",
															"src": "19836:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "19903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19920:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 652,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19912:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19912:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "19924:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "19895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19895:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "19895:35:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "19407:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19736:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "19742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19767:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "19759:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19741:32:0"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19783:0:0"
									},
									"scope": 787,
									"src": "19727:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "20565:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "20585:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "20592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20608:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 670,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															678,
															738
														],
														"referencedDeclaration": 738,
														"src": "20576:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20576:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "20576:37:0"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "19946:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20500:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "20509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "20524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20549:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "20541:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20508:47:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20565:0:0"
									},
									"scope": 787,
									"src": "20491:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "21629:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 690,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "21644:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21661:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 691,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21653:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21653:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21644:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "21640:91:0",
												"trueBody": {
													"id": 703,
													"nodeType": "Block",
													"src": "21665:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21716:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21708:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 697,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21708:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21708:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 696,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "21687:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21687:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 702,
															"nodeType": "RevertStatement",
															"src": "21680:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 705,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "21745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21764:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21756:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 706,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21756:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21756:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21745:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"nodeType": "IfStatement",
												"src": "21741:92:0",
												"trueBody": {
													"id": 718,
													"nodeType": "Block",
													"src": "21768:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21818:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21810:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 712,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21810:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21810:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 711,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21790:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21790:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 717,
															"nodeType": "RevertStatement",
															"src": "21783:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 720,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21843:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 723,
															"indexExpression": {
																"id": 721,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "21855:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21843:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"id": 722,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "21862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21843:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 725,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "21873:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21843:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "21843:35:0"
											},
											{
												"condition": {
													"id": 728,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "21893:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "21889:78:0",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "21904:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 730,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "21933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 731,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "21940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "21949:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 729,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21924:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21924:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 734,
															"nodeType": "EmitStatement",
															"src": "21919:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "20629:853:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21497:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21524:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "21516:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "21540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "21566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "21595:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "21590:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21505:106:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21629:0:0"
									},
									"scope": 787,
									"src": "21488:486:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "22389:479:0",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "22408:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "22400:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22400:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"arguments": [
														{
															"id": 751,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "22437:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "22444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 750,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "22427:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22427:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22400:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "22467:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22491:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 757,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22491:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 756,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "22486:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22486:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "22500:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "22486:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22467:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "22463:398:0",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "22505:356:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 762,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "22524:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 763,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "22543:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22524:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "22520:214:0",
															"trueBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "22550:184:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 766,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 743,
																					"src": "22625:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 767,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "22655:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 768,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 745,
																					"src": "22694:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 765,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "22576:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22576:142:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "22569:149:0"
																	}
																]
															}
														},
														{
															"id": 782,
															"nodeType": "UncheckedBlock",
															"src": "22748:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 774,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 741,
																				"src": "22786:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 775,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 743,
																				"src": "22793:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 776,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "22802:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 777,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 745,
																					"src": "22821:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22802:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22828:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 773,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				678,
																				738
																			],
																			"referencedDeclaration": 738,
																			"src": "22777:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22777:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 781,
																	"nodeType": "ExpressionStatement",
																	"src": "22777:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "21982:278:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "22275:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22309:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "22301:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "22325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22359:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "22351:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22290:81:0"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22389:0:0"
									},
									"scope": 787,
									"src": "22266:602:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1377,
							"src": "12390:10481:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 788,
										"name": "ERC20",
										"nameLocations": [
											"22896:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 787,
										"src": "22896:5:0"
									},
									"id": 789,
									"nodeType": "InheritanceSpecifier",
									"src": "22896:5:0"
								}
							],
							"canonicalName": "BBDToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1376,
							"linearizedBaseContracts": [
								1376,
								787,
								170,
								100,
								77,
								129
							],
							"name": "BBDToken",
							"nameLocation": "22884:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 794,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "22933:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "22909:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 790,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22909:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										},
										"id": 793,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f3030305f303030",
											"id": 791,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "22948:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "10_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 792,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "22965:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "22948:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8342083a",
									"id": 799,
									"mutability": "constant",
									"name": "PUBLIC_SUPPLY",
									"nameLocation": "23000:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "22976:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22976:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 796,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "23016:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 797,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "23032:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "23016:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e8be9a44",
									"id": 804,
									"mutability": "constant",
									"name": "LOCKED_SUPPLY",
									"nameLocation": "23067:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23043:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23043:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 803,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 801,
											"name": "TOTAL_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 794,
											"src": "23083:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"id": 802,
											"name": "PUBLIC_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 799,
											"src": "23098:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "23083:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fd48bc",
									"id": 806,
									"mutability": "immutable",
									"name": "startTimestamp",
									"nameLocation": "23145:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23120:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 805,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23120:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8310a74d",
									"id": 808,
									"mutability": "mutable",
									"name": "lastUnlockMonth",
									"nameLocation": "23181:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23166:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 807,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23166:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a779d080",
									"id": 810,
									"mutability": "mutable",
									"name": "totalUnlocked",
									"nameLocation": "23218:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23203:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23203:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67859b6e",
									"id": 813,
									"mutability": "mutable",
									"name": "liquidityListing",
									"nameLocation": "23255:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23240:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 811,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23240:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837456331333639374439383932356241316443324263433730356330373162643136384231304332",
										"id": 812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23274:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d2f9efab",
									"id": 816,
									"mutability": "mutable",
									"name": "gameTreasury",
									"nameLocation": "23338:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23323:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 814,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23323:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838646531313965393837303741633234306162413263423737453833423239383832413334333537",
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23353:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8de119e98707Ac240abA2cB77E83B29882A34357"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d3e474a",
									"id": 819,
									"mutability": "mutable",
									"name": "marketing",
									"nameLocation": "23417:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23402:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23402:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830333439394331384637323635424539414644413136353034413334434431383932463237384145",
										"id": 818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23429:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x03499C18F7265BE9AFDA16504A34CD1892F278AE"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "042249bb",
									"id": 822,
									"mutability": "mutable",
									"name": "stakingReward",
									"nameLocation": "23493:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23478:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 820,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23478:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863633233346131643365333231343834363162376561436235613862663444304334623642653734",
										"id": 821,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23509:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce7842f5",
									"id": 825,
									"mutability": "mutable",
									"name": "referralBonus",
									"nameLocation": "23573:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23558:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 823,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23558:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843654541304538374235353362633434354335456232323432623546323843643831423441436141",
										"id": 824,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23589:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b361412a",
									"id": 828,
									"mutability": "mutable",
									"name": "awardBonus",
									"nameLocation": "23653:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23638:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23638:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837453233453237383161314461354441436538376234663065376266363831393132363346633332",
										"id": 827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23666:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ed2fe91",
									"id": 831,
									"mutability": "mutable",
									"name": "buyingEnabled",
									"nameLocation": "23729:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23717:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 829,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "23717:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23745:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f771cb65",
									"id": 834,
									"mutability": "mutable",
									"name": "sellingEnabled",
									"nameLocation": "23768:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23756:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 832,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "23756:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23785:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "23806:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23798:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23798:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3c11e12a",
									"id": 840,
									"mutability": "mutable",
									"name": "isDex",
									"nameLocation": "23851:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23819:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 839,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 837,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23827:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23819:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 838,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "23838:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdff9b4d",
									"id": 844,
									"mutability": "mutable",
									"name": "managers",
									"nameLocation": "23895:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "23863:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 843,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 841,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23871:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23863:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 842,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "23882:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac",
									"id": 852,
									"name": "TokensUnlocked",
									"nameLocation": "23918:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "23951:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "23943:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPerWallet",
												"nameLocation": "23975:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "23967:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUnlocked",
												"nameLocation": "24009:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "24001:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23932:97:0"
									},
									"src": "23912:118:0"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "24057:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 855,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "24076:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 856,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "24086:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24090:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "24086:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "24076:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656421",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24098:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127",
																"typeString": "literal_string \"Not allowed!\""
															},
															"value": "Not allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127",
																"typeString": "literal_string \"Not allowed!\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24068:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "24068:45:0"
											},
											{
												"id": 862,
												"nodeType": "PlaceholderStatement",
												"src": "24124:1:0"
											}
										]
									},
									"id": 864,
									"name": "isOwner",
									"nameLocation": "24047:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24054:2:0"
									},
									"src": "24038:95:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "24181:258:0",
										"statements": [
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 871,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "24192:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 872,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "24201:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24205:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "24201:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24192:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "24192:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "24228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "PUBLIC_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "24236:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "24222:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24222:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "24222:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 884,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24297:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 882,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24289:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "LOCKED_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "24304:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "24283:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24283:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "24283:35:0"
											},
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "24369:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 890,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "24386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24392:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "24386:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24369:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24369:32:0"
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "24412:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24430:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24412:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "24412:19:0"
											}
										]
									},
									"id": 899,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42424420546f6b656e",
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24161:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_967d686aff54b80901cec9b110d19a7eace42eeff791cc1cda6a0484e3c90564",
														"typeString": "literal_string \"BBD Token\""
													},
													"value": "BBD Token"
												},
												{
													"hexValue": "424244",
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_62efa472771d791c354b2c18397e13fe87ea362a768ddf9ceed6c93a3ebbfefe",
														"typeString": "literal_string \"BBD\""
													},
													"value": "BBD"
												}
											],
											"id": 869,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 866,
												"name": "ERC20",
												"nameLocations": [
													"24155:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 787,
												"src": "24155:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24155:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24152:2:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24181:0:0"
									},
									"scope": 1376,
									"src": "24141:298:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "24488:1556:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 905,
																"name": "totalUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "24507:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 906,
																"name": "LOCKED_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "24523:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24507:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e7320616c726561647920756e6c6f636b6564",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24538:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0",
																"typeString": "literal_string \"All tokens already unlocked\""
															},
															"value": "All tokens already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0",
																"typeString": "literal_string \"All tokens already unlocked\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24499:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24499:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "24499:69:0"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "monthsElapsed",
														"nameLocation": "24589:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "24581:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 913,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "24606:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24612:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "24606:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 915,
																	"name": "startTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "24624:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24606:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 917,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "24605:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24642:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "24605:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24581:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "monthsElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "24668:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 923,
																"name": "lastUnlockMonth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "24684:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24668:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206e6577206d6f6e746820746f20756e6c6f636b",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24701:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c",
																"typeString": "literal_string \"No new month to unlock\""
															},
															"value": "No new month to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c",
																"typeString": "literal_string \"No new month to unlock\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24660:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "24660:66:0"
											},
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "tokensToUnlock",
														"nameLocation": "24747:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "24739:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"hexValue": "30",
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24764:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24739:26:0"
											},
											{
												"body": {
													"id": 996,
													"nodeType": "Block",
													"src": "24841:419:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 944,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "24860:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "24860:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 957,
																		"name": "m",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "24965:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "36",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24970:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6_by_1",
																			"typeString": "int_const 6"
																		},
																		"value": "6"
																	},
																	"src": "24965:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 970,
																			"name": "m",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "25067:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "39",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25072:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_9_by_1",
																				"typeString": "int_const 9"
																			},
																			"value": "9"
																		},
																		"src": "25067:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 992,
																		"nodeType": "Block",
																		"src": "25165:84:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 990,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 983,
																						"name": "tokensToUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 929,
																						"src": "25184:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 989,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 986,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 984,
																										"name": "LOCKED_SUPPLY",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 804,
																										"src": "25203:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "33",
																										"id": 985,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "25219:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_3_by_1",
																											"typeString": "int_const 3"
																										},
																										"value": "3"
																									},
																									"src": "25203:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 987,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "25202:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 988,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "25224:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "25202:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25184:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 991,
																				"nodeType": "ExpressionStatement",
																				"src": "25184:43:0"
																			}
																		]
																	},
																	"id": 993,
																	"nodeType": "IfStatement",
																	"src": "25063:186:0",
																	"trueBody": {
																		"id": 982,
																		"nodeType": "Block",
																		"src": "25075:84:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 980,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 973,
																						"name": "tokensToUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 929,
																						"src": "25094:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 979,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 976,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 974,
																										"name": "LOCKED_SUPPLY",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 804,
																										"src": "25113:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "32",
																										"id": 975,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "25129:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "25113:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 977,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "25112:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 978,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "25134:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "25112:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25094:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 981,
																				"nodeType": "ExpressionStatement",
																				"src": "25094:43:0"
																			}
																		]
																	}
																},
																"id": 994,
																"nodeType": "IfStatement",
																"src": "24961:288:0",
																"trueBody": {
																	"id": 969,
																	"nodeType": "Block",
																	"src": "24973:84:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 960,
																					"name": "tokensToUnlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 929,
																					"src": "24992:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 966,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 963,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 961,
																									"name": "LOCKED_SUPPLY",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 804,
																									"src": "25011:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 962,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "25027:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "25011:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 964,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "25010:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 965,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25032:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "25010:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24992:43:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 968,
																			"nodeType": "ExpressionStatement",
																			"src": "24992:43:0"
																		}
																	]
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "24856:393:0",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "24868:87:0",
																"statements": [
																	{
																		"expression": {
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 947,
																				"name": "tokensToUnlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 929,
																				"src": "24887:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 950,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 948,
																								"name": "LOCKED_SUPPLY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 804,
																								"src": "24906:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "35",
																								"id": 949,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24922:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "24906:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 951,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24905:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 952,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24927:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "24905:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24887:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 955,
																		"nodeType": "ExpressionStatement",
																		"src": "24887:44:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 938,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "24816:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 939,
														"name": "monthsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "24821:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24816:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"initializationExpression": {
													"assignments": [
														933
													],
													"declarations": [
														{
															"constant": false,
															"id": 933,
															"mutability": "mutable",
															"name": "m",
															"nameLocation": "24791:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 997,
															"src": "24783:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 932,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24783:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 937,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 934,
															"name": "lastUnlockMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "24795:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24813:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "24795:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "24783:31:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "24836:3:0",
														"subExpression": {
															"id": 941,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "24836:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 943,
													"nodeType": "ExpressionStatement",
													"src": "24836:3:0"
												},
												"nodeType": "ForStatement",
												"src": "24778:482:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 998,
															"name": "tokensToUnlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "25276:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 999,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "25293:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25276:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1001,
														"name": "LOCKED_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "25309:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25276:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "25272:161:0",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "25324:109:0",
													"statements": [
														{
															"expression": {
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1003,
																	"name": "tokensToUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "25339:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1004,
																		"name": "LOCKED_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "25356:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1005,
																		"name": "totalUnlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "25372:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25356:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25339:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "25339:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "tokensToUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "25453:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25470:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25453:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20756e6c6f636b",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25473:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375",
																"typeString": "literal_string \"Nothing to unlock\""
															},
															"value": "Nothing to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375",
																"typeString": "literal_string \"Nothing to unlock\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25445:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "25445:48:0"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "25506:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "monthsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "25524:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25506:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "25506:31:0"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "totalUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "25548:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1023,
														"name": "tokensToUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "25565:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25548:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "25548:31:0"
											},
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "share",
														"nameLocation": "25600:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "25592:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25592:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "tokensToUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "25608:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "36",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25625:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "25608:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25592:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1035,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25657:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25649:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1033,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25649:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25649:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "liquidityListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "25664:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25682:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1032,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "25639:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25639:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "25639:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1044,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25717:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25709:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25709:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "gameTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "25724:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "25699:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25699:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "25699:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1053,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25773:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25765:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25765:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "marketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "25780:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "25755:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25755:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "25755:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1062,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25826:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25818:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25818:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25818:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "25833:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "25808:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25808:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "25808:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1071,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25883:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1069,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25875:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25875:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "referralBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "25890:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1068,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "25865:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25865:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "25865:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1080,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25940:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1376",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25932:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1078,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25932:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25932:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "awardBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "25947:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "25959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "25922:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25922:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "25922:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1087,
															"name": "lastUnlockMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "25998:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1088,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "26015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1089,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "26022:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "25983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25983:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "EmitStatement",
												"src": "25978:58:0"
											}
										]
									},
									"functionSelector": "f968f493",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 902,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 901,
												"name": "isOwner",
												"nameLocations": [
													"24480:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "24480:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24480:7:0"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "24456:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24468:2:0"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24488:0:0"
									},
									"scope": 1376,
									"src": "24447:1597:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "26164:409:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1103,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "26183:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26192:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26183:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1106,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "26197:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "36",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26206:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"src": "26197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26183:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e646578",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26209:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															},
															"value": "Invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26175:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "26175:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "26242:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26251:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26242:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1120,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "26303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26312:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26303:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "26360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "26360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "26414:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26423:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26414:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1141,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "26472:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26481:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "26472:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1148,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "26530:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26539:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "26530:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1155,
																	"nodeType": "IfStatement",
																	"src": "26526:39:0",
																	"trueBody": {
																		"expression": {
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1151,
																				"name": "awardBonus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "26542:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1152,
																				"name": "newAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1097,
																				"src": "26555:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "26542:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1154,
																		"nodeType": "ExpressionStatement",
																		"src": "26542:23:0"
																	}
																},
																"id": 1156,
																"nodeType": "IfStatement",
																"src": "26468:97:0",
																"trueBody": {
																	"expression": {
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1144,
																			"name": "referralBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "26484:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1145,
																			"name": "newAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1097,
																			"src": "26500:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "26484:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1147,
																	"nodeType": "ExpressionStatement",
																	"src": "26484:26:0"
																}
															},
															"id": 1157,
															"nodeType": "IfStatement",
															"src": "26410:155:0",
															"trueBody": {
																"expression": {
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1137,
																		"name": "stakingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "26426:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1138,
																		"name": "newAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "26442:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "26426:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1140,
																"nodeType": "ExpressionStatement",
																"src": "26426:26:0"
															}
														},
														"id": 1158,
														"nodeType": "IfStatement",
														"src": "26356:209:0",
														"trueBody": {
															"expression": {
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1130,
																	"name": "marketing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "26372:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1131,
																	"name": "newAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "26384:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "26372:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1133,
															"nodeType": "ExpressionStatement",
															"src": "26372:22:0"
														}
													},
													"id": 1159,
													"nodeType": "IfStatement",
													"src": "26299:266:0",
													"trueBody": {
														"expression": {
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1123,
																"name": "gameTreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "26315:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1124,
																"name": "newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "26330:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26315:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1126,
														"nodeType": "ExpressionStatement",
														"src": "26315:25:0"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "26238:327:0",
												"trueBody": {
													"expression": {
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1116,
															"name": "liquidityListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "26254:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1117,
															"name": "newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "26273:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "26254:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1119,
													"nodeType": "ExpressionStatement",
													"src": "26254:29:0"
												}
											}
										]
									},
									"functionSelector": "2be8781f",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1099,
												"name": "isOwner",
												"nameLocations": [
													"26156:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "26156:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26156:7:0"
										}
									],
									"name": "updateDistributionAddress",
									"nameLocation": "26061:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "26105:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "26097:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "26129:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "26121:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26086:60:0"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26164:0:0"
									},
									"scope": 1376,
									"src": "26052:521:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "26720:565:0",
										"statements": [
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "26739:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "26731:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "26743:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26761:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26743:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26731:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1177,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "26779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "33",
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26784:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "26779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1190,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "26864:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "36",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26869:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "26864:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "26948:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39",
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26953:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "26948:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1225,
															"nodeType": "Block",
															"src": "27028:66:0",
															"statements": [
																{
																	"expression": {
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1216,
																			"name": "amountTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "27043:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1219,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1217,
																							"name": "LOCKED_SUPPLY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 804,
																							"src": "27058:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "33",
																							"id": 1218,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27074:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3_by_1",
																								"typeString": "int_const 3"
																							},
																							"value": "3"
																						},
																						"src": "27058:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1220,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27057:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27079:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "27057:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27043:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "27043:39:0"
																}
															]
														},
														"id": 1226,
														"nodeType": "IfStatement",
														"src": "26944:150:0",
														"trueBody": {
															"id": 1215,
															"nodeType": "Block",
															"src": "26956:66:0",
															"statements": [
																{
																	"expression": {
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1206,
																			"name": "amountTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "26971:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1209,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1207,
																							"name": "LOCKED_SUPPLY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 804,
																							"src": "26986:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 1208,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27002:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "26986:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1210,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26985:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27007:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "26985:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26971:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1214,
																	"nodeType": "ExpressionStatement",
																	"src": "26971:39:0"
																}
															]
														}
													},
													"id": 1227,
													"nodeType": "IfStatement",
													"src": "26860:234:0",
													"trueBody": {
														"id": 1202,
														"nodeType": "Block",
														"src": "26872:66:0",
														"statements": [
															{
																"expression": {
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1193,
																		"name": "amountTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "26887:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1194,
																						"name": "LOCKED_SUPPLY",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 804,
																						"src": "26902:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "26918:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "26902:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1197,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "26901:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26923:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "26901:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26887:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1201,
																"nodeType": "ExpressionStatement",
																"src": "26887:39:0"
															}
														]
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "26775:319:0",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "26787:67:0",
													"statements": [
														{
															"expression": {
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1180,
																	"name": "amountTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "26802:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1181,
																					"name": "LOCKED_SUPPLY",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 804,
																					"src": "26817:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26833:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "26817:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1184,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26816:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26838:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "26816:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26802:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1188,
															"nodeType": "ExpressionStatement",
															"src": "26802:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1229,
															"name": "amountTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "27110:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1230,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "27124:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27110:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1232,
														"name": "LOCKED_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "27140:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27110:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1241,
												"nodeType": "IfStatement",
												"src": "27106:119:0",
												"trueBody": {
													"id": 1240,
													"nodeType": "Block",
													"src": "27155:70:0",
													"statements": [
														{
															"expression": {
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1234,
																	"name": "amountTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "27170:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1235,
																		"name": "LOCKED_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "27184:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1236,
																		"name": "totalUnlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "27200:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27184:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27170:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1239,
															"nodeType": "ExpressionStatement",
															"src": "27170:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1242,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "27245:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1243,
															"name": "amountTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "27248:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "amountTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "27261:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "36",
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27275:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "27261:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1247,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "27244:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1248,
												"nodeType": "Return",
												"src": "27237:40:0"
											}
										]
									},
									"functionSelector": "be381b85",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextUnlockInfo",
									"nameLocation": "26590:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26607:2:0"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "26668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "26660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "amountTotal",
												"nameLocation": "26683:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "26675:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "perWallet",
												"nameLocation": "26704:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "26696:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26659:55:0"
									},
									"scope": 1376,
									"src": "26581:704:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "27349:571:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1256,
															"name": "isDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "27446:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1258,
														"indexExpression": {
															"id": 1257,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "27452:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27446:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "27463:14:0",
														"subExpression": {
															"id": 1259,
															"name": "buyingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "27464:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27446:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "27442:186:0",
												"trueBody": {
													"id": 1273,
													"nodeType": "Block",
													"src": "27479:149:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1263,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1254,
																				"src": "27520:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1264,
																				"name": "_owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "27533:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "27520:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1266,
																				"name": "managers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 844,
																				"src": "27543:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1268,
																			"indexExpression": {
																				"id": 1267,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1254,
																				"src": "27552:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27543:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27520:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "427579696e672069732064697361626c6564",
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27581:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b",
																			"typeString": "literal_string \"Buying is disabled\""
																		},
																		"value": "Buying is disabled"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b",
																			"typeString": "literal_string \"Buying is disabled\""
																		}
																	],
																	"id": 1262,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27494:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27494:122:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "27494:122:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1275,
															"name": "isDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "27720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1277,
														"indexExpression": {
															"id": 1276,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "27726:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27720:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "27740:15:0",
														"subExpression": {
															"id": 1278,
															"name": "sellingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "27741:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27720:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "27716:185:0",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "27757:144:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1282,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "27798:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1283,
																				"name": "_owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 836,
																				"src": "27808:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "27798:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1285,
																				"name": "managers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 844,
																				"src": "27818:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1287,
																			"indexExpression": {
																				"id": 1286,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "27827:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27818:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27798:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656c6c696e672069732064697361626c6564",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27853:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e",
																			"typeString": "literal_string \"Selling is disabled\""
																		},
																		"value": "Selling is disabled"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e",
																			"typeString": "literal_string \"Selling is disabled\""
																		}
																	],
																	"id": 1281,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27772:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27772:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1291,
															"nodeType": "ExpressionStatement",
															"src": "27772:117:0"
														}
													]
												}
											},
											{
												"id": 1294,
												"nodeType": "PlaceholderStatement",
												"src": "27911:1:0"
											}
										]
									},
									"id": 1296,
									"name": "canTransfer",
									"nameLocation": "27302:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "27322:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "27314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "27338:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "27330:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27313:35:0"
									},
									"src": "27293:627:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "27995:45:0",
										"statements": [
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1305,
															"name": "managers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "28006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1307,
														"indexExpression": {
															"id": 1306,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "28015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28006:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1308,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "28026:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28006:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "28006:26:0"
											}
										]
									},
									"functionSelector": "a5e90eee",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1302,
												"name": "isOwner",
												"nameLocations": [
													"27987:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "27987:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27987:7:0"
										}
									],
									"name": "setManager",
									"nameLocation": "27937:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "27956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "27948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "27970:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "27965:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27965:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27947:30:0"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27995:0:0"
									},
									"scope": 1376,
									"src": "27928:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "28106:43:0",
										"statements": [
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1319,
														"name": "buyingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "28117:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1320,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "28133:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28117:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "28117:24:0"
											}
										]
									},
									"functionSelector": "8ddedb33",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "isOwner",
												"nameLocations": [
													"28098:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "28098:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28098:7:0"
										}
									],
									"name": "setBuyingEnabled",
									"nameLocation": "28057:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "28079:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "28074:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28073:15:0"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28106:0:0"
									},
									"scope": 1376,
									"src": "28048:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "28216:44:0",
										"statements": [
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "sellingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "28227:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1332,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "28244:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28227:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "28227:25:0"
											}
										]
									},
									"functionSelector": "b16d78cf",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1328,
												"name": "isOwner",
												"nameLocations": [
													"28208:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "28208:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28208:7:0"
										}
									],
									"name": "setSellingEnabled",
									"nameLocation": "28166:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "28189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "28184:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28183:15:0"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28216:0:0"
									},
									"scope": 1376,
									"src": "28157:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "28341:45:0",
										"statements": [
											{
												"expression": {
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1345,
															"name": "isDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "28352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1347,
														"indexExpression": {
															"id": 1346,
															"name": "dexAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "28358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28352:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1348,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "28372:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28352:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "28352:26:0"
											}
										]
									},
									"functionSelector": "7cdf6fb1",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1342,
												"name": "isOwner",
												"nameLocations": [
													"28333:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "28333:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28333:7:0"
										}
									],
									"name": "setDexAddress",
									"nameLocation": "28277:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "dexAddress",
												"nameLocation": "28299:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "28291:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "28316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "28311:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28290:33:0"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28341:0:0"
									},
									"scope": 1376,
									"src": "28268:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										627
									],
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "28613:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "28651:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "28657:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "28661:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1366,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "28624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BBDToken_$1376_$",
																"typeString": "type(contract super BBDToken)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28630:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 627,
														"src": "28624:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28624:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "28624:44:0"
											}
										]
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1362,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "28603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1363,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1356,
													"src": "28609:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1361,
												"name": "canTransfer",
												"nameLocations": [
													"28591:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1296,
												"src": "28591:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28591:21:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "28476:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28582:8:0"
									},
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28515:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28507:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28538:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28530:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28559:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "28551:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28496:76:0"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28613:0:0"
									},
									"scope": 1376,
									"src": "28467:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1377,
							"src": "22875:5804:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20,
								852
							]
						}
					],
					"src": "33:28648:0"
				},
				"id": 0
			}
		}
	}
}