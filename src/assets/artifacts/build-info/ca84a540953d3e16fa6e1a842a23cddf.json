{
	"id": "ca84a540953d3e16fa6e1a842a23cddf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/assets/BBD_Token_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: src/assets/BBD_Token.sol\n\n\npragma solidity ^0.8.20;\n\n\ncontract BBDToken is ERC20 {\n    uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18;\n    uint256 public constant PUBLIC_SUPPLY = 1_000_000_000 * 1e18;\n    uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY;\n\n    uint256 public immutable startTimestamp;\n    uint256 public lastUnlockMonth;\n    uint256 public totalUnlocked;\n\n    address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2;\n    address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357;\n    address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE;\n    address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74;\n    address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA;\n    address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32;\n\n    bool public buyingEnabled = true;\n    bool public sellingEnabled = true;\n\n    address _owner;\n    mapping(address => bool) public isDex;\n    mapping(address => bool) public managers;\n\n    event TokensUnlocked(uint256 month, uint256 amountPerWallet, uint256 totalUnlocked);\n\n    modifier isOwner() {\n        require(_owner == msg.sender, \"Not allowed!\");\n        _;\n    }\n\n    constructor() ERC20(\"BBD Token\", \"BBD\") {\n        _owner = msg.sender;\n        _mint(_owner, PUBLIC_SUPPLY);          // 1 billion to owner\n        _mint(address(this), LOCKED_SUPPLY);   // 9 billion stays locked in contract\n\n        startTimestamp = block.timestamp;\n        lastUnlockMonth = 0;\n    }\n\n    function unlockTokens() external isOwner {\n        require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\");\n\n        uint256 monthsElapsed = (block.timestamp - startTimestamp) / 30 days;\n        require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\");\n\n        uint256 tokensToUnlock = 0;\n\n        for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {\n            if (m <= 3) {\n                tokensToUnlock += (LOCKED_SUPPLY * 5) / 1000; // 0.5%\n            } else if (m <= 6) {\n                tokensToUnlock += (LOCKED_SUPPLY * 1) / 100; // 1%\n            } else if (m <= 9) {\n                tokensToUnlock += (LOCKED_SUPPLY * 2) / 100; // 2%\n            } else {\n                tokensToUnlock += (LOCKED_SUPPLY * 3) / 100; // 3%\n            }\n        }\n\n        if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {\n            tokensToUnlock = LOCKED_SUPPLY - totalUnlocked; // Adjust final unlock if exceeding\n        }\n\n        require(tokensToUnlock > 0, \"Nothing to unlock\");\n\n        lastUnlockMonth = monthsElapsed;\n        totalUnlocked += tokensToUnlock;\n\n        uint256 share = tokensToUnlock / 6;\n\n        _transfer(address(this), liquidityListing, share);\n        _transfer(address(this), gameTreasury, share);\n        _transfer(address(this), marketing, share);\n        _transfer(address(this), stakingReward, share);\n        _transfer(address(this), referralBonus, share);\n        _transfer(address(this), awardBonus, share);\n\n        emit TokensUnlocked(lastUnlockMonth, share, totalUnlocked);\n    }\n\n    function updateDistributionAddress(uint256 index, address newAddress) external isOwner {\n        require(index >= 1 && index <= 6, \"Invalid index\");\n\n        if(index == 1) liquidityListing = newAddress;\n        else if(index == 2) gameTreasury = newAddress;\n        else if(index == 3) marketing = newAddress;\n        else if(index == 4) stakingReward = newAddress;\n        else if(index == 5) referralBonus = newAddress;\n        else if(index == 6) awardBonus = newAddress;\n    }\n\n    function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {\n        uint256 m = lastUnlockMonth + 1;\n\n        if (m <= 3) {\n            amountTotal = (LOCKED_SUPPLY * 5) / 1000;\n        } else if (m <= 6) {\n            amountTotal = (LOCKED_SUPPLY * 1) / 100;\n        } else if (m <= 9) {\n            amountTotal = (LOCKED_SUPPLY * 2) / 100;\n        } else {\n            amountTotal = (LOCKED_SUPPLY * 3) / 100;\n        }\n\n        if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {\n            amountTotal = LOCKED_SUPPLY - totalUnlocked;\n        }\n\n        return (m, amountTotal, amountTotal / 6);\n    }\n\n\n    modifier canTransfer(address sender, address recipient) {\n        // If buying is disabled, users cannot receive tokens from DEX addresses\n        if (isDex[sender] && !buyingEnabled) {\n            require(recipient == _owner || managers[recipient], \"Buying is disabled\");\n        }\n        // If selling is disabled, users cannot send tokens to DEX addresses\n        if (isDex[recipient] && !sellingEnabled) {\n            require(sender == _owner || managers[sender], \"Selling is disabled\");\n        }\n        _;\n    }\n\n    function setManager(address manager, bool status) external isOwner {\n        managers[manager] = status;\n    }\n\n    function setBuyingEnabled(bool _enabled) external isOwner {\n        buyingEnabled = _enabled;\n    }\n\n    function setSellingEnabled(bool _enabled) external isOwner {\n        sellingEnabled = _enabled;\n    }\n\n    function setDexAddress(address dexAddress, bool status) external isOwner {\n        isDex[dexAddress] = status;\n    }\n\n    // Override transfer function to include buying and selling control\n    // function _beforeTokenTransfer(\n    //     address from,\n    //     address to,\n    //     uint256 amount\n    // ) internal override canTransfer(from, to) {\n    //     super._beforeTokenTransfer(from, to, amount);\n    // }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/assets/BBD_Token_flattened.sol": {
				"BBDToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPerWallet",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUnlocked",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LOCKED_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "awardBonus",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextUnlockInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTotal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "perWallet",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isDex",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUnlockMonth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityListing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "managers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referralBonus",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setBuyingEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dexAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setDexAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setSellingEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingReward",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUnlocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "updateDistributionAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/assets/BBD_Token_flattened.sol\":21808:27303  contract BBDToken is ERC20 {... */\n  mstore(0x40, 0xa0)\n    /* \"src/assets/BBD_Token_flattened.sol\":22164:22240  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  0x07\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":22198:22240  0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  0x7ec13697d98925ba1dc2bcc705c071bd168b10c2\n    /* \"src/assets/BBD_Token_flattened.sol\":22164:22240  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":22246:22318  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  0x08\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":22276:22318  0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  0x8de119e98707ac240aba2cb77e83b29882a34357\n    /* \"src/assets/BBD_Token_flattened.sol\":22246:22318  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":22324:22393  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  0x09\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":22351:22393  0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  0x03499c18f7265be9afda16504a34cd1892f278ae\n    /* \"src/assets/BBD_Token_flattened.sol\":22324:22393  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":22399:22472  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  0x0a\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":22430:22472  0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  0xcc234a1d3e32148461b7eacb5a8bf4d0c4b6be74\n    /* \"src/assets/BBD_Token_flattened.sol\":22399:22472  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":22478:22551  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  0x0b\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":22509:22551  0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  0xceea0e87b553bc445c5eb2242b5f28cd81b4acaa\n    /* \"src/assets/BBD_Token_flattened.sol\":22478:22551  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":22557:22627  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n  0x0c\n  dup1\n  sload\n    /* \"src/assets/BBD_Token_flattened.sol\":22672:22705  bool public sellingEnabled = true */\n  0x01017e23e2781a1da5dace87b4f0e7bf68191263fc32\n  not(sub(shl(0xb0, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":23010:23312  constructor() ERC20(\"BBD Token\", \"BBD\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/assets/BBD_Token_flattened.sol\":12451:12564  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x212122102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x109091)\n  dup2\n  mstore\n  pop\n    /* \"src/assets/BBD_Token_flattened.sol\":12525:12530  name_ */\n  dup2\n    /* \"src/assets/BBD_Token_flattened.sol\":12517:12522  _name */\n  0x03\n    /* \"src/assets/BBD_Token_flattened.sol\":12517:12530  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"src/assets/BBD_Token_flattened.sol\":12540:12547  _symbol */\n  0x04\n    /* \"src/assets/BBD_Token_flattened.sol\":12540:12557  _symbol = symbol_ */\n  tag_7\n    /* \"src/assets/BBD_Token_flattened.sol\":12550:12557  symbol_ */\n  dup3\n    /* \"src/assets/BBD_Token_flattened.sol\":12540:12547  _symbol */\n  dup3\n    /* \"src/assets/BBD_Token_flattened.sol\":12540:12557  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"src/assets/BBD_Token_flattened.sol\":23060:23066  _owner */\n  0x0d\n    /* \"src/assets/BBD_Token_flattened.sol\":23060:23079  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":23069:23079  msg.sender */\n  caller\n    /* \"src/assets/BBD_Token_flattened.sol\":23060:23079  _owner = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":23089:23117  _mint(_owner, PUBLIC_SUPPLY) */\n  tag_9\n  swap2\n  pop\n    /* \"src/assets/BBD_Token_flattened.sol\":21947:21967  1_000_000_000 * 1e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"src/assets/BBD_Token_flattened.sol\":23089:23094  _mint */\n  tag_10\n    /* \"src/assets/BBD_Token_flattened.sol\":23089:23117  _mint(_owner, PUBLIC_SUPPLY) */\n  jump\t// in\ntag_9:\n    /* \"src/assets/BBD_Token_flattened.sol\":23158:23193  _mint(address(this), LOCKED_SUPPLY) */\n  tag_11\n    /* \"src/assets/BBD_Token_flattened.sol\":23172:23176  this */\n  address\n    /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n  tag_12\n    /* \"src/assets/BBD_Token_flattened.sol\":21947:21967  1_000_000_000 * 1e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n  0x204fce5e3e25026110000000\n    /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"src/assets/BBD_Token_flattened.sol\":23158:23163  _mint */\n  tag_10\n    /* \"src/assets/BBD_Token_flattened.sol\":23158:23193  _mint(address(this), LOCKED_SUPPLY) */\n  jump\t// in\ntag_11:\n    /* \"src/assets/BBD_Token_flattened.sol\":23261:23276  block.timestamp */\n  timestamp\n    /* \"src/assets/BBD_Token_flattened.sol\":23244:23276  startTimestamp = block.timestamp */\n  0x80\n  mstore\n    /* \"src/assets/BBD_Token_flattened.sol\":23304:23305  0 */\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":23286:23301  lastUnlockMonth */\n  0x05\n    /* \"src/assets/BBD_Token_flattened.sol\":23286:23305  lastUnlockMonth = 0 */\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":21808:27303  contract BBDToken is ERC20 {... */\n  jump(tag_39)\n    /* \"src/assets/BBD_Token_flattened.sol\":18308:18516  function _mint(address account, uint256 value) internal {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":18378:18399  account == address(0) */\n  dup3\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":18374:18465  if (account == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"src/assets/BBD_Token_flattened.sol\":18422:18454  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"src/assets/BBD_Token_flattened.sol\":18451:18452  0 */\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":18422:18454  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3066:3117   */\n  mstore\n    /* \"#utility.yul\":3039:3057   */\n  0x24\n  add\n    /* \"src/assets/BBD_Token_flattened.sol\":18422:18454  ERC20InvalidReceiver(address(0)) */\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/assets/BBD_Token_flattened.sol\":18374:18465  if (account == address(0)) {... */\ntag_16:\n    /* \"src/assets/BBD_Token_flattened.sol\":18474:18509  _update(address(0), account, value) */\n  tag_19\n    /* \"src/assets/BBD_Token_flattened.sol\":18490:18491  0 */\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":18494:18501  account */\n  dup4\n    /* \"src/assets/BBD_Token_flattened.sol\":18503:18508  value */\n  dup4\n    /* \"src/assets/BBD_Token_flattened.sol\":18474:18481  _update */\n  tag_20\n    /* \"src/assets/BBD_Token_flattened.sol\":18474:18509  _update(address(0), account, value) */\n  jump\t// in\ntag_19:\n    /* \"src/assets/BBD_Token_flattened.sol\":18308:18516  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/assets/BBD_Token_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":16947:16965  from == address(0) */\n  dup4\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":16943:17483  if (from == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"src/assets/BBD_Token_flattened.sol\":17099:17104  value */\n  dup1\n    /* \"src/assets/BBD_Token_flattened.sol\":17083:17095  _totalSupply */\n  0x02\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":17083:17104  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"src/assets/BBD_Token_flattened.sol\":16943:17483  if (from == address(0)) {... */\n  tag_25\n  swap1\n  pop\n  jump\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":17157:17172  _balances[from] */\n  dup4\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":17135:17154  uint256 fromBalance */\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":17157:17172  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"src/assets/BBD_Token_flattened.sol\":17190:17209  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"src/assets/BBD_Token_flattened.sol\":17186:17301  if (fromBalance < value) {... */\n  iszero\n  tag_26\n  jumpi\n    /* \"src/assets/BBD_Token_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3478:3510   */\n  dup6\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3460:3511   */\n  mstore\n    /* \"#utility.yul\":3527:3545   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3520:3554   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3570:3588   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3563:3597   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3433:3451   */\n  0x64\n  add\n    /* \"src/assets/BBD_Token_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_17\n    /* \"#utility.yul\":3258:3603   */\n  jump\n    /* \"src/assets/BBD_Token_flattened.sol\":17186:17301  if (fromBalance < value) {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":17421:17436  _balances[from] */\n  dup5\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":17421:17430  _balances */\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":17421:17436  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"src/assets/BBD_Token_flattened.sol\":17439:17458  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"src/assets/BBD_Token_flattened.sol\":17421:17458  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":16943:17483  if (from == address(0)) {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":17497:17513  to == address(0) */\n  dup3\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":17493:17918  if (to == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"src/assets/BBD_Token_flattened.sol\":17660:17672  _totalSupply */\n  0x02\n    /* \"src/assets/BBD_Token_flattened.sol\":17660:17681  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":17493:17918  if (to == address(0)) {... */\n  jump(tag_30)\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":17871:17884  _balances[to] */\n  dup3\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":17871:17880  _balances */\n  0x00\n    /* \"src/assets/BBD_Token_flattened.sol\":17871:17884  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"src/assets/BBD_Token_flattened.sol\":17871:17893  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token_flattened.sol\":17493:17918  if (to == address(0)) {... */\ntag_30:\n    /* \"src/assets/BBD_Token_flattened.sol\":17948:17950  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n  and\n    /* \"src/assets/BBD_Token_flattened.sol\":17942:17946  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"src/assets/BBD_Token_flattened.sol\":17952:17957  value */\n  dup4\n    /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n  mload(0x40)\n  tag_31\n  swap2\n    /* \"#utility.yul\":3754:3779   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3742:3744   */\n  0x20\n    /* \"#utility.yul\":3727:3745   */\n  add\n  swap1\n    /* \"#utility.yul\":3608:3785   */\n  jump\n    /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"src/assets/BBD_Token_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_33:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_34:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_42:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_43:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_36:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_47:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_48:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_46:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_54\n  tag_33\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1555:1652   */\n  tag_55\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_56\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_34\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_36\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_59:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_50)\n    /* \"#utility.yul\":1744:2393   */\ntag_58:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_62:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_65:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2782   */\ntag_38:\n    /* \"#utility.yul\":2716:2726   */\n  0x4e487b71\n    /* \"#utility.yul\":2711:2714   */\n  0xe0\n    /* \"#utility.yul\":2707:2727   */\n  shl\n    /* \"#utility.yul\":2704:2705   */\n  0x00\n    /* \"#utility.yul\":2697:2728   */\n  mstore\n    /* \"#utility.yul\":2747:2751   */\n  0x11\n    /* \"#utility.yul\":2744:2745   */\n  0x04\n    /* \"#utility.yul\":2737:2752   */\n  mstore\n    /* \"#utility.yul\":2771:2775   */\n  0x24\n    /* \"#utility.yul\":2768:2769   */\n  0x00\n    /* \"#utility.yul\":2761:2776   */\n  revert\n    /* \"#utility.yul\":2787:2915   */\ntag_13:\n    /* \"#utility.yul\":2854:2863   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":2875:2886   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":2872:2909   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2889:2907   */\n  tag_69\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2787:2915   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3128:3253   */\ntag_24:\n    /* \"#utility.yul\":3193:3202   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3214:3224   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3211:3247   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3227:3245   */\n  tag_69\n  tag_38\n  jump\t// in\n    /* \"#utility.yul\":3608:3785   */\ntag_39:\n    /* \"src/assets/BBD_Token_flattened.sol\":21808:27303  contract BBDToken is ERC20 {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/assets/BBD_Token_flattened.sol\":21808:27303  contract BBDToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x902d55a5\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xce7842f5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe8be9a44\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe8be9a44\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf771cb65\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xfdff9b4d\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xce7842f5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd2f9efab\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe6fd48bc\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xa9059cbb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb16d78cf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb361412a\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbe381b85\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x902d55a5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa5e90eee\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa779d080\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x3c11e12a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8310a74d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8310a74d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8342083a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8ddedb33\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ed2fe91\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x3c11e12a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x67859b6e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7cdf6fb1\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x23b872dd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2be8781f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2d3e474a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x042249bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/assets/BBD_Token_flattened.sol\":22399:22472  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n    tag_3:\n      sload(0x0a)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":22399:22472  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/assets/BBD_Token_flattened.sol\":12629:12718  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_44\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":13699:13796  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"src/assets/BBD_Token_flattened.sol\":13777:13789  _totalSupply */\n      sload(0x02)\n        /* \"src/assets/BBD_Token_flattened.sol\":13699:13796  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":13699:13796  function totalSupply() public view virtual returns (uint256) {... */\n      tag_44\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":15626:15870  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_50\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n    tag_8:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"src/assets/BBD_Token_flattened.sol\":22324:22393  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n    tag_9:\n      sload(0x09)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":13557:13639  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"src/assets/BBD_Token_flattened.sol\":13630:13632  18 */\n      0x12\n        /* \"#utility.yul\":2328:2364   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2316:2318   */\n      0x20\n        /* \"#utility.yul\":2301:2319   */\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":13557:13639  function decimals() public view virtual returns (uint8) {... */\n      tag_44\n        /* \"#utility.yul\":2186:2370   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":22732:22769  mapping(address => bool) public isDex */\n    tag_11:\n      tag_50\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":22164:22240  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n    tag_12:\n      sload(0x07)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":13854:13970  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_56\n      tag_85\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":13945:13963  _balances[account] */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":13919:13926  uint256 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":13945:13963  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":13854:13970  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":26883:26999  function setDexAddress(address dexAddress, bool status) external isOwner {... */\n    tag_14:\n      tag_65\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":22093:22123  uint256 public lastUnlockMonth */\n    tag_15:\n      tag_56\n      sload(0x05)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":21907:21967  uint256 public constant PUBLIC_SUPPLY = 1_000_000_000 * 1e18 */\n    tag_16:\n      tag_56\n      shl(0x1b, 0x6765c793fa10079d)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":26671:26770  function setBuyingEnabled(bool _enabled) external isOwner {... */\n    tag_17:\n      tag_65\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":22634:22666  bool public buyingEnabled = true */\n    tag_18:\n      sload(0x0c)\n      tag_50\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":21841:21901  uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18 */\n    tag_19:\n      tag_56\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":21841:21901  uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18 */\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":12831:12924  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_46\n      tag_109\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":26555:26665  function setManager(address manager, bool status) external isOwner {... */\n    tag_21:\n      tag_65\n      tag_112\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":22129:22157  uint256 public totalUnlocked */\n    tag_22:\n      tag_56\n      sload(0x06)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":14165:14343  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_50\n      tag_118\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":26776:26877  function setSellingEnabled(bool _enabled) external isOwner {... */\n    tag_24:\n      tag_65\n      tag_122\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":22557:22627  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n    tag_25:\n      sload(0x0c)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":25369:26023  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n    tag_26:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3377:3402   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3418:3436   */\n      dup5\n      add\n        /* \"#utility.yul\":3411:3445   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3461:3479   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3454:3488   */\n      mstore\n        /* \"#utility.yul\":3365:3367   */\n      0x60\n        /* \"#utility.yul\":3350:3368   */\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":25369:26023  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n      tag_44\n        /* \"#utility.yul\":3175:3494   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":22478:22551  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n    tag_27:\n      sload(0x0b)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":22246:22318  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n    tag_28:\n      sload(0x08)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":14401:14541  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_56\n      tag_138\n      calldatasize\n      0x04\n      tag_139\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14525  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":14481:14488  uint256 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14525  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14518  _allowances */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14525  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14534  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":14401:14541  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":22048:22087  uint256 public immutable startTimestamp */\n    tag_30:\n      tag_56\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":21973:22041  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n    tag_31:\n      tag_56\n      tag_146\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":22672:22705  bool public sellingEnabled = true */\n    tag_32:\n      sload(0x0c)\n      tag_50\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":23318:24876  function unlockTokens() external isOwner {... */\n    tag_33:\n      tag_65\n      tag_152\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":22775:22815  mapping(address => bool) public managers */\n    tag_34:\n      tag_50\n      tag_154\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_154:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":12629:12718  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"src/assets/BBD_Token_flattened.sol\":12674:12687  string memory */\n      0x60\n        /* \"src/assets/BBD_Token_flattened.sol\":12706:12711  _name */\n      0x03\n        /* \"src/assets/BBD_Token_flattened.sol\":12699:12711  return _name */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_159\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":12629:12718  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"src/assets/BBD_Token_flattened.sol\":14921:14925  bool */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":14975:15006  _approve(owner, spender, value) */\n      tag_167\n        /* \"src/assets/BBD_Token_flattened.sol\":4256:4266  msg.sender */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":14991:14998  spender */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":15000:15005  value */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":14975:14983  _approve */\n      tag_168\n        /* \"src/assets/BBD_Token_flattened.sol\":14975:15006  _approve(owner, spender, value) */\n      jump\t// in\n    tag_167:\n        /* \"src/assets/BBD_Token_flattened.sol\":15023:15027  true */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":15016:15027  return true */\n      swap2\n      pop\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_164:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":15626:15870  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"src/assets/BBD_Token_flattened.sol\":15713:15717  bool */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":15769:15806  _spendAllowance(from, spender, value) */\n      tag_172\n        /* \"src/assets/BBD_Token_flattened.sol\":15785:15789  from */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":4256:4266  msg.sender */\n      dup3\n        /* \"src/assets/BBD_Token_flattened.sol\":15800:15805  value */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":15769:15784  _spendAllowance */\n      tag_173\n        /* \"src/assets/BBD_Token_flattened.sol\":15769:15806  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_172:\n        /* \"src/assets/BBD_Token_flattened.sol\":15816:15842  _transfer(from, to, value) */\n      tag_174\n        /* \"src/assets/BBD_Token_flattened.sol\":15826:15830  from */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":15832:15834  to */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":15836:15841  value */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":15816:15825  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":15816:15842  _transfer(from, to, value) */\n      jump\t// in\n    tag_174:\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":15859:15863  true */\n      0x01\n      swap5\n        /* \"src/assets/BBD_Token_flattened.sol\":15626:15870  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n    tag_68:\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22955  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token_flattened.sol\":22959:22969  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22969  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token_flattened.sol\":22941:22986  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"src/assets/BBD_Token_flattened.sol\":24996:24997  1 */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":24987:24992  index */\n      dup3\n        /* \"src/assets/BBD_Token_flattened.sol\":24987:24997  index >= 1 */\n      lt\n      iszero\n        /* \"src/assets/BBD_Token_flattened.sol\":24987:25011  index >= 1 && index <= 6 */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":25010:25011  6 */\n      0x06\n        /* \"src/assets/BBD_Token_flattened.sol\":25001:25006  index */\n      dup3\n        /* \"src/assets/BBD_Token_flattened.sol\":25001:25011  index <= 6 */\n      gt\n      iszero\n        /* \"src/assets/BBD_Token_flattened.sol\":24987:25011  index >= 1 && index <= 6 */\n    tag_181:\n        /* \"src/assets/BBD_Token_flattened.sol\":24979:25029  require(index >= 1 && index <= 6, \"Invalid index\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4692:4694   */\n      0x20\n        /* \"src/assets/BBD_Token_flattened.sol\":24979:25029  require(index >= 1 && index <= 6, \"Invalid index\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4674:4695   */\n      mstore\n        /* \"#utility.yul\":4731:4733   */\n      0x0d\n        /* \"#utility.yul\":4711:4729   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4704:4734   */\n      mstore\n      shl(0x9b, 0x092dcecc2d8d2c840d2dcc8caf)\n        /* \"#utility.yul\":4750:4768   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4743:4786   */\n      mstore\n        /* \"#utility.yul\":4803:4821   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":24979:25029  require(index >= 1 && index <= 6, \"Invalid index\") */\n      tag_178\n        /* \"#utility.yul\":4490:4827   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":24979:25029  require(index >= 1 && index <= 6, \"Invalid index\") */\n    tag_182:\n        /* \"src/assets/BBD_Token_flattened.sol\":25043:25048  index */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25052:25053  1 */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":25043:25053  index == 1 */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":25040:25356  if(index == 1) liquidityListing = newAddress;... */\n      tag_185\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25055:25071  liquidityListing */\n      0x07\n        /* \"src/assets/BBD_Token_flattened.sol\":25055:25084  liquidityListing = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":25040:25356  if(index == 1) liquidityListing = newAddress;... */\n    tag_185:\n        /* \"src/assets/BBD_Token_flattened.sol\":25102:25107  index */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25111:25112  2 */\n      0x02\n        /* \"src/assets/BBD_Token_flattened.sol\":25102:25112  index == 2 */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":25099:25356  if(index == 2) gameTreasury = newAddress;... */\n      tag_187\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25114:25126  gameTreasury */\n      0x08\n        /* \"src/assets/BBD_Token_flattened.sol\":25114:25139  gameTreasury = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":25099:25356  if(index == 2) gameTreasury = newAddress;... */\n    tag_187:\n        /* \"src/assets/BBD_Token_flattened.sol\":25157:25162  index */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25166:25167  3 */\n      0x03\n        /* \"src/assets/BBD_Token_flattened.sol\":25157:25167  index == 3 */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":25154:25356  if(index == 3) marketing = newAddress;... */\n      tag_189\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25169:25178  marketing */\n      0x09\n        /* \"src/assets/BBD_Token_flattened.sol\":25169:25191  marketing = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":25154:25356  if(index == 3) marketing = newAddress;... */\n    tag_189:\n        /* \"src/assets/BBD_Token_flattened.sol\":25209:25214  index */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25218:25219  4 */\n      0x04\n        /* \"src/assets/BBD_Token_flattened.sol\":25209:25219  index == 4 */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":25206:25356  if(index == 4) stakingReward = newAddress;... */\n      tag_191\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25221:25234  stakingReward */\n      0x0a\n        /* \"src/assets/BBD_Token_flattened.sol\":25221:25247  stakingReward = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":25206:25356  if(index == 4) stakingReward = newAddress;... */\n    tag_191:\n        /* \"src/assets/BBD_Token_flattened.sol\":25265:25270  index */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25274:25275  5 */\n      0x05\n        /* \"src/assets/BBD_Token_flattened.sol\":25265:25275  index == 5 */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":25262:25356  if(index == 5) referralBonus = newAddress;... */\n      tag_193\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25277:25290  referralBonus */\n      0x0b\n        /* \"src/assets/BBD_Token_flattened.sol\":25277:25303  referralBonus = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":25262:25356  if(index == 5) referralBonus = newAddress;... */\n    tag_193:\n        /* \"src/assets/BBD_Token_flattened.sol\":25321:25326  index */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25330:25331  6 */\n      0x06\n        /* \"src/assets/BBD_Token_flattened.sol\":25321:25331  index == 6 */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":25318:25356  if(index == 6) awardBonus = newAddress */\n      tag_195\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25333:25343  awardBonus */\n      0x0c\n        /* \"src/assets/BBD_Token_flattened.sol\":25333:25356  awardBonus = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":25318:25356  if(index == 6) awardBonus = newAddress */\n    tag_195:\n        /* \"src/assets/BBD_Token_flattened.sol\":24882:25363  function updateDistributionAddress(uint256 index, address newAddress) external isOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":26883:26999  function setDexAddress(address dexAddress, bool status) external isOwner {... */\n    tag_91:\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22955  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token_flattened.sol\":22959:22969  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22969  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token_flattened.sol\":22941:22986  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":26966:26983  isDex[dexAddress] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":26966:26971  isDex */\n      0x0e\n        /* \"src/assets/BBD_Token_flattened.sol\":26966:26983  isDex[dexAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":26966:26992  isDex[dexAddress] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":26883:26999  function setDexAddress(address dexAddress, bool status) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":26671:26770  function setBuyingEnabled(bool _enabled) external isOwner {... */\n    tag_101:\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22955  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token_flattened.sol\":22959:22969  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22969  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token_flattened.sol\":22941:22986  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_203:\n        /* \"src/assets/BBD_Token_flattened.sol\":26739:26752  buyingEnabled */\n      0x0c\n        /* \"src/assets/BBD_Token_flattened.sol\":26739:26763  buyingEnabled = _enabled */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":26671:26770  function setBuyingEnabled(bool _enabled) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":12831:12924  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"src/assets/BBD_Token_flattened.sol\":12878:12891  string memory */\n      0x60\n        /* \"src/assets/BBD_Token_flattened.sol\":12910:12917  _symbol */\n      0x04\n        /* \"src/assets/BBD_Token_flattened.sol\":12903:12917  return _symbol */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":26555:26665  function setManager(address manager, bool status) external isOwner {... */\n    tag_113:\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22955  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token_flattened.sol\":22959:22969  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22969  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token_flattened.sol\":22941:22986  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":26632:26649  managers[manager] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":26632:26640  managers */\n      0x0f\n        /* \"src/assets/BBD_Token_flattened.sol\":26632:26649  managers[manager] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":26632:26658  managers[manager] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":26555:26665  function setManager(address manager, bool status) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":14165:14343  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_119:\n        /* \"src/assets/BBD_Token_flattened.sol\":14234:14238  bool */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":14288:14315  _transfer(owner, to, value) */\n      tag_167\n        /* \"src/assets/BBD_Token_flattened.sol\":4256:4266  msg.sender */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":14305:14307  to */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":14309:14314  value */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":14288:14297  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":14288:14315  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":26776:26877  function setSellingEnabled(bool _enabled) external isOwner {... */\n    tag_123:\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22955  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token_flattened.sol\":22959:22969  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22969  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token_flattened.sol\":22941:22986  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_220:\n        /* \"src/assets/BBD_Token_flattened.sol\":26845:26859  sellingEnabled */\n      0x0c\n        /* \"src/assets/BBD_Token_flattened.sol\":26845:26870  sellingEnabled = _enabled */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":26776:26877  function setSellingEnabled(bool _enabled) external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":25369:26023  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n    tag_128:\n        /* \"src/assets/BBD_Token_flattened.sol\":25421:25434  uint256 month */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":25436:25455  uint256 amountTotal */\n      dup1\n        /* \"src/assets/BBD_Token_flattened.sol\":25457:25474  uint256 perWallet */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":25486:25495  uint256 m */\n      dup1\n        /* \"src/assets/BBD_Token_flattened.sol\":25498:25513  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token_flattened.sol\":25516:25517  1 */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":25498:25517  lastUnlockMonth + 1 */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"src/assets/BBD_Token_flattened.sol\":25486:25517  uint256 m = lastUnlockMonth + 1 */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":25537:25538  3 */\n      0x03\n        /* \"src/assets/BBD_Token_flattened.sol\":25532:25533  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25532:25538  m <= 3 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":25528:25839  if (m <= 3) {... */\n      tag_226\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25590:25594  1000 */\n      0x03e8\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_227\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"src/assets/BBD_Token_flattened.sol\":25569:25586  LOCKED_SUPPLY * 5 */\n      tag_229\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":25585:25586  5 */\n      0x05\n        /* \"src/assets/BBD_Token_flattened.sol\":25569:25586  LOCKED_SUPPLY * 5 */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"src/assets/BBD_Token_flattened.sol\":25568:25594  (LOCKED_SUPPLY * 5) / 1000 */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"src/assets/BBD_Token_flattened.sol\":25554:25594  amountTotal = (LOCKED_SUPPLY * 5) / 1000 */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":25528:25839  if (m <= 3) {... */\n      jump(tag_243)\n    tag_226:\n        /* \"src/assets/BBD_Token_flattened.sol\":25620:25621  6 */\n      0x06\n        /* \"src/assets/BBD_Token_flattened.sol\":25615:25616  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25615:25621  m <= 6 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":25611:25839  if (m <= 6) {... */\n      tag_234\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25673:25676  100 */\n      0x64\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_235\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_235:\n        /* \"src/assets/BBD_Token_flattened.sol\":25652:25669  LOCKED_SUPPLY * 1 */\n      tag_229\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":25668:25669  1 */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":25652:25669  LOCKED_SUPPLY * 1 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":25611:25839  if (m <= 6) {... */\n    tag_234:\n        /* \"src/assets/BBD_Token_flattened.sol\":25702:25703  9 */\n      0x09\n        /* \"src/assets/BBD_Token_flattened.sol\":25697:25698  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":25697:25703  m <= 9 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":25693:25839  if (m <= 9) {... */\n      tag_239\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25755:25758  100 */\n      0x64\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_240\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_240:\n        /* \"src/assets/BBD_Token_flattened.sol\":25734:25751  LOCKED_SUPPLY * 2 */\n      tag_229\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":25750:25751  2 */\n      0x02\n        /* \"src/assets/BBD_Token_flattened.sol\":25734:25751  LOCKED_SUPPLY * 2 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":25693:25839  if (m <= 9) {... */\n    tag_239:\n        /* \"src/assets/BBD_Token_flattened.sol\":25825:25828  100 */\n      0x64\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_244\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_244:\n        /* \"src/assets/BBD_Token_flattened.sol\":25804:25821  LOCKED_SUPPLY * 3 */\n      tag_245\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":25820:25821  3 */\n      0x03\n        /* \"src/assets/BBD_Token_flattened.sol\":25804:25821  LOCKED_SUPPLY * 3 */\n      tag_230\n      jump\t// in\n    tag_245:\n        /* \"src/assets/BBD_Token_flattened.sol\":25803:25828  (LOCKED_SUPPLY * 3) / 100 */\n      tag_246\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_246:\n        /* \"src/assets/BBD_Token_flattened.sol\":25789:25828  amountTotal = (LOCKED_SUPPLY * 3) / 100 */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":25693:25839  if (m <= 9) {... */\n    tag_243:\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_247\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_247:\n        /* \"src/assets/BBD_Token_flattened.sol\":25867:25880  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token_flattened.sol\":25853:25880  amountTotal + totalUnlocked */\n      tag_248\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":25853:25864  amountTotal */\n      dup6\n        /* \"src/assets/BBD_Token_flattened.sol\":25853:25880  amountTotal + totalUnlocked */\n      tag_225\n      jump\t// in\n    tag_248:\n        /* \"src/assets/BBD_Token_flattened.sol\":25853:25896  amountTotal + totalUnlocked > LOCKED_SUPPLY */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":25849:25966  if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":25942:25955  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_250\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_250:\n        /* \"src/assets/BBD_Token_flattened.sol\":25926:25955  LOCKED_SUPPLY - totalUnlocked */\n      tag_251\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_251:\n        /* \"src/assets/BBD_Token_flattened.sol\":25912:25955  amountTotal = LOCKED_SUPPLY - totalUnlocked */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":25849:25966  if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {... */\n    tag_249:\n        /* \"src/assets/BBD_Token_flattened.sol\":25984:25985  m */\n      dup1\n        /* \"src/assets/BBD_Token_flattened.sol\":25987:25998  amountTotal */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":26000:26015  amountTotal / 6 */\n      tag_252\n        /* \"src/assets/BBD_Token_flattened.sol\":26014:26015  6 */\n      0x06\n        /* \"src/assets/BBD_Token_flattened.sol\":25987:25998  amountTotal */\n      dup3\n        /* \"src/assets/BBD_Token_flattened.sol\":26000:26015  amountTotal / 6 */\n      tag_232\n      jump\t// in\n    tag_252:\n        /* \"src/assets/BBD_Token_flattened.sol\":25976:26016  return (m, amountTotal, amountTotal / 6) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":25369:26023  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":21973:22041  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n    tag_146:\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_254\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_254:\n        /* \"src/assets/BBD_Token_flattened.sol\":21973:22041  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      dup2\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":23318:24876  function unlockTokens() external isOwner {... */\n    tag_152:\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22955  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"src/assets/BBD_Token_flattened.sol\":22959:22969  msg.sender */\n      caller\n        /* \"src/assets/BBD_Token_flattened.sol\":22949:22969  _owner == msg.sender */\n      eq\n        /* \"src/assets/BBD_Token_flattened.sol\":22941:22986  require(_owner == msg.sender, \"Not allowed!\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_256:\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_259\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_259:\n        /* \"src/assets/BBD_Token_flattened.sol\":23377:23390  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token_flattened.sol\":23377:23406  totalUnlocked < LOCKED_SUPPLY */\n      lt\n        /* \"src/assets/BBD_Token_flattened.sol\":23369:23438  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5824:5826   */\n      0x20\n        /* \"src/assets/BBD_Token_flattened.sol\":23369:23438  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5806:5827   */\n      mstore\n        /* \"#utility.yul\":5863:5865   */\n      0x1b\n        /* \"#utility.yul\":5843:5861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5836:5866   */\n      mstore\n        /* \"#utility.yul\":5902:5931   */\n      0x416c6c20746f6b656e7320616c726561647920756e6c6f636b65640000000000\n        /* \"#utility.yul\":5882:5900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5875:5932   */\n      mstore\n        /* \"#utility.yul\":5949:5967   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":23369:23438  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      tag_178\n        /* \"#utility.yul\":5622:5973   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":23369:23438  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n    tag_260:\n        /* \"src/assets/BBD_Token_flattened.sol\":23449:23470  uint256 monthsElapsed */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":23510:23517  30 days */\n      0x278d00\n        /* \"src/assets/BBD_Token_flattened.sol\":23474:23506  block.timestamp - startTimestamp */\n      tag_263\n        /* \"src/assets/BBD_Token_flattened.sol\":23492:23506  startTimestamp */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"src/assets/BBD_Token_flattened.sol\":23474:23489  block.timestamp */\n      timestamp\n        /* \"src/assets/BBD_Token_flattened.sol\":23474:23506  block.timestamp - startTimestamp */\n      tag_228\n      jump\t// in\n    tag_263:\n        /* \"src/assets/BBD_Token_flattened.sol\":23473:23517  (block.timestamp - startTimestamp) / 30 days */\n      tag_264\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_264:\n        /* \"src/assets/BBD_Token_flattened.sol\":23449:23517  uint256 monthsElapsed = (block.timestamp - startTimestamp) / 30 days */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":23551:23566  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token_flattened.sol\":23535:23548  monthsElapsed */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":23535:23566  monthsElapsed > lastUnlockMonth */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":23527:23593  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"src/assets/BBD_Token_flattened.sol\":23527:23593  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6162:6183   */\n      mstore\n        /* \"#utility.yul\":6219:6221   */\n      0x16\n        /* \"#utility.yul\":6199:6217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6192:6222   */\n      mstore\n      shl(0x50, 0x4e6f206e6577206d6f6e746820746f20756e6c6f636b)\n        /* \"#utility.yul\":6238:6256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6231:6283   */\n      mstore\n        /* \"#utility.yul\":6300:6318   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":23527:23593  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      tag_178\n        /* \"#utility.yul\":5978:6324   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":23527:23593  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n    tag_265:\n        /* \"src/assets/BBD_Token_flattened.sol\":23604:23626  uint256 tokensToUnlock */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":23646:23655  uint256 m */\n      dup1\n        /* \"src/assets/BBD_Token_flattened.sol\":23658:23673  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token_flattened.sol\":23676:23677  1 */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":23658:23677  lastUnlockMonth + 1 */\n      tag_271\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"src/assets/BBD_Token_flattened.sol\":23646:23677  uint256 m = lastUnlockMonth + 1 */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":23641:24113  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n    tag_268:\n        /* \"src/assets/BBD_Token_flattened.sol\":23684:23697  monthsElapsed */\n      dup3\n        /* \"src/assets/BBD_Token_flattened.sol\":23679:23680  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":23679:23697  m <= monthsElapsed */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":23641:24113  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n      tag_269\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":23727:23728  3 */\n      0x03\n        /* \"src/assets/BBD_Token_flattened.sol\":23722:23723  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":23722:23728  m <= 3 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":23718:24103  if (m <= 3) {... */\n      tag_272\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":23788:23792  1000 */\n      0x03e8\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_273\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_273:\n        /* \"src/assets/BBD_Token_flattened.sol\":23767:23784  LOCKED_SUPPLY * 5 */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":23783:23784  5 */\n      0x05\n        /* \"src/assets/BBD_Token_flattened.sol\":23767:23784  LOCKED_SUPPLY * 5 */\n      tag_230\n      jump\t// in\n    tag_274:\n        /* \"src/assets/BBD_Token_flattened.sol\":23766:23792  (LOCKED_SUPPLY * 5) / 1000 */\n      tag_275\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_275:\n        /* \"src/assets/BBD_Token_flattened.sol\":23748:23792  tokensToUnlock += (LOCKED_SUPPLY * 5) / 1000 */\n      tag_276\n      swap1\n      dup4\n      tag_225\n      jump\t// in\n    tag_276:\n      swap2\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":23718:24103  if (m <= 3) {... */\n      jump(tag_289)\n    tag_272:\n        /* \"src/assets/BBD_Token_flattened.sol\":23830:23831  6 */\n      0x06\n        /* \"src/assets/BBD_Token_flattened.sol\":23825:23826  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":23825:23831  m <= 6 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":23821:24103  if (m <= 6) {... */\n      tag_278\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":23891:23894  100 */\n      0x64\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_279\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_279:\n        /* \"src/assets/BBD_Token_flattened.sol\":23870:23887  LOCKED_SUPPLY * 1 */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":23886:23887  1 */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":23870:23887  LOCKED_SUPPLY * 1 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":23821:24103  if (m <= 6) {... */\n    tag_278:\n        /* \"src/assets/BBD_Token_flattened.sol\":23930:23931  9 */\n      0x09\n        /* \"src/assets/BBD_Token_flattened.sol\":23925:23926  m */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":23925:23931  m <= 9 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":23921:24103  if (m <= 9) {... */\n      tag_284\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":23991:23994  100 */\n      0x64\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_285\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_285:\n        /* \"src/assets/BBD_Token_flattened.sol\":23970:23987  LOCKED_SUPPLY * 2 */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":23986:23987  2 */\n      0x02\n        /* \"src/assets/BBD_Token_flattened.sol\":23970:23987  LOCKED_SUPPLY * 2 */\n      tag_230\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":23921:24103  if (m <= 9) {... */\n    tag_284:\n        /* \"src/assets/BBD_Token_flattened.sol\":24079:24082  100 */\n      0x64\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_290\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_290:\n        /* \"src/assets/BBD_Token_flattened.sol\":24058:24075  LOCKED_SUPPLY * 3 */\n      tag_291\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24074:24075  3 */\n      0x03\n        /* \"src/assets/BBD_Token_flattened.sol\":24058:24075  LOCKED_SUPPLY * 3 */\n      tag_230\n      jump\t// in\n    tag_291:\n        /* \"src/assets/BBD_Token_flattened.sol\":24057:24082  (LOCKED_SUPPLY * 3) / 100 */\n      tag_292\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_292:\n        /* \"src/assets/BBD_Token_flattened.sol\":24039:24082  tokensToUnlock += (LOCKED_SUPPLY * 3) / 100 */\n      tag_293\n      swap1\n      dup4\n      tag_225\n      jump\t// in\n    tag_293:\n      swap2\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":23921:24103  if (m <= 9) {... */\n    tag_289:\n        /* \"src/assets/BBD_Token_flattened.sol\":23699:23702  m++ */\n      dup1\n      tag_294\n      dup2\n      tag_295\n      jump\t// in\n    tag_294:\n      swap2\n      pop\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":23641:24113  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n      jump(tag_268)\n    tag_269:\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_296\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_296:\n        /* \"src/assets/BBD_Token_flattened.sol\":24144:24157  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token_flattened.sol\":24127:24157  tokensToUnlock + totalUnlocked */\n      tag_297\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24127:24141  tokensToUnlock */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24127:24157  tokensToUnlock + totalUnlocked */\n      tag_225\n      jump\t// in\n    tag_297:\n        /* \"src/assets/BBD_Token_flattened.sol\":24127:24173  tokensToUnlock + totalUnlocked > LOCKED_SUPPLY */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":24123:24282  if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":24222:24235  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_299\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token_flattened.sol\":21880:21901  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token_flattened.sol\":22013:22041  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_228\n      jump\t// in\n    tag_299:\n        /* \"src/assets/BBD_Token_flattened.sol\":24206:24235  LOCKED_SUPPLY - totalUnlocked */\n      tag_300\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_300:\n        /* \"src/assets/BBD_Token_flattened.sol\":24189:24235  tokensToUnlock = LOCKED_SUPPLY - totalUnlocked */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":24123:24282  if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {... */\n    tag_298:\n        /* \"src/assets/BBD_Token_flattened.sol\":24317:24318  0 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":24300:24314  tokensToUnlock */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":24300:24318  tokensToUnlock > 0 */\n      gt\n        /* \"src/assets/BBD_Token_flattened.sol\":24292:24340  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6671:6673   */\n      0x20\n        /* \"src/assets/BBD_Token_flattened.sol\":24292:24340  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6653:6674   */\n      mstore\n        /* \"#utility.yul\":6710:6712   */\n      0x11\n        /* \"#utility.yul\":6690:6708   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6683:6713   */\n      mstore\n      shl(0x78, 0x4e6f7468696e6720746f20756e6c6f636b)\n        /* \"#utility.yul\":6729:6747   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6722:6769   */\n      mstore\n        /* \"#utility.yul\":6786:6804   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":24292:24340  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      tag_178\n        /* \"#utility.yul\":6469:6810   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":24292:24340  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n    tag_301:\n        /* \"src/assets/BBD_Token_flattened.sol\":24369:24382  monthsElapsed */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":24351:24366  lastUnlockMonth */\n      0x05\n        /* \"src/assets/BBD_Token_flattened.sol\":24351:24382  lastUnlockMonth = monthsElapsed */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":24409:24423  tokensToUnlock */\n      dup1\n        /* \"src/assets/BBD_Token_flattened.sol\":24392:24405  totalUnlocked */\n      0x06\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":24392:24423  totalUnlocked += tokensToUnlock */\n      dup3\n      dup3\n      sload\n      tag_304\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_304:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":24434:24447  uint256 share */\n      0x00\n      swap1\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":24450:24468  tokensToUnlock / 6 */\n      tag_305\n        /* \"src/assets/BBD_Token_flattened.sol\":24467:24468  6 */\n      0x06\n        /* \"src/assets/BBD_Token_flattened.sol\":24450:24464  tokensToUnlock */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24450:24468  tokensToUnlock / 6 */\n      tag_232\n      jump\t// in\n    tag_305:\n        /* \"src/assets/BBD_Token_flattened.sol\":24504:24520  liquidityListing */\n      sload(0x07)\n        /* \"src/assets/BBD_Token_flattened.sol\":24434:24468  uint256 share = tokensToUnlock / 6 */\n      swap1\n      swap2\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":24479:24528  _transfer(address(this), liquidityListing, share) */\n      tag_306\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24497:24501  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":24504:24520  liquidityListing */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":24434:24468  uint256 share = tokensToUnlock / 6 */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24479:24488  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":24479:24528  _transfer(address(this), liquidityListing, share) */\n      jump\t// in\n    tag_306:\n        /* \"src/assets/BBD_Token_flattened.sol\":24563:24575  gameTreasury */\n      sload(0x08)\n        /* \"src/assets/BBD_Token_flattened.sol\":24538:24583  _transfer(address(this), gameTreasury, share) */\n      tag_307\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24556:24560  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":24563:24575  gameTreasury */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":24577:24582  share */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24538:24547  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":24538:24583  _transfer(address(this), gameTreasury, share) */\n      jump\t// in\n    tag_307:\n        /* \"src/assets/BBD_Token_flattened.sol\":24618:24627  marketing */\n      sload(0x09)\n        /* \"src/assets/BBD_Token_flattened.sol\":24593:24635  _transfer(address(this), marketing, share) */\n      tag_308\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24611:24615  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":24618:24627  marketing */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":24629:24634  share */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24593:24602  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":24593:24635  _transfer(address(this), marketing, share) */\n      jump\t// in\n    tag_308:\n        /* \"src/assets/BBD_Token_flattened.sol\":24670:24683  stakingReward */\n      sload(0x0a)\n        /* \"src/assets/BBD_Token_flattened.sol\":24645:24691  _transfer(address(this), stakingReward, share) */\n      tag_309\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24663:24667  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":24670:24683  stakingReward */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":24685:24690  share */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24645:24654  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":24645:24691  _transfer(address(this), stakingReward, share) */\n      jump\t// in\n    tag_309:\n        /* \"src/assets/BBD_Token_flattened.sol\":24726:24739  referralBonus */\n      sload(0x0b)\n        /* \"src/assets/BBD_Token_flattened.sol\":24701:24747  _transfer(address(this), referralBonus, share) */\n      tag_310\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24719:24723  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":24726:24739  referralBonus */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":24741:24746  share */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24701:24710  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":24701:24747  _transfer(address(this), referralBonus, share) */\n      jump\t// in\n    tag_310:\n        /* \"src/assets/BBD_Token_flattened.sol\":24782:24792  awardBonus */\n      sload(0x0c)\n        /* \"src/assets/BBD_Token_flattened.sol\":24757:24800  _transfer(address(this), awardBonus, share) */\n      tag_311\n      swap1\n        /* \"src/assets/BBD_Token_flattened.sol\":24775:24779  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":24782:24792  awardBonus */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":24794:24799  share */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":24757:24766  _transfer */\n      tag_175\n        /* \"src/assets/BBD_Token_flattened.sol\":24757:24800  _transfer(address(this), awardBonus, share) */\n      jump\t// in\n    tag_311:\n        /* \"src/assets/BBD_Token_flattened.sol\":24831:24846  lastUnlockMonth */\n      sload(0x05)\n        /* \"src/assets/BBD_Token_flattened.sol\":24855:24868  totalUnlocked */\n      sload(0x06)\n        /* \"src/assets/BBD_Token_flattened.sol\":24816:24869  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3377:3402   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3418:3436   */\n      dup4\n      add\n        /* \"#utility.yul\":3411:3445   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3461:3479   */\n      dup3\n      add\n        /* \"#utility.yul\":3454:3488   */\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":24816:24869  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      0xd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac\n      swap1\n        /* \"#utility.yul\":3365:3367   */\n      0x60\n        /* \"#utility.yul\":3350:3368   */\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":24816:24869  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/assets/BBD_Token_flattened.sol\":23359:24876  {... */\n      pop\n      pop\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":23318:24876  function unlockTokens() external isOwner {... */\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":19576:19704  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_168:\n        /* \"src/assets/BBD_Token_flattened.sol\":19660:19697  _approve(owner, spender, value, true) */\n      tag_315\n        /* \"src/assets/BBD_Token_flattened.sol\":19669:19674  owner */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":19676:19683  spender */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":19685:19690  value */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":19692:19696  true */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":19660:19668  _approve */\n      tag_316\n        /* \"src/assets/BBD_Token_flattened.sol\":19660:19697  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_315:\n        /* \"src/assets/BBD_Token_flattened.sol\":19576:19704  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":21265:21741  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14525  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":21364:21388  uint256 currentAllowance */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14525  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14518  _allowances */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14525  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":14507:14534  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/assets/BBD_Token_flattened.sol\":21430:21466  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"src/assets/BBD_Token_flattened.sol\":21426:21735  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":21505:21510  value */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":21486:21502  currentAllowance */\n      dup2\n        /* \"src/assets/BBD_Token_flattened.sol\":21486:21510  currentAllowance < value */\n      lt\n        /* \"src/assets/BBD_Token_flattened.sol\":21482:21612  if (currentAllowance < value) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":21537:21597  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7035:7067   */\n      dup5\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":21537:21597  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7017:7068   */\n      mstore\n        /* \"#utility.yul\":7084:7102   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7077:7111   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7127:7145   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7120:7154   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6990:7008   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":21537:21597  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_178\n        /* \"#utility.yul\":6815:7160   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":21482:21612  if (currentAllowance < value) {... */\n    tag_320:\n        /* \"src/assets/BBD_Token_flattened.sol\":21653:21710  _approve(owner, spender, currentAllowance - value, false) */\n      tag_323\n        /* \"src/assets/BBD_Token_flattened.sol\":21662:21667  owner */\n      dup5\n        /* \"src/assets/BBD_Token_flattened.sol\":21669:21676  spender */\n      dup5\n        /* \"src/assets/BBD_Token_flattened.sol\":21697:21702  value */\n      dup5\n        /* \"src/assets/BBD_Token_flattened.sol\":21678:21694  currentAllowance */\n      dup5\n        /* \"src/assets/BBD_Token_flattened.sol\":21678:21702  currentAllowance - value */\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":21704:21709  false */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":21653:21661  _approve */\n      tag_316\n        /* \"src/assets/BBD_Token_flattened.sol\":21653:21710  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_323:\n        /* \"src/assets/BBD_Token_flattened.sol\":21354:21741  {... */\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":21265:21741  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":16243:16543  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":16326:16344  from == address(0) */\n      dup4\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":16322:16408  if (from == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":16367:16397  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":16394:16395  0 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":16367:16397  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":16367:16397  ERC20InvalidSender(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":16322:16408  if (from == address(0)) {... */\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":16421:16437  to == address(0) */\n      dup3\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":16417:16503  if (to == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":16460:16492  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":16489:16490  0 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":16460:16492  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":16460:16492  ERC20InvalidReceiver(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":16417:16503  if (to == address(0)) {... */\n    tag_327:\n        /* \"src/assets/BBD_Token_flattened.sol\":16512:16536  _update(from, to, value) */\n      tag_315\n        /* \"src/assets/BBD_Token_flattened.sol\":16520:16524  from */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":16526:16528  to */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":16530:16535  value */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":16512:16519  _update */\n      tag_330\n        /* \"src/assets/BBD_Token_flattened.sol\":16512:16536  _update(from, to, value) */\n      jump\t// in\n        /* \"src/assets/BBD_Token_flattened.sol\":20551:20983  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":20663:20682  owner == address(0) */\n      dup5\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":20659:20748  if (owner == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":20705:20737  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":20734:20735  0 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":20705:20737  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":20705:20737  ERC20InvalidApprover(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":20659:20748  if (owner == address(0)) {... */\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":20761:20782  spender == address(0) */\n      dup4\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":20757:20847  if (spender == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":20805:20836  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":20833:20834  0 */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":20805:20836  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":20805:20836  ERC20InvalidSpender(address(0)) */\n      tag_178\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":20757:20847  if (spender == address(0)) {... */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":20856:20874  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/assets/BBD_Token_flattened.sol\":20856:20867  _allowances */\n      0x01\n        /* \"src/assets/BBD_Token_flattened.sol\":20856:20874  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":20856:20883  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":20856:20891  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":20901:20977  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_323\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":20951:20958  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":20944:20949  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/assets/BBD_Token_flattened.sol\":20960:20965  value */\n      dup5\n        /* \"src/assets/BBD_Token_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_337\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/assets/BBD_Token_flattened.sol\":20551:20983  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":16947:16965  from == address(0) */\n      dup4\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":16943:17483  if (from == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":17099:17104  value */\n      dup1\n        /* \"src/assets/BBD_Token_flattened.sol\":17083:17095  _totalSupply */\n      0x02\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":17083:17104  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_340\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_340:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/assets/BBD_Token_flattened.sol\":16943:17483  if (from == address(0)) {... */\n      tag_341\n      swap1\n      pop\n      jump\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":17157:17172  _balances[from] */\n      dup4\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":17135:17154  uint256 fromBalance */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":17157:17172  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/assets/BBD_Token_flattened.sol\":17190:17209  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"src/assets/BBD_Token_flattened.sol\":17186:17301  if (fromBalance < value) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7035:7067   */\n      dup6\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7017:7068   */\n      mstore\n        /* \"#utility.yul\":7084:7102   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7077:7111   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7127:7145   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7120:7154   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6990:7008   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_178\n        /* \"#utility.yul\":6815:7160   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":17186:17301  if (fromBalance < value) {... */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":17421:17436  _balances[from] */\n      dup5\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":17421:17430  _balances */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":17421:17436  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":17439:17458  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"src/assets/BBD_Token_flattened.sol\":17421:17458  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":16943:17483  if (from == address(0)) {... */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":17497:17513  to == address(0) */\n      dup3\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":17493:17918  if (to == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"src/assets/BBD_Token_flattened.sol\":17660:17672  _totalSupply */\n      0x02\n        /* \"src/assets/BBD_Token_flattened.sol\":17660:17681  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":17493:17918  if (to == address(0)) {... */\n      jump(tag_345)\n    tag_344:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":17871:17884  _balances[to] */\n      dup3\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":17871:17880  _balances */\n      0x00\n        /* \"src/assets/BBD_Token_flattened.sol\":17871:17884  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/assets/BBD_Token_flattened.sol\":17871:17893  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token_flattened.sol\":17493:17918  if (to == address(0)) {... */\n    tag_345:\n        /* \"src/assets/BBD_Token_flattened.sol\":17948:17950  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n      and\n        /* \"src/assets/BBD_Token_flattened.sol\":17942:17946  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/assets/BBD_Token_flattened.sol\":17952:17957  value */\n      dup4\n        /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n      mload(0x40)\n      tag_346\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"src/assets/BBD_Token_flattened.sol\":17933:17958  Transfer(from, to, value) */\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/assets/BBD_Token_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:640   */\n    tag_49:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":505:511   */\n      dup1\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":492:498   */\n      dup6\n        /* \"#utility.yul\":488:503   */\n      add\n        /* \"#utility.yul\":483:485   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup6\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":462:512   */\n      mcopy\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":556:558   */\n      0x40\n        /* \"#utility.yul\":547:553   */\n      dup3\n        /* \"#utility.yul\":536:545   */\n      dup6\n        /* \"#utility.yul\":532:554   */\n      add\n        /* \"#utility.yul\":528:559   */\n      add\n        /* \"#utility.yul\":521:563   */\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x40\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":620:627   */\n      not\n        /* \"#utility.yul\":615:617   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:618   */\n      add\n        /* \"#utility.yul\":599:628   */\n      and\n        /* \"#utility.yul\":588:597   */\n      dup5\n        /* \"#utility.yul\":584:629   */\n      add\n        /* \"#utility.yul\":580:634   */\n      add\n        /* \"#utility.yul\":572:634   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_347:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_354:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_52:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      dup1\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      dup1\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_356:\n        /* \"#utility.yul\":991:1020   */\n      tag_357\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_347\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_62:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      dup1\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_361:\n        /* \"#utility.yul\":1687:1716   */\n      tag_362\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_347\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_363\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_347\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":1881:2181   */\n    tag_67:\n        /* \"#utility.yul\":1949:1955   */\n      0x00\n        /* \"#utility.yul\":1957:1963   */\n      dup1\n        /* \"#utility.yul\":2010:2012   */\n      0x40\n        /* \"#utility.yul\":1998:2007   */\n      dup4\n        /* \"#utility.yul\":1989:1996   */\n      dup6\n        /* \"#utility.yul\":1985:2008   */\n      sub\n        /* \"#utility.yul\":1981:2013   */\n      slt\n        /* \"#utility.yul\":1978:2030   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2026:2027   */\n      0x00\n        /* \"#utility.yul\":2023:2024   */\n      dup1\n        /* \"#utility.yul\":2016:2028   */\n      revert\n        /* \"#utility.yul\":1978:2030   */\n    tag_365:\n        /* \"#utility.yul\":2071:2094   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2137:2175   */\n      tag_366\n        /* \"#utility.yul\":2171:2173   */\n      0x20\n        /* \"#utility.yul\":2156:2174   */\n      dup5\n      add\n        /* \"#utility.yul\":2137:2175   */\n      tag_347\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2127:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1881:2181   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2375:2561   */\n    tag_78:\n        /* \"#utility.yul\":2434:2440   */\n      0x00\n        /* \"#utility.yul\":2487:2489   */\n      0x20\n        /* \"#utility.yul\":2475:2484   */\n      dup3\n        /* \"#utility.yul\":2466:2473   */\n      dup5\n        /* \"#utility.yul\":2462:2485   */\n      sub\n        /* \"#utility.yul\":2458:2490   */\n      slt\n        /* \"#utility.yul\":2455:2507   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2455:2507   */\n    tag_369:\n        /* \"#utility.yul\":2526:2555   */\n      tag_370\n        /* \"#utility.yul\":2545:2554   */\n      dup3\n        /* \"#utility.yul\":2526:2555   */\n      tag_347\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2516:2555   */\n      swap4\n        /* \"#utility.yul\":2375:2561   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2566:2726   */\n    tag_348:\n        /* \"#utility.yul\":2631:2651   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2687:2700   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2680:2701   */\n      iszero\n        /* \"#utility.yul\":2670:2702   */\n      dup2\n      eq\n        /* \"#utility.yul\":2660:2720   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":2716:2717   */\n      0x00\n        /* \"#utility.yul\":2713:2714   */\n      dup1\n        /* \"#utility.yul\":2706:2718   */\n      revert\n        /* \"#utility.yul\":2731:2985   */\n    tag_90:\n        /* \"#utility.yul\":2796:2802   */\n      0x00\n        /* \"#utility.yul\":2804:2810   */\n      dup1\n        /* \"#utility.yul\":2857:2859   */\n      0x40\n        /* \"#utility.yul\":2845:2854   */\n      dup4\n        /* \"#utility.yul\":2836:2843   */\n      dup6\n        /* \"#utility.yul\":2832:2855   */\n      sub\n        /* \"#utility.yul\":2828:2860   */\n      slt\n        /* \"#utility.yul\":2825:2877   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":2873:2874   */\n      0x00\n        /* \"#utility.yul\":2870:2871   */\n      dup1\n        /* \"#utility.yul\":2863:2875   */\n      revert\n        /* \"#utility.yul\":2825:2877   */\n    tag_374:\n        /* \"#utility.yul\":2896:2925   */\n      tag_375\n        /* \"#utility.yul\":2915:2924   */\n      dup4\n        /* \"#utility.yul\":2896:2925   */\n      tag_347\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2886:2925   */\n      swap2\n      pop\n        /* \"#utility.yul\":2944:2979   */\n      tag_366\n        /* \"#utility.yul\":2975:2977   */\n      0x20\n        /* \"#utility.yul\":2964:2973   */\n      dup5\n        /* \"#utility.yul\":2960:2978   */\n      add\n        /* \"#utility.yul\":2944:2979   */\n      tag_348\n      jump\t// in\n        /* \"#utility.yul\":2990:3170   */\n    tag_100:\n        /* \"#utility.yul\":3046:3052   */\n      0x00\n        /* \"#utility.yul\":3099:3101   */\n      0x20\n        /* \"#utility.yul\":3087:3096   */\n      dup3\n        /* \"#utility.yul\":3078:3085   */\n      dup5\n        /* \"#utility.yul\":3074:3097   */\n      sub\n        /* \"#utility.yul\":3070:3102   */\n      slt\n        /* \"#utility.yul\":3067:3119   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3115:3116   */\n      0x00\n        /* \"#utility.yul\":3112:3113   */\n      dup1\n        /* \"#utility.yul\":3105:3117   */\n      revert\n        /* \"#utility.yul\":3067:3119   */\n    tag_378:\n        /* \"#utility.yul\":3138:3164   */\n      tag_370\n        /* \"#utility.yul\":3154:3163   */\n      dup3\n        /* \"#utility.yul\":3138:3164   */\n      tag_348\n      jump\t// in\n        /* \"#utility.yul\":3499:3759   */\n    tag_139:\n        /* \"#utility.yul\":3567:3573   */\n      0x00\n        /* \"#utility.yul\":3575:3581   */\n      dup1\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3616:3625   */\n      dup4\n        /* \"#utility.yul\":3607:3614   */\n      dup6\n        /* \"#utility.yul\":3603:3626   */\n      sub\n        /* \"#utility.yul\":3599:3631   */\n      slt\n        /* \"#utility.yul\":3596:3648   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3644:3645   */\n      0x00\n        /* \"#utility.yul\":3641:3642   */\n      dup1\n        /* \"#utility.yul\":3634:3646   */\n      revert\n        /* \"#utility.yul\":3596:3648   */\n    tag_382:\n        /* \"#utility.yul\":3667:3696   */\n      tag_383\n        /* \"#utility.yul\":3686:3695   */\n      dup4\n        /* \"#utility.yul\":3667:3696   */\n      tag_347\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3657:3696   */\n      swap2\n      pop\n        /* \"#utility.yul\":3715:3753   */\n      tag_366\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup5\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3715:3753   */\n      tag_347\n      jump\t// in\n        /* \"#utility.yul\":3764:4144   */\n    tag_159:\n        /* \"#utility.yul\":3843:3844   */\n      0x01\n        /* \"#utility.yul\":3839:3851   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3886:3898   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3907:3968   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":3961:3965   */\n      0x7f\n        /* \"#utility.yul\":3953:3959   */\n      dup3\n        /* \"#utility.yul\":3949:3966   */\n      and\n        /* \"#utility.yul\":3939:3966   */\n      swap2\n      pop\n        /* \"#utility.yul\":3907:3968   */\n    tag_386:\n        /* \"#utility.yul\":4014:4016   */\n      0x20\n        /* \"#utility.yul\":4006:4012   */\n      dup3\n        /* \"#utility.yul\":4003:4017   */\n      lt\n        /* \"#utility.yul\":3983:4001   */\n      dup2\n        /* \"#utility.yul\":3980:4018   */\n      sub\n        /* \"#utility.yul\":3977:4138   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":4060:4070   */\n      0x4e487b71\n        /* \"#utility.yul\":4055:4058   */\n      0xe0\n        /* \"#utility.yul\":4051:4071   */\n      shl\n        /* \"#utility.yul\":4048:4049   */\n      0x00\n        /* \"#utility.yul\":4041:4072   */\n      mstore\n        /* \"#utility.yul\":4095:4099   */\n      0x22\n        /* \"#utility.yul\":4092:4093   */\n      0x04\n        /* \"#utility.yul\":4085:4100   */\n      mstore\n        /* \"#utility.yul\":4123:4127   */\n      0x24\n        /* \"#utility.yul\":4120:4121   */\n      0x00\n        /* \"#utility.yul\":4113:4128   */\n      revert\n        /* \"#utility.yul\":3977:4138   */\n    tag_387:\n      pop\n        /* \"#utility.yul\":3764:4144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4149:4485   */\n    tag_179:\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4333:4354   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4390:4392   */\n      0x0c\n        /* \"#utility.yul\":4370:4388   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4363:4393   */\n      mstore\n      shl(0xa0, 0x4e6f7420616c6c6f77656421)\n        /* \"#utility.yul\":4424:4426   */\n      0x40\n        /* \"#utility.yul\":4409:4427   */\n      dup3\n      add\n        /* \"#utility.yul\":4402:4444   */\n      mstore\n        /* \"#utility.yul\":4476:4478   */\n      0x60\n        /* \"#utility.yul\":4461:4479   */\n      add\n      swap1\n        /* \"#utility.yul\":4149:4485   */\n      jump\t// out\n        /* \"#utility.yul\":4832:4959   */\n    tag_349:\n        /* \"#utility.yul\":4893:4903   */\n      0x4e487b71\n        /* \"#utility.yul\":4888:4891   */\n      0xe0\n        /* \"#utility.yul\":4884:4904   */\n      shl\n        /* \"#utility.yul\":4881:4882   */\n      0x00\n        /* \"#utility.yul\":4874:4905   */\n      mstore\n        /* \"#utility.yul\":4924:4928   */\n      0x11\n        /* \"#utility.yul\":4921:4922   */\n      0x04\n        /* \"#utility.yul\":4914:4929   */\n      mstore\n        /* \"#utility.yul\":4948:4952   */\n      0x24\n        /* \"#utility.yul\":4945:4946   */\n      0x00\n        /* \"#utility.yul\":4938:4953   */\n      revert\n        /* \"#utility.yul\":4964:5089   */\n    tag_225:\n        /* \"#utility.yul\":5029:5038   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5050:5060   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5047:5083   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5063:5081   */\n      tag_164\n      tag_349\n      jump\t// in\n        /* \"#utility.yul\":5094:5222   */\n    tag_228:\n        /* \"#utility.yul\":5161:5170   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5182:5193   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5179:5216   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5196:5214   */\n      tag_164\n      tag_349\n      jump\t// in\n        /* \"#utility.yul\":5227:5395   */\n    tag_230:\n        /* \"#utility.yul\":5300:5309   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5331:5340   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5348:5363   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5342:5364   */\n      dup5\n      eq\n        /* \"#utility.yul\":5328:5365   */\n      or\n        /* \"#utility.yul\":5318:5389   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5369:5387   */\n      tag_164\n      tag_349\n      jump\t// in\n        /* \"#utility.yul\":5400:5617   */\n    tag_232:\n        /* \"#utility.yul\":5440:5441   */\n      0x00\n        /* \"#utility.yul\":5466:5467   */\n      dup3\n        /* \"#utility.yul\":5456:5588   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5510:5520   */\n      0x4e487b71\n        /* \"#utility.yul\":5505:5508   */\n      0xe0\n        /* \"#utility.yul\":5501:5521   */\n      shl\n        /* \"#utility.yul\":5498:5499   */\n      0x00\n        /* \"#utility.yul\":5491:5522   */\n      mstore\n        /* \"#utility.yul\":5545:5549   */\n      0x12\n        /* \"#utility.yul\":5542:5543   */\n      0x04\n        /* \"#utility.yul\":5535:5550   */\n      mstore\n        /* \"#utility.yul\":5573:5577   */\n      0x24\n        /* \"#utility.yul\":5570:5571   */\n      0x00\n        /* \"#utility.yul\":5563:5578   */\n      revert\n        /* \"#utility.yul\":5456:5588   */\n    tag_401:\n      pop\n        /* \"#utility.yul\":5602:5611   */\n      div\n      swap1\n        /* \"#utility.yul\":5400:5617   */\n      jump\t// out\n        /* \"#utility.yul\":6329:6464   */\n    tag_295:\n        /* \"#utility.yul\":6368:6371   */\n      0x00\n        /* \"#utility.yul\":6389:6406   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6386:6429   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":6409:6427   */\n      tag_406\n      tag_349\n      jump\t// in\n    tag_406:\n      pop\n        /* \"#utility.yul\":6456:6457   */\n      0x01\n        /* \"#utility.yul\":6445:6458   */\n      add\n      swap1\n        /* \"#utility.yul\":6329:6464   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e95388c6db252009f371df04c1ef0515db5a51061fad50ad30bf053307c38df464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_884": {
									"entryPoint": null,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 412,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 473,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3787:1",
										"nodeType": "YulBlock",
										"src": "0:3787:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:1",
													"nodeType": "YulBlock",
													"src": "1447:1203:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:1",
															"nodeType": "YulAssignment",
															"src": "1688:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:1",
																"nodeType": "YulLiteral",
																"src": "1701:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:1",
																		"nodeType": "YulBlock",
																		"src": "1751:642:1",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:1"
																							},
																							"nativeSrc": "1792:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:1"
																					},
																					"nativeSrc": "1780:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:1"
																					},
																					"nativeSrc": "1827:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:1",
																					"nodeType": "YulBlock",
																					"src": "1955:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:1"
																												},
																												"nativeSrc": "1994:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:1"
																										},
																										"nativeSrc": "1988:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:1"
																								},
																								"nativeSrc": "1973:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:1"
																							},
																							"nativeSrc": "1973:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:1"
																						},
																						{
																							"nativeSrc": "2032:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:1"
																								},
																								"nativeSrc": "2042:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:1"
																								},
																								"nativeSrc": "2086:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:1"
																					},
																					"nativeSrc": "1906:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:1"
																				},
																				"nativeSrc": "1898:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:1",
																					"nodeType": "YulBlock",
																					"src": "1921:21:1",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:1",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:1",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:1"
																								},
																								"nativeSrc": "1928:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:1",
																					"nodeType": "YulBlock",
																					"src": "1902:3:1",
																					"statements": []
																				},
																				"src": "1898:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:1",
																					"nodeType": "YulBlock",
																					"src": "2168:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:1"
																										},
																										"nativeSrc": "2209:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:1"
																								},
																								"nativeSrc": "2203:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:1"
																																		},
																																		"nativeSrc": "2288:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:1"
																																},
																																"nativeSrc": "2284:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:1"
																																},
																																"nativeSrc": "2310:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:1"
																														},
																														"nativeSrc": "2280:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:1"
																												},
																												"nativeSrc": "2276:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:1"
																										},
																										"nativeSrc": "2261:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:1"
																								},
																								"nativeSrc": "2246:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:1"
																							},
																							"nativeSrc": "2246:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:1"
																					},
																					"nativeSrc": "2136:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:1"
																				},
																				"nativeSrc": "2133:201:1",
																				"nodeType": "YulIf",
																				"src": "2133:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:1"
																									},
																									"nativeSrc": "2364:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:1"
																							},
																							"nativeSrc": "2360:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:1"
																					},
																					"nativeSrc": "2347:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:1"
																				},
																				"nativeSrc": "2347:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:1",
																	"nodeType": "YulCase",
																	"src": "1744:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:1",
																		"nodeType": "YulBlock",
																		"src": "2410:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:1",
																					"nodeType": "YulBlock",
																					"src": "2473:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:1"
																										},
																										"nativeSrc": "2506:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:1"
																								},
																								"nativeSrc": "2500:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:1"
																				},
																				"nativeSrc": "2451:89:1",
																				"nodeType": "YulIf",
																				"src": "2451:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:1"
																							},
																							"nativeSrc": "2566:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:1"
																					},
																					"nativeSrc": "2553:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:1"
																				},
																				"nativeSrc": "2553:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:1",
																	"nodeType": "YulCase",
																	"src": "2402:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:1"
																},
																"nativeSrc": "1721:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:1"
															},
															"nativeSrc": "1714:930:1",
															"nodeType": "YulSwitch",
															"src": "1714:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1299:1"
											},
											{
												"body": {
													"nativeSrc": "2687:95:1",
													"nodeType": "YulBlock",
													"src": "2687:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2704:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2704:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2711:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2711:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2716:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2707:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nativeSrc": "2707:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2697:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:1"
																},
																"nativeSrc": "2697:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2697:31:1"
															},
															"nativeSrc": "2697:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2697:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:1"
																},
																"nativeSrc": "2737:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:1"
															},
															"nativeSrc": "2737:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:1"
																},
																"nativeSrc": "2761:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:1"
															},
															"nativeSrc": "2761:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2655:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2655:127:1"
											},
											{
												"body": {
													"nativeSrc": "2836:79:1",
													"nodeType": "YulBlock",
													"src": "2836:79:1",
													"statements": [
														{
															"nativeSrc": "2846:17:1",
															"nodeType": "YulAssignment",
															"src": "2846:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2858:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2858:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2861:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2861:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2854:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:1"
																},
																"nativeSrc": "2854:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2854:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2846:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2887:22:1",
																"nodeType": "YulBlock",
																"src": "2887:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2889:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2889:16:1"
																			},
																			"nativeSrc": "2889:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2889:18:1"
																		},
																		"nativeSrc": "2889:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2889:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2878:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2878:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2884:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2884:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2875:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2875:2:1"
																},
																"nativeSrc": "2875:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2875:11:1"
															},
															"nativeSrc": "2872:37:1",
															"nodeType": "YulIf",
															"src": "2872:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2787:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2818:1:1",
														"nodeType": "YulTypedName",
														"src": "2818:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2821:1:1",
														"nodeType": "YulTypedName",
														"src": "2821:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2827:4:1",
														"nodeType": "YulTypedName",
														"src": "2827:4:1",
														"type": ""
													}
												],
												"src": "2787:128:1"
											},
											{
												"body": {
													"nativeSrc": "3021:102:1",
													"nodeType": "YulBlock",
													"src": "3021:102:1",
													"statements": [
														{
															"nativeSrc": "3031:26:1",
															"nodeType": "YulAssignment",
															"src": "3031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3043:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3054:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3039:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:1"
																},
																"nativeSrc": "3039:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3031:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3088:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3104:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3104:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3109:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3109:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3100:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3100:3:1"
																						},
																						"nativeSrc": "3100:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3100:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3113:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3113:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3096:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:1"
																				},
																				"nativeSrc": "3096:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3096:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3084:3:1"
																		},
																		"nativeSrc": "3084:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3084:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3066:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3066:6:1"
																},
																"nativeSrc": "3066:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3066:51:1"
															},
															"nativeSrc": "3066:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3066:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2920:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2990:9:1",
														"nodeType": "YulTypedName",
														"src": "2990:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3001:6:1",
														"nodeType": "YulTypedName",
														"src": "3001:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3012:4:1",
														"nodeType": "YulTypedName",
														"src": "3012:4:1",
														"type": ""
													}
												],
												"src": "2920:203:1"
											},
											{
												"body": {
													"nativeSrc": "3176:77:1",
													"nodeType": "YulBlock",
													"src": "3176:77:1",
													"statements": [
														{
															"nativeSrc": "3186:16:1",
															"nodeType": "YulAssignment",
															"src": "3186:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3197:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3197:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3200:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3200:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3193:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3193:3:1"
																},
																"nativeSrc": "3193:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3193:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3186:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3225:22:1",
																"nodeType": "YulBlock",
																"src": "3225:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3227:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3227:16:1"
																			},
																			"nativeSrc": "3227:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3227:18:1"
																		},
																		"nativeSrc": "3227:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3227:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3217:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3217:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3220:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3220:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3214:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3214:2:1"
																},
																"nativeSrc": "3214:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3214:10:1"
															},
															"nativeSrc": "3211:36:1",
															"nodeType": "YulIf",
															"src": "3211:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3128:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3159:1:1",
														"nodeType": "YulTypedName",
														"src": "3159:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3162:1:1",
														"nodeType": "YulTypedName",
														"src": "3162:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3168:3:1",
														"nodeType": "YulTypedName",
														"src": "3168:3:1",
														"type": ""
													}
												],
												"src": "3128:125:1"
											},
											{
												"body": {
													"nativeSrc": "3415:188:1",
													"nodeType": "YulBlock",
													"src": "3415:188:1",
													"statements": [
														{
															"nativeSrc": "3425:26:1",
															"nodeType": "YulAssignment",
															"src": "3425:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3437:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3437:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3448:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3448:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3433:3:1"
																},
																"nativeSrc": "3433:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3433:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3425:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3425:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3467:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3482:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3482:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3498:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3498:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3503:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3503:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3494:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3494:3:1"
																						},
																						"nativeSrc": "3494:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3494:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3507:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3507:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3490:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3490:3:1"
																				},
																				"nativeSrc": "3490:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3490:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:1"
																		},
																		"nativeSrc": "3478:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:1"
																},
																"nativeSrc": "3460:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3460:51:1"
															},
															"nativeSrc": "3460:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3460:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3531:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3527:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:1"
																		},
																		"nativeSrc": "3527:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3527:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3547:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:1"
																},
																"nativeSrc": "3520:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3520:34:1"
															},
															"nativeSrc": "3520:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3520:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3574:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3585:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3585:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3570:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:1"
																		},
																		"nativeSrc": "3570:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3590:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3590:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3563:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:1"
																},
																"nativeSrc": "3563:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3563:34:1"
															},
															"nativeSrc": "3563:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3563:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3258:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3368:9:1",
														"nodeType": "YulTypedName",
														"src": "3368:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3379:6:1",
														"nodeType": "YulTypedName",
														"src": "3379:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3387:6:1",
														"nodeType": "YulTypedName",
														"src": "3387:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3395:6:1",
														"nodeType": "YulTypedName",
														"src": "3395:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3406:4:1",
														"nodeType": "YulTypedName",
														"src": "3406:4:1",
														"type": ""
													}
												],
												"src": "3258:345:1"
											},
											{
												"body": {
													"nativeSrc": "3709:76:1",
													"nodeType": "YulBlock",
													"src": "3709:76:1",
													"statements": [
														{
															"nativeSrc": "3719:26:1",
															"nodeType": "YulAssignment",
															"src": "3719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3731:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3731:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3742:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:1"
																},
																"nativeSrc": "3727:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3719:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3761:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3761:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3772:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3772:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3754:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:1"
																},
																"nativeSrc": "3754:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3754:25:1"
															},
															"nativeSrc": "3754:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3754:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3608:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3678:9:1",
														"nodeType": "YulTypedName",
														"src": "3678:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3689:6:1",
														"nodeType": "YulTypedName",
														"src": "3689:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3700:4:1",
														"nodeType": "YulTypedName",
														"src": "3700:4:1",
														"type": ""
													}
												],
												"src": "3608:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052600780546001600160a01b0319908116737ec13697d98925ba1dc2bcc705c071bd168b10c217909155600880548216738de119e98707ac240aba2cb77e83b29882a343571790556009805482167303499c18f7265be9afda16504a34cd1892f278ae179055600a8054821673cc234a1d3e32148461b7eacb5a8bf4d0c4b6be74179055600b805490911673ceea0e87b553bc445c5eb2242b5f28cd81b4acaa179055600c80547501017e23e2781a1da5dace87b4f0e7bf68191263fc326001600160b01b03199091161790553480156100db575f80fd5b5060405180604001604052806009815260200168212122102a37b5b2b760b91b8152506040518060400160405280600381526020016210909160ea1b81525081600390816101299190610397565b5060046101368282610397565b5050600d80546001600160a01b0319163390811790915561016491506b033b2e3c9fd0803ce800000061019c565b61018f3061018a6b033b2e3c9fd0803ce80000006b204fce5e3e25026110000000610465565b61019c565b426080525f600555610491565b6001600160a01b0382166101ca5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6101d55f83836101d9565b5050565b6001600160a01b038316610203578060025f8282546101f8919061047e565b909155506102739050565b6001600160a01b0383165f90815260208190526040902054818110156102555760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101c1565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661028f576002805482900390556102ad565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102f291815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061032757607f821691505b60208210810361034557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561039257805f5260205f20601f840160051c810160208510156103705750805b601f840160051c820191505b8181101561038f575f815560010161037c565b50505b505050565b81516001600160401b038111156103b0576103b06102ff565b6103c4816103be8454610313565b8461034b565b6020601f8211600181146103f6575f83156103df5750848201515b5f19600385901b1c1916600184901b17845561038f565b5f84815260208120601f198516915b828110156104255787850151825560209485019460019092019101610405565b508482101561044257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561047857610478610451565b92915050565b8082018082111561047857610478610451565b6080516113636104b05f395f81816104570152610a9601526113635ff3fe608060405234801561000f575f80fd5b50600436106101e7575f3560e01c8063902d55a511610109578063ce7842f51161009e578063e8be9a441161006e578063e8be9a4414610479578063f771cb6514610481578063f968f49314610495578063fdff9b4d1461049d575f80fd5b8063ce7842f5146103f4578063d2f9efab14610407578063dd62ed3e1461041a578063e6fd48bc14610452575f80fd5b8063a9059cbb116100d9578063a9059cbb14610398578063b16d78cf146103ab578063b361412a146103be578063be381b85146103d1575f80fd5b8063902d55a51461036157806395d89b4114610374578063a5e90eee1461037c578063a779d0801461038f575f80fd5b80633c11e12a1161017f5780638310a74d1161014f5780638310a74d1461031f5780638342083a146103285780638ddedb331461033a5780638ed2fe911461034d575f80fd5b80633c11e12a146102af57806367859b6e146102d157806370a08231146102e45780637cdf6fb11461030c575f80fd5b806323b872dd116101ba57806323b872dd146102655780632be8781f146102785780632d3e474a1461028d578063313ce567146102a0575f80fd5b8063042249bb146101eb57806306fdde031461021b578063095ea7b31461023057806318160ddd14610253575b5f80fd5b600a546101fe906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102236104bf565b60405161021291906110d3565b61024361023e366004611123565b61054f565b6040519015158152602001610212565b6002545b604051908152602001610212565b61024361027336600461114b565b610568565b61028b610286366004611185565b61058b565b005b6009546101fe906001600160a01b031681565b60405160128152602001610212565b6102436102bd3660046111af565b600e6020525f908152604090205460ff1681565b6007546101fe906001600160a01b031681565b6102576102f23660046111af565b6001600160a01b03165f9081526020819052604090205490565b61028b61031a3660046111de565b6106f7565b61025760055481565b610257676765c793fa10079d601b1b81565b61028b610348366004611206565b61074b565b600c5461024390600160a01b900460ff1681565b6102576b204fce5e3e2502611000000081565b610223610793565b61028b61038a3660046111de565b6107a2565b61025760065481565b6102436103a6366004611123565b6107f6565b61028b6103b9366004611206565b610803565b600c546101fe906001600160a01b031681565b6103d961084b565b60408051938452602084019290925290820152606001610212565b600b546101fe906001600160a01b031681565b6008546101fe906001600160a01b031681565b61025761042836600461121f565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102577f000000000000000000000000000000000000000000000000000000000000000081565b6102576109cd565b600c5461024390600160a81b900460ff1681565b61028b6109f1565b6102436104ab3660046111af565b600f6020525f908152604090205460ff1681565b6060600380546104ce90611247565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90611247565b80156105455780601f1061051c57610100808354040283529160200191610545565b820191905f5260205f20905b81548152906001019060200180831161052857829003601f168201915b5050505050905090565b5f3361055c818585610df0565b60019150505b92915050565b5f33610575858285610e02565b610580858585610e7e565b506001949350505050565b600d546001600160a01b031633146105be5760405162461bcd60e51b81526004016105b59061127f565b60405180910390fd5b600182101580156105d0575060068211155b61060c5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016105b5565b8160010361063357600780546001600160a01b0319166001600160a01b0383161790555050565b8160020361065a57600880546001600160a01b0319166001600160a01b0383161790555050565b8160030361068157600980546001600160a01b0319166001600160a01b0383161790555050565b816004036106a857600a80546001600160a01b0319166001600160a01b0383161790555050565b816005036106cf57600b80546001600160a01b0319166001600160a01b0383161790555050565b816006036106f357600c80546001600160a01b0319166001600160a01b0383161790555b5050565b600d546001600160a01b031633146107215760405162461bcd60e51b81526004016105b59061127f565b6001600160a01b03919091165f908152600e60205260409020805460ff1916911515919091179055565b600d546001600160a01b031633146107755760405162461bcd60e51b81526004016105b59061127f565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b6060600480546104ce90611247565b600d546001600160a01b031633146107cc5760405162461bcd60e51b81526004016105b59061127f565b6001600160a01b03919091165f908152600f60205260409020805460ff1916911515919091179055565b5f3361055c818585610e7e565b600d546001600160a01b0316331461082d5760405162461bcd60e51b81526004016105b59061127f565b600c8054911515600160a81b0260ff60a81b19909216919091179055565b5f805f80600554600161085e91906112b9565b9050600381116108a8576103e861088c676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b6108979060056112df565b6108a191906112f6565b925061094f565b600681116108de5760646108d3676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b6108979060016112df565b60098111610914576064610909676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b6108979060026112df565b6064610937676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b6109429060036112df565b61094c91906112f6565b92505b610970676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b60065461097d90856112b9565b11156109b4576006546109a7676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b6109b191906112cc565b92505b80836109c16006826112f6565b93509350935050909192565b6109ee676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b81565b600d546001600160a01b03163314610a1b5760405162461bcd60e51b81526004016105b59061127f565b610a3c676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b60065410610a8c5760405162461bcd60e51b815260206004820152601b60248201527f416c6c20746f6b656e7320616c726561647920756e6c6f636b6564000000000060448201526064016105b5565b5f62278d00610abb7f0000000000000000000000000000000000000000000000000000000000000000426112cc565b610ac591906112f6565b90506005548111610b115760405162461bcd60e51b81526020600482015260166024820152754e6f206e6577206d6f6e746820746f20756e6c6f636b60501b60448201526064016105b5565b5f806005546001610b2291906112b9565b90505b828111610c415760038111610b7e576103e8610b58676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b610b639060056112df565b610b6d91906112f6565b610b7790836112b9565b9150610c2f565b60068111610bb4576064610ba9676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b610b639060016112df565b60098111610bea576064610bdf676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b610b639060026112df565b6064610c0d676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b610c189060036112df565b610c2291906112f6565b610c2c90836112b9565b91505b80610c3981611315565b915050610b25565b50610c63676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b600654610c7090836112b9565b1115610ca757600654610c9a676765c793fa10079d601b1b6b204fce5e3e250261100000006112cc565b610ca491906112cc565b90505b5f8111610cea5760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b60448201526064016105b5565b816005819055508060065f828254610d0291906112b9565b909155505f9050610d146006836112f6565b600754909150610d2f9030906001600160a01b031683610e7e565b600854610d479030906001600160a01b031683610e7e565b600954610d5f9030906001600160a01b031683610e7e565b600a54610d779030906001600160a01b031683610e7e565b600b54610d8f9030906001600160a01b031683610e7e565b600c54610da79030906001600160a01b031683610e7e565b60055460065460408051928352602083018490528201527fd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac9060600160405180910390a1505050565b610dfd8383836001610edb565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610e785781811015610e6a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105b5565b610e7884848484035f610edb565b50505050565b6001600160a01b038316610ea757604051634b637e8f60e11b81525f60048201526024016105b5565b6001600160a01b038216610ed05760405163ec442f0560e01b81525f60048201526024016105b5565b610dfd838383610fad565b6001600160a01b038416610f045760405163e602df0560e01b81525f60048201526024016105b5565b6001600160a01b038316610f2d57604051634a1406b160e11b81525f60048201526024016105b5565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610e7857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f9f91815260200190565b60405180910390a350505050565b6001600160a01b038316610fd7578060025f828254610fcc91906112b9565b909155506110479050565b6001600160a01b0383165f90815260208190526040902054818110156110295760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105b5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661106357600280548290039055611081565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110c691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461111e575f80fd5b919050565b5f8060408385031215611134575f80fd5b61113d83611108565b946020939093013593505050565b5f805f6060848603121561115d575f80fd5b61116684611108565b925061117460208501611108565b929592945050506040919091013590565b5f8060408385031215611196575f80fd5b823591506111a660208401611108565b90509250929050565b5f602082840312156111bf575f80fd5b6111c882611108565b9392505050565b8035801515811461111e575f80fd5b5f80604083850312156111ef575f80fd5b6111f883611108565b91506111a6602084016111cf565b5f60208284031215611216575f80fd5b6111c8826111cf565b5f8060408385031215611230575f80fd5b61123983611108565b91506111a660208401611108565b600181811c9082168061125b57607f821691505b60208210810361127957634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252600c908201526b4e6f7420616c6c6f7765642160a01b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610562576105626112a5565b81810381811115610562576105626112a5565b8082028115828204841417610562576105626112a5565b5f8261131057634e487b7160e01b5f52601260045260245ffd5b500490565b5f60018201611326576113266112a5565b506001019056fea2646970667358221220e95388c6db252009f371df04c1ef0515db5a51061fad50ad30bf053307c38df464736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x7EC13697D98925BA1DC2BCC705C071BD168B10C2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND PUSH20 0x8DE119E98707AC240ABA2CB77E83B29882A34357 OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH20 0x3499C18F7265BE9AFDA16504A34CD1892F278AE OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND PUSH20 0xCC234A1D3E32148461B7EACB5A8BF4D0C4B6BE74 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xCEEA0E87B553BC445C5EB2242B5F28CD81B4ACAA OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH22 0x1017E23E2781A1DA5DACE87B4F0E7BF68191263FC32 PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x212122102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x109091 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x136 DUP3 DUP3 PUSH2 0x397 JUMP JUMPDEST POP POP PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x164 SWAP2 POP PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x19C JUMP JUMPDEST PUSH2 0x18F ADDRESS PUSH2 0x18A PUSH12 0x33B2E3C9FD0803CE8000000 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST TIMESTAMP PUSH1 0x80 MSTORE PUSH0 PUSH1 0x5 SSTORE PUSH2 0x491 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5 PUSH0 DUP4 DUP4 PUSH2 0x1D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x203 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x47E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x273 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x28F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x327 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x345 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x392 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x370 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x37C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x3BE DUP5 SLOAD PUSH2 0x313 JUMP JUMPDEST DUP5 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F6 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3DF JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x38F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x442 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x478 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1363 PUSH2 0x4B0 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x457 ADD MSTORE PUSH2 0xA96 ADD MSTORE PUSH2 0x1363 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x902D55A5 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xCE7842F5 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE8BE9A44 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE8BE9A44 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF771CB65 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xFDFF9B4D EQ PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD2F9EFAB EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x452 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xB16D78CF EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xB361412A EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xBE381B85 EQ PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA5E90EEE EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA779D080 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x8310A74D GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x8310A74D EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x8342083A EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DDEDB33 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x8ED2FE91 EQ PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x67859B6E EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x7CDF6FB1 EQ PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x2BE8781F EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42249BB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x253 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x114B JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1185 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1247 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1247 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x545 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x528 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x575 DUP6 DUP3 DUP6 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x580 DUP6 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI POP PUSH1 0x6 DUP3 GT ISZERO JUMPDEST PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x633 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x65A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x681 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x6A8 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x6CF JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x6F3 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 GT PUSH2 0x8A8 JUMPI PUSH2 0x3E8 PUSH2 0x88C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x5 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x94F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x8DE JUMPI PUSH1 0x64 PUSH2 0x8D3 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x914 JUMPI PUSH1 0x64 PUSH2 0x909 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x2 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x937 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x942 SWAP1 PUSH1 0x3 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x970 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x97D SWAP1 DUP6 PUSH2 0x12B9 JUMP JUMPDEST GT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9A7 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP4 PUSH2 0x9C1 PUSH1 0x6 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x9EE PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH2 0xA3C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x6 SLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH2 0xABB PUSH32 0x0 TIMESTAMP PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F206E6577206D6F6E746820746F20756E6C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xC41 JUMPI PUSH1 0x3 DUP2 GT PUSH2 0xB7E JUMPI PUSH2 0x3E8 PUSH2 0xB58 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x5 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0xB77 SWAP1 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0xBB4 JUMPI PUSH1 0x64 PUSH2 0xBA9 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0xBEA JUMPI PUSH1 0x64 PUSH2 0xBDF PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x2 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x64 PUSH2 0xC0D PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xC18 SWAP1 PUSH1 0x3 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0xC2C SWAP1 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xC39 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB25 JUMP JUMPDEST POP PUSH2 0xC63 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xC70 SWAP1 DUP4 PUSH2 0x12B9 JUMP JUMPDEST GT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x6 SLOAD PUSH2 0xC9A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F20756E6C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0xD14 PUSH1 0x6 DUP4 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xD2F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xD47 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xD5F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xD77 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD8F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xDA7 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xE78 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xE78 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE78 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF9F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFD7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1047 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1063 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x111E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x113D DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x115D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1166 DUP5 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP PUSH2 0x1174 PUSH1 0x20 DUP6 ADD PUSH2 0x1108 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1196 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x11A6 PUSH1 0x20 DUP5 ADD PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C8 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x111E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11F8 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 PUSH1 0x20 DUP5 ADD PUSH2 0x11CF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1216 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C8 DUP3 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1239 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 PUSH1 0x20 DUP5 ADD PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x125B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1279 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E6F7420616C6C6F77656421 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x12A5 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x12A5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1310 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1326 JUMPI PUSH2 0x1326 PUSH2 0x12A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 MSTORE8 DUP9 0xC6 0xDB 0x25 KECCAK256 MULMOD RETURN PUSH18 0xDF04C1EF0515DB5A51061FAD50AD30BF0533 SMOD 0xC3 DUP14 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "21808:5495:0:-:0;;;22164:76;;;-1:-1:-1;;;;;;22164:76:0;;;22198:42;22164:76;;;;22246:72;;;;;22276:42;22246:72;;;22324:69;;;;;22351:42;22324:69;;;22399:73;;;;;22430:42;22399:73;;;22478;;;;;;22509:42;22478:73;;;22557:70;;;22672:33;-1:-1:-1;;;;;;22672:33:0;;;;;;23010:302;;;;;;;;;;12451:113;;;;;;;;;;;;;-1:-1:-1;;;12451:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12451:113:0;;;12525:5;12517;:13;;;;;;:::i;:::-;-1:-1:-1;12540:7:0;:17;12550:7;12540;:17;:::i;:::-;-1:-1:-1;;23060:6:0::1;:19:::0;;-1:-1:-1;;;;;;23060:19:0::1;23069:10;23060:19:::0;;::::1;::::0;;;23089:28:::1;::::0;-1:-1:-1;21947:20:0::1;23089:5;:28::i;:::-;23158:35;23172:4;22013:28;21947:20;21880:21;22013:28;:::i;:::-;23158:5;:35::i;:::-;23261:15;23244:32;::::0;23304:1:::1;23286:15;:19:::0;21808:5495;;18308:208;-1:-1:-1;;;;;18378:21:0;;18374:91;;18422:32;;-1:-1:-1;;;18422:32:0;;18451:1;18422:32;;;3066:51:1;3039:18;;18422:32:0;;;;;;;;18374:91;18474:35;18490:1;18494:7;18503:5;18474:7;:35::i;:::-;18308:208;;:::o;16858:1107::-;-1:-1:-1;;;;;16947:18:0;;16943:540;;17099:5;17083:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16943:540:0;;-1:-1:-1;16943:540:0;;-1:-1:-1;;;;;17157:15:0;;17135:19;17157:15;;;;;;;;;;;17190:19;;;17186:115;;;17236:50;;-1:-1:-1;;;17236:50:0;;-1:-1:-1;;;;;3478:32:1;;17236:50:0;;;3460:51:1;3527:18;;;3520:34;;;3570:18;;;3563:34;;;3433:18;;17236:50:0;3258:345:1;17186:115:0;-1:-1:-1;;;;;17421:15:0;;:9;:15;;;;;;;;;;17439:19;;;;17421:37;;16943:540;-1:-1:-1;;;;;17497:16:0;;17493:425;;17660:12;:21;;;;;;;17493:425;;;-1:-1:-1;;;;;17871:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17493:425;17948:2;-1:-1:-1;;;;;17933:25:0;17942:4;-1:-1:-1;;;;;17933:25:0;;17952:5;17933:25;;;;3754::1;;3742:2;3727:18;;3608:177;17933:25:0;;;;;;;;16858:1107;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:1;;;2500:26;2451:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:1;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:1;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:1;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:1:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:128;2854:9;;;2875:11;;;2872:37;;;2889:18;;:::i;:::-;2787:128;;;;:::o;3128:125::-;3193:9;;;3214:10;;;3211:36;;;3227:18;;:::i;3608:177::-;21808:5495:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LOCKED_SUPPLY_789": {
									"entryPoint": 2509,
									"id": 789,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PUBLIC_SUPPLY_784": {
									"entryPoint": null,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_779": {
									"entryPoint": null,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 3568,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3803,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 3586,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 3710,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 4013,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1359,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@awardBonus_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyingEnabled_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@gameTreasury_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getNextUnlockInfo_1235": {
									"entryPoint": 2123,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@isDex_825": {
									"entryPoint": null,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastUnlockMonth_793": {
									"entryPoint": null,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityListing_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@managers_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketing_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1215,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@referralBonus_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellingEnabled_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBuyingEnabled_1309": {
									"entryPoint": 1867,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDexAddress_1337": {
									"entryPoint": 1783,
									"id": 1337,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setManager_1297": {
									"entryPoint": 1954,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setSellingEnabled_1321": {
									"entryPoint": 2051,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingReward_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTimestamp_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1939,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalUnlocked_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_454": {
									"entryPoint": 1384,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 2038,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockTokens_1078": {
									"entryPoint": 2545,
									"id": 1078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateDistributionAddress_1147": {
									"entryPoint": 1419,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7162:1",
										"nodeType": "YulBlock",
										"src": "0:7162:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:1",
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:1",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:1",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nativeSrc": "194:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:1",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nativeSrc": "190:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nativeSrc": "178:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:51:1",
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nativeSrc": "160:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nativeSrc": "343:297:1",
													"nodeType": "YulBlock",
													"src": "343:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:1",
																		"nodeType": "YulLiteral",
																		"src": "371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:1"
																},
																"nativeSrc": "353:21:1",
																"nodeType": "YulFunctionCall",
																"src": "353:21:1"
															},
															"nativeSrc": "353:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:1"
														},
														{
															"nativeSrc": "383:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:1"
																},
																"nativeSrc": "397:13:1",
																"nodeType": "YulFunctionCall",
																"src": "397:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:1",
																	"nodeType": "YulTypedName",
																	"src": "387:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:1",
																				"nodeType": "YulLiteral",
																				"src": "441:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:1"
																		},
																		"nativeSrc": "426:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nativeSrc": "419:34:1",
																"nodeType": "YulFunctionCall",
																"src": "419:34:1"
															},
															"nativeSrc": "419:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:1",
																				"nodeType": "YulLiteral",
																				"src": "483:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:1"
																		},
																		"nativeSrc": "468:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "492:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:1",
																				"nodeType": "YulLiteral",
																				"src": "500:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:1"
																		},
																		"nativeSrc": "488:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "488:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "505:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "462:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:1"
																},
																"nativeSrc": "462:50:1",
																"nodeType": "YulFunctionCall",
																"src": "462:50:1"
															},
															"nativeSrc": "462:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "462:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "536:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "536:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "547:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "547:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "532:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:1"
																				},
																				"nativeSrc": "532:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "532:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:1",
																				"nodeType": "YulLiteral",
																				"src": "556:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:1"
																		},
																		"nativeSrc": "528:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "528:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:1",
																		"nodeType": "YulLiteral",
																		"src": "561:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:1"
																},
																"nativeSrc": "521:42:1",
																"nodeType": "YulFunctionCall",
																"src": "521:42:1"
															},
															"nativeSrc": "521:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "521:42:1"
														},
														{
															"nativeSrc": "572:62:1",
															"nodeType": "YulAssignment",
															"src": "572:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "607:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "607:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "615:2:1",
																								"nodeType": "YulLiteral",
																								"src": "615:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "603:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "603:3:1"
																						},
																						"nativeSrc": "603:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "603:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "624:2:1",
																								"nodeType": "YulLiteral",
																								"src": "624:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "620:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:1"
																						},
																						"nativeSrc": "620:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "620:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "599:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:1"
																				},
																				"nativeSrc": "599:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "599:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:1"
																		},
																		"nativeSrc": "584:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "584:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:1",
																		"nodeType": "YulLiteral",
																		"src": "631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "580:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:1"
																},
																"nativeSrc": "580:54:1",
																"nodeType": "YulFunctionCall",
																"src": "580:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "572:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:1",
														"nodeType": "YulTypedName",
														"src": "312:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:1",
														"nodeType": "YulTypedName",
														"src": "323:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:1",
														"nodeType": "YulTypedName",
														"src": "334:4:1",
														"type": ""
													}
												],
												"src": "222:418:1"
											},
											{
												"body": {
													"nativeSrc": "694:124:1",
													"nodeType": "YulBlock",
													"src": "694:124:1",
													"statements": [
														{
															"nativeSrc": "704:29:1",
															"nodeType": "YulAssignment",
															"src": "704:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:1"
																},
																"nativeSrc": "713:20:1",
																"nodeType": "YulFunctionCall",
																"src": "713:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:1",
																"nodeType": "YulBlock",
																"src": "796:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:1",
																					"nodeType": "YulLiteral",
																					"src": "805:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:1",
																					"nodeType": "YulLiteral",
																					"src": "808:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:1"
																			},
																			"nativeSrc": "798:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:1"
																		},
																		"nativeSrc": "798:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:1",
																										"nodeType": "YulLiteral",
																										"src": "781:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:1",
																										"nodeType": "YulLiteral",
																										"src": "786:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:1"
																								},
																								"nativeSrc": "777:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:1",
																								"nodeType": "YulLiteral",
																								"src": "790:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:1"
																						},
																						"nativeSrc": "773:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:1"
																				},
																				"nativeSrc": "762:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:1"
																		},
																		"nativeSrc": "752:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:50:1",
																"nodeType": "YulFunctionCall",
																"src": "745:50:1"
															},
															"nativeSrc": "742:70:1",
															"nodeType": "YulIf",
															"src": "742:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:1",
														"nodeType": "YulTypedName",
														"src": "673:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:1",
														"nodeType": "YulTypedName",
														"src": "684:5:1",
														"type": ""
													}
												],
												"src": "645:173:1"
											},
											{
												"body": {
													"nativeSrc": "910:213:1",
													"nodeType": "YulBlock",
													"src": "910:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:1",
																"nodeType": "YulBlock",
																"src": "956:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:1",
																					"nodeType": "YulLiteral",
																					"src": "965:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:1",
																					"nodeType": "YulLiteral",
																					"src": "968:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:1"
																			},
																			"nativeSrc": "958:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:1"
																		},
																		"nativeSrc": "958:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:1"
																		},
																		"nativeSrc": "927:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:1",
																		"nodeType": "YulLiteral",
																		"src": "952:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:1"
																},
																"nativeSrc": "923:32:1",
																"nodeType": "YulFunctionCall",
																"src": "923:32:1"
															},
															"nativeSrc": "920:52:1",
															"nodeType": "YulIf",
															"src": "920:52:1"
														},
														{
															"nativeSrc": "981:39:1",
															"nodeType": "YulAssignment",
															"src": "981:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:1"
																},
																"nativeSrc": "991:29:1",
																"nodeType": "YulFunctionCall",
																"src": "991:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:1"
																}
															]
														},
														{
															"nativeSrc": "1029:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:1",
																"nodeType": "YulLiteral",
																"src": "1042:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:1",
															"nodeType": "YulAssignment",
															"src": "1052:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:1"
																		},
																		"nativeSrc": "1074:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:1"
																},
																"nativeSrc": "1061:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:1"
																}
															]
														},
														{
															"nativeSrc": "1102:15:1",
															"nodeType": "YulAssignment",
															"src": "1102:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:1",
																"nodeType": "YulIdentifier",
																"src": "1112:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:1",
														"nodeType": "YulTypedName",
														"src": "868:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:1",
														"nodeType": "YulTypedName",
														"src": "879:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:1",
														"nodeType": "YulTypedName",
														"src": "891:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:1",
														"nodeType": "YulTypedName",
														"src": "899:6:1",
														"type": ""
													}
												],
												"src": "823:300:1"
											},
											{
												"body": {
													"nativeSrc": "1223:92:1",
													"nodeType": "YulBlock",
													"src": "1223:92:1",
													"statements": [
														{
															"nativeSrc": "1233:26:1",
															"nodeType": "YulAssignment",
															"src": "1233:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:1"
																},
																"nativeSrc": "1241:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:1"
																				},
																				"nativeSrc": "1293:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:1"
																		},
																		"nativeSrc": "1286:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:1"
																},
																"nativeSrc": "1268:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:1"
															},
															"nativeSrc": "1268:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:1",
														"nodeType": "YulTypedName",
														"src": "1192:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:1",
														"nodeType": "YulTypedName",
														"src": "1203:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:1",
														"nodeType": "YulTypedName",
														"src": "1214:4:1",
														"type": ""
													}
												],
												"src": "1128:187:1"
											},
											{
												"body": {
													"nativeSrc": "1421:76:1",
													"nodeType": "YulBlock",
													"src": "1421:76:1",
													"statements": [
														{
															"nativeSrc": "1431:26:1",
															"nodeType": "YulAssignment",
															"src": "1431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:1"
																},
																"nativeSrc": "1439:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:1"
															},
															"nativeSrc": "1466:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:1",
														"nodeType": "YulTypedName",
														"src": "1390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:1",
														"nodeType": "YulTypedName",
														"src": "1401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:1",
														"nodeType": "YulTypedName",
														"src": "1412:4:1",
														"type": ""
													}
												],
												"src": "1320:177:1"
											},
											{
												"body": {
													"nativeSrc": "1606:270:1",
													"nodeType": "YulBlock",
													"src": "1606:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:1",
																"nodeType": "YulBlock",
																"src": "1652:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:1"
																			},
																			"nativeSrc": "1654:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:1"
																		},
																		"nativeSrc": "1654:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:1"
																},
																"nativeSrc": "1619:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:1"
															},
															"nativeSrc": "1616:52:1",
															"nodeType": "YulIf",
															"src": "1616:52:1"
														},
														{
															"nativeSrc": "1677:39:1",
															"nodeType": "YulAssignment",
															"src": "1677:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:1"
																},
																"nativeSrc": "1687:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:1"
																}
															]
														},
														{
															"nativeSrc": "1725:48:1",
															"nodeType": "YulAssignment",
															"src": "1725:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:1"
																		},
																		"nativeSrc": "1754:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:1"
																},
																"nativeSrc": "1735:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:1"
																}
															]
														},
														{
															"nativeSrc": "1782:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:1",
																"nodeType": "YulLiteral",
																"src": "1795:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:1",
															"nodeType": "YulAssignment",
															"src": "1805:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nativeSrc": "1827:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:1"
																},
																"nativeSrc": "1814:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:1"
																}
															]
														},
														{
															"nativeSrc": "1855:15:1",
															"nodeType": "YulAssignment",
															"src": "1855:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:1",
																"nodeType": "YulIdentifier",
																"src": "1865:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:1",
														"nodeType": "YulTypedName",
														"src": "1556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:1",
														"nodeType": "YulTypedName",
														"src": "1567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:1",
														"nodeType": "YulTypedName",
														"src": "1579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:1",
														"nodeType": "YulTypedName",
														"src": "1587:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:1",
														"nodeType": "YulTypedName",
														"src": "1595:6:1",
														"type": ""
													}
												],
												"src": "1502:374:1"
											},
											{
												"body": {
													"nativeSrc": "1968:213:1",
													"nodeType": "YulBlock",
													"src": "1968:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2014:16:1",
																"nodeType": "YulBlock",
																"src": "2014:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2023:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2026:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2026:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2016:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2016:6:1"
																			},
																			"nativeSrc": "2016:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2016:12:1"
																		},
																		"nativeSrc": "2016:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2016:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1989:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1998:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1985:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:1"
																		},
																		"nativeSrc": "1985:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2010:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2010:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1981:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:1"
																},
																"nativeSrc": "1981:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1981:32:1"
															},
															"nativeSrc": "1978:52:1",
															"nodeType": "YulIf",
															"src": "1978:52:1"
														},
														{
															"nativeSrc": "2039:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2039:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2052:1:1",
																"nodeType": "YulLiteral",
																"src": "2052:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2043:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2043:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2062:32:1",
															"nodeType": "YulAssignment",
															"src": "2062:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2084:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2084:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2071:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2071:12:1"
																},
																"nativeSrc": "2071:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2071:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2062:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2062:5:1"
																}
															]
														},
														{
															"nativeSrc": "2103:15:1",
															"nodeType": "YulAssignment",
															"src": "2103:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2113:5:1",
																"nodeType": "YulIdentifier",
																"src": "2113:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:1"
																}
															]
														},
														{
															"nativeSrc": "2127:48:1",
															"nodeType": "YulAssignment",
															"src": "2127:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2160:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2171:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2171:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2156:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:1"
																		},
																		"nativeSrc": "2156:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2137:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2137:18:1"
																},
																"nativeSrc": "2137:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2137:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1881:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1926:9:1",
														"nodeType": "YulTypedName",
														"src": "1926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1937:7:1",
														"nodeType": "YulTypedName",
														"src": "1937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1949:6:1",
														"nodeType": "YulTypedName",
														"src": "1949:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1957:6:1",
														"nodeType": "YulTypedName",
														"src": "1957:6:1",
														"type": ""
													}
												],
												"src": "1881:300:1"
											},
											{
												"body": {
													"nativeSrc": "2283:87:1",
													"nodeType": "YulBlock",
													"src": "2283:87:1",
													"statements": [
														{
															"nativeSrc": "2293:26:1",
															"nodeType": "YulAssignment",
															"src": "2293:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2305:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2305:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2316:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2316:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2301:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:1"
																},
																"nativeSrc": "2301:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2301:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2293:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2293:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2335:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2350:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2350:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2358:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2358:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:1"
																		},
																		"nativeSrc": "2346:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2346:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:1"
																},
																"nativeSrc": "2328:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2328:36:1"
															},
															"nativeSrc": "2328:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2328:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2186:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2252:9:1",
														"nodeType": "YulTypedName",
														"src": "2252:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2263:6:1",
														"nodeType": "YulTypedName",
														"src": "2263:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2274:4:1",
														"nodeType": "YulTypedName",
														"src": "2274:4:1",
														"type": ""
													}
												],
												"src": "2186:184:1"
											},
											{
												"body": {
													"nativeSrc": "2445:116:1",
													"nodeType": "YulBlock",
													"src": "2445:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2491:16:1",
																"nodeType": "YulBlock",
																"src": "2491:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2503:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:1"
																			},
																			"nativeSrc": "2493:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:1"
																		},
																		"nativeSrc": "2493:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2466:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2466:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2462:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:1"
																		},
																		"nativeSrc": "2462:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2458:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:1"
																},
																"nativeSrc": "2458:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2458:32:1"
															},
															"nativeSrc": "2455:52:1",
															"nodeType": "YulIf",
															"src": "2455:52:1"
														},
														{
															"nativeSrc": "2516:39:1",
															"nodeType": "YulAssignment",
															"src": "2516:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2545:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2545:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2526:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2526:18:1"
																},
																"nativeSrc": "2526:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2526:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2375:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2411:9:1",
														"nodeType": "YulTypedName",
														"src": "2411:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2422:7:1",
														"nodeType": "YulTypedName",
														"src": "2422:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2434:6:1",
														"nodeType": "YulTypedName",
														"src": "2434:6:1",
														"type": ""
													}
												],
												"src": "2375:186:1"
											},
											{
												"body": {
													"nativeSrc": "2612:114:1",
													"nodeType": "YulBlock",
													"src": "2612:114:1",
													"statements": [
														{
															"nativeSrc": "2622:29:1",
															"nodeType": "YulAssignment",
															"src": "2622:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2644:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2644:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2631:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2631:12:1"
																},
																"nativeSrc": "2631:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2631:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2622:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2622:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2704:16:1",
																"nodeType": "YulBlock",
																"src": "2704:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2713:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2713:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2716:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2716:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2706:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2706:6:1"
																			},
																			"nativeSrc": "2706:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2706:12:1"
																		},
																		"nativeSrc": "2706:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2706:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2673:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2673:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2694:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2694:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2687:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2687:6:1"
																						},
																						"nativeSrc": "2687:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2687:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2680:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2680:6:1"
																				},
																				"nativeSrc": "2680:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2680:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2670:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:1"
																		},
																		"nativeSrc": "2670:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2663:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:1"
																},
																"nativeSrc": "2663:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2663:40:1"
															},
															"nativeSrc": "2660:60:1",
															"nodeType": "YulIf",
															"src": "2660:60:1"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "2566:160:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2591:6:1",
														"nodeType": "YulTypedName",
														"src": "2591:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2602:5:1",
														"nodeType": "YulTypedName",
														"src": "2602:5:1",
														"type": ""
													}
												],
												"src": "2566:160:1"
											},
											{
												"body": {
													"nativeSrc": "2815:170:1",
													"nodeType": "YulBlock",
													"src": "2815:170:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2861:16:1",
																"nodeType": "YulBlock",
																"src": "2861:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2870:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2870:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2863:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2863:6:1"
																			},
																			"nativeSrc": "2863:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2863:12:1"
																		},
																		"nativeSrc": "2863:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2863:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2836:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2836:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2845:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2845:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2832:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2832:3:1"
																		},
																		"nativeSrc": "2832:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2857:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2857:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2828:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:1"
																},
																"nativeSrc": "2828:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2828:32:1"
															},
															"nativeSrc": "2825:52:1",
															"nodeType": "YulIf",
															"src": "2825:52:1"
														},
														{
															"nativeSrc": "2886:39:1",
															"nodeType": "YulAssignment",
															"src": "2886:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2915:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2915:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2896:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2896:18:1"
																},
																"nativeSrc": "2896:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2896:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2886:6:1"
																}
															]
														},
														{
															"nativeSrc": "2934:45:1",
															"nodeType": "YulAssignment",
															"src": "2934:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2964:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2964:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2975:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2960:3:1"
																		},
																		"nativeSrc": "2960:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2960:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "2944:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2944:15:1"
																},
																"nativeSrc": "2944:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2944:35:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2731:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2773:9:1",
														"nodeType": "YulTypedName",
														"src": "2773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2784:7:1",
														"nodeType": "YulTypedName",
														"src": "2784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2796:6:1",
														"nodeType": "YulTypedName",
														"src": "2796:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2804:6:1",
														"nodeType": "YulTypedName",
														"src": "2804:6:1",
														"type": ""
													}
												],
												"src": "2731:254:1"
											},
											{
												"body": {
													"nativeSrc": "3057:113:1",
													"nodeType": "YulBlock",
													"src": "3057:113:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3103:16:1",
																"nodeType": "YulBlock",
																"src": "3103:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3112:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3112:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3115:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3115:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3105:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3105:6:1"
																			},
																			"nativeSrc": "3105:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3105:12:1"
																		},
																		"nativeSrc": "3105:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3105:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3078:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3078:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3087:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3087:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3074:3:1"
																		},
																		"nativeSrc": "3074:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3074:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3099:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3070:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:1"
																},
																"nativeSrc": "3070:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3070:32:1"
															},
															"nativeSrc": "3067:52:1",
															"nodeType": "YulIf",
															"src": "3067:52:1"
														},
														{
															"nativeSrc": "3128:36:1",
															"nodeType": "YulAssignment",
															"src": "3128:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3154:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3154:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "3138:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "3138:15:1"
																},
																"nativeSrc": "3138:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3138:26:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3128:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2990:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3023:9:1",
														"nodeType": "YulTypedName",
														"src": "3023:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3034:7:1",
														"nodeType": "YulTypedName",
														"src": "3034:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3046:6:1",
														"nodeType": "YulTypedName",
														"src": "3046:6:1",
														"type": ""
													}
												],
												"src": "2990:180:1"
											},
											{
												"body": {
													"nativeSrc": "3332:162:1",
													"nodeType": "YulBlock",
													"src": "3332:162:1",
													"statements": [
														{
															"nativeSrc": "3342:26:1",
															"nodeType": "YulAssignment",
															"src": "3342:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3354:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3354:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3365:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3365:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3350:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3350:3:1"
																},
																"nativeSrc": "3350:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3350:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3342:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3342:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3395:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3395:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3377:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:1"
																},
																"nativeSrc": "3377:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3377:25:1"
															},
															"nativeSrc": "3377:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3377:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3422:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3433:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3433:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3418:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:1"
																		},
																		"nativeSrc": "3418:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3438:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3411:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:1"
																},
																"nativeSrc": "3411:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3411:34:1"
															},
															"nativeSrc": "3411:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3411:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3465:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3465:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3476:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3476:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3461:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:1"
																		},
																		"nativeSrc": "3461:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3461:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3481:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:1"
																},
																"nativeSrc": "3454:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3454:34:1"
															},
															"nativeSrc": "3454:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3454:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3175:319:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3285:9:1",
														"nodeType": "YulTypedName",
														"src": "3285:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3296:6:1",
														"nodeType": "YulTypedName",
														"src": "3296:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3304:6:1",
														"nodeType": "YulTypedName",
														"src": "3304:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3312:6:1",
														"nodeType": "YulTypedName",
														"src": "3312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3323:4:1",
														"nodeType": "YulTypedName",
														"src": "3323:4:1",
														"type": ""
													}
												],
												"src": "3175:319:1"
											},
											{
												"body": {
													"nativeSrc": "3586:173:1",
													"nodeType": "YulBlock",
													"src": "3586:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3632:16:1",
																"nodeType": "YulBlock",
																"src": "3632:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3641:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3641:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3644:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3644:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3634:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3634:6:1"
																			},
																			"nativeSrc": "3634:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:12:1"
																		},
																		"nativeSrc": "3634:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3607:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3607:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3616:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3603:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:1"
																		},
																		"nativeSrc": "3603:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3599:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:1"
																},
																"nativeSrc": "3599:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3599:32:1"
															},
															"nativeSrc": "3596:52:1",
															"nodeType": "YulIf",
															"src": "3596:52:1"
														},
														{
															"nativeSrc": "3657:39:1",
															"nodeType": "YulAssignment",
															"src": "3657:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3686:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3686:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3667:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3667:18:1"
																},
																"nativeSrc": "3667:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3667:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:1"
																}
															]
														},
														{
															"nativeSrc": "3705:48:1",
															"nodeType": "YulAssignment",
															"src": "3705:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3738:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3738:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3749:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3734:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3734:3:1"
																		},
																		"nativeSrc": "3734:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3734:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3715:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3715:18:1"
																},
																"nativeSrc": "3715:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3715:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3499:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3544:9:1",
														"nodeType": "YulTypedName",
														"src": "3544:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3555:7:1",
														"nodeType": "YulTypedName",
														"src": "3555:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3567:6:1",
														"nodeType": "YulTypedName",
														"src": "3567:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3575:6:1",
														"nodeType": "YulTypedName",
														"src": "3575:6:1",
														"type": ""
													}
												],
												"src": "3499:260:1"
											},
											{
												"body": {
													"nativeSrc": "3819:325:1",
													"nodeType": "YulBlock",
													"src": "3819:325:1",
													"statements": [
														{
															"nativeSrc": "3829:22:1",
															"nodeType": "YulAssignment",
															"src": "3829:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3843:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3843:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3846:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3846:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3839:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3839:3:1"
																},
																"nativeSrc": "3839:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3839:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:1"
																}
															]
														},
														{
															"nativeSrc": "3860:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3860:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3890:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3890:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3896:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3896:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3886:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:1"
																},
																"nativeSrc": "3886:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3886:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3864:18:1",
																	"nodeType": "YulTypedName",
																	"src": "3864:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3937:31:1",
																"nodeType": "YulBlock",
																"src": "3937:31:1",
																"statements": [
																	{
																		"nativeSrc": "3939:27:1",
																		"nodeType": "YulAssignment",
																		"src": "3939:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3953:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3953:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3961:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3961:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3949:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3949:3:1"
																			},
																			"nativeSrc": "3949:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3949:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3939:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3939:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3917:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3917:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:1"
																},
																"nativeSrc": "3910:26:1",
																"nodeType": "YulFunctionCall",
																"src": "3910:26:1"
															},
															"nativeSrc": "3907:61:1",
															"nodeType": "YulIf",
															"src": "3907:61:1"
														},
														{
															"body": {
																"nativeSrc": "4027:111:1",
																"nodeType": "YulBlock",
																"src": "4027:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4048:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4048:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4055:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4055:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4060:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4060:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4051:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4051:3:1"
																					},
																					"nativeSrc": "4051:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4051:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4041:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4041:6:1"
																			},
																			"nativeSrc": "4041:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4041:31:1"
																		},
																		"nativeSrc": "4041:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4041:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4092:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4095:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4095:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4085:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:1"
																			},
																			"nativeSrc": "4085:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4085:15:1"
																		},
																		"nativeSrc": "4085:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4120:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4120:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4123:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4123:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4113:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4113:6:1"
																			},
																			"nativeSrc": "4113:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:15:1"
																		},
																		"nativeSrc": "4113:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3983:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4006:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4006:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4003:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4003:2:1"
																		},
																		"nativeSrc": "4003:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4003:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3980:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3980:2:1"
																},
																"nativeSrc": "3980:38:1",
																"nodeType": "YulFunctionCall",
																"src": "3980:38:1"
															},
															"nativeSrc": "3977:161:1",
															"nodeType": "YulIf",
															"src": "3977:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3764:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3799:4:1",
														"nodeType": "YulTypedName",
														"src": "3799:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3808:6:1",
														"nodeType": "YulTypedName",
														"src": "3808:6:1",
														"type": ""
													}
												],
												"src": "3764:380:1"
											},
											{
												"body": {
													"nativeSrc": "4323:162:1",
													"nodeType": "YulBlock",
													"src": "4323:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4333:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:1"
																},
																"nativeSrc": "4333:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4333:21:1"
															},
															"nativeSrc": "4333:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4333:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4374:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4374:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4385:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4385:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4370:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:1"
																		},
																		"nativeSrc": "4370:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4363:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:1"
																},
																"nativeSrc": "4363:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4363:30:1"
															},
															"nativeSrc": "4363:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4363:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4413:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4424:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4424:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4409:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:1"
																		},
																		"nativeSrc": "4409:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:1"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f77656421",
																		"kind": "string",
																		"nativeSrc": "4429:14:1",
																		"nodeType": "YulLiteral",
																		"src": "4429:14:1",
																		"type": "",
																		"value": "Not allowed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:1"
																},
																"nativeSrc": "4402:42:1",
																"nodeType": "YulFunctionCall",
																"src": "4402:42:1"
															},
															"nativeSrc": "4402:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "4402:42:1"
														},
														{
															"nativeSrc": "4453:26:1",
															"nodeType": "YulAssignment",
															"src": "4453:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4465:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4465:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4476:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4476:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:1"
																},
																"nativeSrc": "4461:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4461:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4453:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4149:336:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4300:9:1",
														"nodeType": "YulTypedName",
														"src": "4300:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4314:4:1",
														"nodeType": "YulTypedName",
														"src": "4314:4:1",
														"type": ""
													}
												],
												"src": "4149:336:1"
											},
											{
												"body": {
													"nativeSrc": "4664:163:1",
													"nodeType": "YulBlock",
													"src": "4664:163:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4674:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:1"
																},
																"nativeSrc": "4674:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4674:21:1"
															},
															"nativeSrc": "4674:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4674:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4715:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4715:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4726:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4711:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4711:3:1"
																		},
																		"nativeSrc": "4711:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4711:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4731:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4704:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4704:6:1"
																},
																"nativeSrc": "4704:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4704:30:1"
															},
															"nativeSrc": "4704:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4704:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4765:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4750:3:1"
																		},
																		"nativeSrc": "4750:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4750:18:1"
																	},
																	{
																		"hexValue": "496e76616c696420696e646578",
																		"kind": "string",
																		"nativeSrc": "4770:15:1",
																		"nodeType": "YulLiteral",
																		"src": "4770:15:1",
																		"type": "",
																		"value": "Invalid index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4743:6:1"
																},
																"nativeSrc": "4743:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4743:43:1"
															},
															"nativeSrc": "4743:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "4743:43:1"
														},
														{
															"nativeSrc": "4795:26:1",
															"nodeType": "YulAssignment",
															"src": "4795:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4807:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4807:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4818:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4818:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:1"
																},
																"nativeSrc": "4803:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4803:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4795:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4490:337:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4641:9:1",
														"nodeType": "YulTypedName",
														"src": "4641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4655:4:1",
														"nodeType": "YulTypedName",
														"src": "4655:4:1",
														"type": ""
													}
												],
												"src": "4490:337:1"
											},
											{
												"body": {
													"nativeSrc": "4864:95:1",
													"nodeType": "YulBlock",
													"src": "4864:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4881:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4888:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4888:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4893:10:1",
																				"nodeType": "YulLiteral",
																				"src": "4893:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4884:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:1"
																		},
																		"nativeSrc": "4884:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4884:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4874:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:1"
																},
																"nativeSrc": "4874:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4874:31:1"
															},
															"nativeSrc": "4874:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4874:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4921:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4921:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4924:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4924:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:1"
																},
																"nativeSrc": "4914:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4914:15:1"
															},
															"nativeSrc": "4914:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4914:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4945:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4945:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4948:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4948:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4938:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:1"
																},
																"nativeSrc": "4938:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4938:15:1"
															},
															"nativeSrc": "4938:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4938:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4832:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4832:127:1"
											},
											{
												"body": {
													"nativeSrc": "5012:77:1",
													"nodeType": "YulBlock",
													"src": "5012:77:1",
													"statements": [
														{
															"nativeSrc": "5022:16:1",
															"nodeType": "YulAssignment",
															"src": "5022:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5033:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5033:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5036:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5029:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5029:3:1"
																},
																"nativeSrc": "5029:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5029:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5022:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5061:22:1",
																"nodeType": "YulBlock",
																"src": "5061:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5063:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5063:16:1"
																			},
																			"nativeSrc": "5063:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5063:18:1"
																		},
																		"nativeSrc": "5063:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5063:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5053:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5053:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5056:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5056:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5050:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5050:2:1"
																},
																"nativeSrc": "5050:10:1",
																"nodeType": "YulFunctionCall",
																"src": "5050:10:1"
															},
															"nativeSrc": "5047:36:1",
															"nodeType": "YulIf",
															"src": "5047:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4964:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4995:1:1",
														"nodeType": "YulTypedName",
														"src": "4995:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4998:1:1",
														"nodeType": "YulTypedName",
														"src": "4998:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5004:3:1",
														"nodeType": "YulTypedName",
														"src": "5004:3:1",
														"type": ""
													}
												],
												"src": "4964:125:1"
											},
											{
												"body": {
													"nativeSrc": "5143:79:1",
													"nodeType": "YulBlock",
													"src": "5143:79:1",
													"statements": [
														{
															"nativeSrc": "5153:17:1",
															"nodeType": "YulAssignment",
															"src": "5153:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5165:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5168:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5168:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5161:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5161:3:1"
																},
																"nativeSrc": "5161:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5161:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5153:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5153:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5194:22:1",
																"nodeType": "YulBlock",
																"src": "5194:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5196:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5196:16:1"
																			},
																			"nativeSrc": "5196:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5196:18:1"
																		},
																		"nativeSrc": "5196:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5196:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5185:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5185:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5191:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5191:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5182:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5182:2:1"
																},
																"nativeSrc": "5182:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5182:11:1"
															},
															"nativeSrc": "5179:37:1",
															"nodeType": "YulIf",
															"src": "5179:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5094:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5125:1:1",
														"nodeType": "YulTypedName",
														"src": "5125:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5128:1:1",
														"nodeType": "YulTypedName",
														"src": "5128:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5134:4:1",
														"nodeType": "YulTypedName",
														"src": "5134:4:1",
														"type": ""
													}
												],
												"src": "5094:128:1"
											},
											{
												"body": {
													"nativeSrc": "5279:116:1",
													"nodeType": "YulBlock",
													"src": "5279:116:1",
													"statements": [
														{
															"nativeSrc": "5289:20:1",
															"nodeType": "YulAssignment",
															"src": "5289:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5304:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5307:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5307:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5367:22:1",
																"nodeType": "YulBlock",
																"src": "5367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5369:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5369:16:1"
																			},
																			"nativeSrc": "5369:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5369:18:1"
																		},
																		"nativeSrc": "5369:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5338:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5338:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5331:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5331:6:1"
																				},
																				"nativeSrc": "5331:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5331:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5345:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5345:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5352:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "5352:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5361:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "5361:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5348:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5348:3:1"
																						},
																						"nativeSrc": "5348:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5348:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5342:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5342:2:1"
																				},
																				"nativeSrc": "5342:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5342:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5328:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5328:2:1"
																		},
																		"nativeSrc": "5328:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5328:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5321:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5321:6:1"
																},
																"nativeSrc": "5321:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5321:45:1"
															},
															"nativeSrc": "5318:71:1",
															"nodeType": "YulIf",
															"src": "5318:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5227:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5258:1:1",
														"nodeType": "YulTypedName",
														"src": "5258:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5261:1:1",
														"nodeType": "YulTypedName",
														"src": "5261:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5267:7:1",
														"nodeType": "YulTypedName",
														"src": "5267:7:1",
														"type": ""
													}
												],
												"src": "5227:168:1"
											},
											{
												"body": {
													"nativeSrc": "5446:171:1",
													"nodeType": "YulBlock",
													"src": "5446:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5477:111:1",
																"nodeType": "YulBlock",
																"src": "5477:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5498:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5498:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5505:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5505:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5510:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5510:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5501:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5501:3:1"
																					},
																					"nativeSrc": "5501:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5501:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5491:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5491:6:1"
																			},
																			"nativeSrc": "5491:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5491:31:1"
																		},
																		"nativeSrc": "5491:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5491:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5542:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5542:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5545:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5545:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5535:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:1"
																			},
																			"nativeSrc": "5535:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5535:15:1"
																		},
																		"nativeSrc": "5535:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5535:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5570:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5573:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5573:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5563:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5563:6:1"
																			},
																			"nativeSrc": "5563:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5563:15:1"
																		},
																		"nativeSrc": "5563:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5563:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5466:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5466:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5459:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:1"
																},
																"nativeSrc": "5459:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5459:9:1"
															},
															"nativeSrc": "5456:132:1",
															"nodeType": "YulIf",
															"src": "5456:132:1"
														},
														{
															"nativeSrc": "5597:14:1",
															"nodeType": "YulAssignment",
															"src": "5597:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5606:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5606:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5609:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5609:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:1"
																},
																"nativeSrc": "5602:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5602:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5597:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5597:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5400:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5431:1:1",
														"nodeType": "YulTypedName",
														"src": "5431:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5434:1:1",
														"nodeType": "YulTypedName",
														"src": "5434:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5440:1:1",
														"nodeType": "YulTypedName",
														"src": "5440:1:1",
														"type": ""
													}
												],
												"src": "5400:217:1"
											},
											{
												"body": {
													"nativeSrc": "5796:177:1",
													"nodeType": "YulBlock",
													"src": "5796:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5813:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5813:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5824:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5806:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5806:6:1"
																},
																"nativeSrc": "5806:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5806:21:1"
															},
															"nativeSrc": "5806:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5806:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5847:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5847:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5858:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5843:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:1"
																		},
																		"nativeSrc": "5843:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5863:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5863:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5836:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:1"
																},
																"nativeSrc": "5836:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5836:30:1"
															},
															"nativeSrc": "5836:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5836:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5886:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5886:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5897:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5882:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5882:3:1"
																		},
																		"nativeSrc": "5882:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5882:18:1"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e7320616c726561647920756e6c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "5902:29:1",
																		"nodeType": "YulLiteral",
																		"src": "5902:29:1",
																		"type": "",
																		"value": "All tokens already unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5875:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:1"
																},
																"nativeSrc": "5875:57:1",
																"nodeType": "YulFunctionCall",
																"src": "5875:57:1"
															},
															"nativeSrc": "5875:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "5875:57:1"
														},
														{
															"nativeSrc": "5941:26:1",
															"nodeType": "YulAssignment",
															"src": "5941:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5953:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5953:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5964:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5949:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:1"
																},
																"nativeSrc": "5949:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5949:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5941:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5941:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5622:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5773:9:1",
														"nodeType": "YulTypedName",
														"src": "5773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5787:4:1",
														"nodeType": "YulTypedName",
														"src": "5787:4:1",
														"type": ""
													}
												],
												"src": "5622:351:1"
											},
											{
												"body": {
													"nativeSrc": "6152:172:1",
													"nodeType": "YulBlock",
													"src": "6152:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6169:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6169:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6180:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:1"
																},
																"nativeSrc": "6162:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6162:21:1"
															},
															"nativeSrc": "6162:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6162:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6203:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6203:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6214:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6214:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6199:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:1"
																		},
																		"nativeSrc": "6199:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6219:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6192:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6192:6:1"
																},
																"nativeSrc": "6192:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6192:30:1"
															},
															"nativeSrc": "6192:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6192:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6253:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6253:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:1"
																		},
																		"nativeSrc": "6238:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:18:1"
																	},
																	{
																		"hexValue": "4e6f206e6577206d6f6e746820746f20756e6c6f636b",
																		"kind": "string",
																		"nativeSrc": "6258:24:1",
																		"nodeType": "YulLiteral",
																		"src": "6258:24:1",
																		"type": "",
																		"value": "No new month to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:1"
																},
																"nativeSrc": "6231:52:1",
																"nodeType": "YulFunctionCall",
																"src": "6231:52:1"
															},
															"nativeSrc": "6231:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "6231:52:1"
														},
														{
															"nativeSrc": "6292:26:1",
															"nodeType": "YulAssignment",
															"src": "6292:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6304:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6304:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6315:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6315:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6300:3:1"
																},
																"nativeSrc": "6300:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6300:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6292:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6292:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5978:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6129:9:1",
														"nodeType": "YulTypedName",
														"src": "6129:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6143:4:1",
														"nodeType": "YulTypedName",
														"src": "6143:4:1",
														"type": ""
													}
												],
												"src": "5978:346:1"
											},
											{
												"body": {
													"nativeSrc": "6376:88:1",
													"nodeType": "YulBlock",
													"src": "6376:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6407:22:1",
																"nodeType": "YulBlock",
																"src": "6407:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6409:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6409:16:1"
																			},
																			"nativeSrc": "6409:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6409:18:1"
																		},
																		"nativeSrc": "6409:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6409:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6392:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6392:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6403:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6403:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:1"
																		},
																		"nativeSrc": "6399:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6399:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6389:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6389:2:1"
																},
																"nativeSrc": "6389:17:1",
																"nodeType": "YulFunctionCall",
																"src": "6389:17:1"
															},
															"nativeSrc": "6386:43:1",
															"nodeType": "YulIf",
															"src": "6386:43:1"
														},
														{
															"nativeSrc": "6438:20:1",
															"nodeType": "YulAssignment",
															"src": "6438:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6449:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6449:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6456:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6456:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6445:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6445:3:1"
																},
																"nativeSrc": "6445:13:1",
																"nodeType": "YulFunctionCall",
																"src": "6445:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6438:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6329:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6358:5:1",
														"nodeType": "YulTypedName",
														"src": "6358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6368:3:1",
														"nodeType": "YulTypedName",
														"src": "6368:3:1",
														"type": ""
													}
												],
												"src": "6329:135:1"
											},
											{
												"body": {
													"nativeSrc": "6643:167:1",
													"nodeType": "YulBlock",
													"src": "6643:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6660:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6653:6:1"
																},
																"nativeSrc": "6653:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6653:21:1"
															},
															"nativeSrc": "6653:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6653:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6694:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6694:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6705:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6705:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6690:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6690:3:1"
																		},
																		"nativeSrc": "6690:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6710:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6710:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6683:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:1"
																},
																"nativeSrc": "6683:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6683:30:1"
															},
															"nativeSrc": "6683:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6683:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6733:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6733:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6744:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6744:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6729:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6729:3:1"
																		},
																		"nativeSrc": "6729:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6729:18:1"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20756e6c6f636b",
																		"kind": "string",
																		"nativeSrc": "6749:19:1",
																		"nodeType": "YulLiteral",
																		"src": "6749:19:1",
																		"type": "",
																		"value": "Nothing to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:1"
																},
																"nativeSrc": "6722:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6722:47:1"
															},
															"nativeSrc": "6722:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6722:47:1"
														},
														{
															"nativeSrc": "6778:26:1",
															"nodeType": "YulAssignment",
															"src": "6778:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6790:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6790:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6801:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6786:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6786:3:1"
																},
																"nativeSrc": "6786:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6786:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6778:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6778:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6469:341:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6620:9:1",
														"nodeType": "YulTypedName",
														"src": "6620:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6634:4:1",
														"nodeType": "YulTypedName",
														"src": "6634:4:1",
														"type": ""
													}
												],
												"src": "6469:341:1"
											},
											{
												"body": {
													"nativeSrc": "6972:188:1",
													"nodeType": "YulBlock",
													"src": "6972:188:1",
													"statements": [
														{
															"nativeSrc": "6982:26:1",
															"nodeType": "YulAssignment",
															"src": "6982:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6994:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6994:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7005:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6990:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:1"
																},
																"nativeSrc": "6990:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6990:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6982:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7024:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7024:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7039:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7039:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7055:3:1",
																								"nodeType": "YulLiteral",
																								"src": "7055:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7060:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7060:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7051:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7051:3:1"
																						},
																						"nativeSrc": "7051:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7051:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7064:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7064:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7047:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7047:3:1"
																				},
																				"nativeSrc": "7047:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7047:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7035:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:1"
																		},
																		"nativeSrc": "7035:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7035:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7017:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:1"
																},
																"nativeSrc": "7017:51:1",
																"nodeType": "YulFunctionCall",
																"src": "7017:51:1"
															},
															"nativeSrc": "7017:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "7017:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7088:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7088:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7099:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7099:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7084:3:1"
																		},
																		"nativeSrc": "7084:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7084:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7104:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7077:6:1"
																},
																"nativeSrc": "7077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7077:34:1"
															},
															"nativeSrc": "7077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7077:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7131:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7131:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7142:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7127:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7127:3:1"
																		},
																		"nativeSrc": "7127:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7127:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7147:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7147:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:1"
																},
																"nativeSrc": "7120:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7120:34:1"
															},
															"nativeSrc": "7120:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7120:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6815:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6925:9:1",
														"nodeType": "YulTypedName",
														"src": "6925:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6936:6:1",
														"nodeType": "YulTypedName",
														"src": "6936:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6944:6:1",
														"nodeType": "YulTypedName",
														"src": "6944:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6952:6:1",
														"nodeType": "YulTypedName",
														"src": "6952:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6963:4:1",
														"nodeType": "YulTypedName",
														"src": "6963:4:1",
														"type": ""
													}
												],
												"src": "6815:345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not allowed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"All tokens already unlocked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"No new month to unlock\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Nothing to unlock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 1111
									},
									{
										"length": 32,
										"start": 2710
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x902D55A5 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0xCE7842F5 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xE8BE9A44 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE8BE9A44 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF771CB65 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xFDFF9B4D EQ PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD2F9EFAB EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x452 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xB16D78CF EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xB361412A EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xBE381B85 EQ PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xA5E90EEE EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA779D080 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x8310A74D GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x8310A74D EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x8342083A EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DDEDB33 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x8ED2FE91 EQ PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C11E12A EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x67859B6E EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x7CDF6FB1 EQ PUSH2 0x30C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x2BE8781F EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42249BB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x253 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x114B JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x1185 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x257 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3D9 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x257 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x28B PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x11AF JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1247 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FA SWAP1 PUSH2 0x1247 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x545 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x528 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x575 DUP6 DUP3 DUP6 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x580 DUP6 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x5D0 JUMPI POP PUSH1 0x6 DUP3 GT ISZERO JUMPDEST PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x633 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x65A JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x681 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x6A8 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x6CF JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x6F3 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CE SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 GT PUSH2 0x8A8 JUMPI PUSH2 0x3E8 PUSH2 0x88C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x5 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x94F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x8DE JUMPI PUSH1 0x64 PUSH2 0x8D3 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x914 JUMPI PUSH1 0x64 PUSH2 0x909 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x897 SWAP1 PUSH1 0x2 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x937 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x942 SWAP1 PUSH1 0x3 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x970 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x97D SWAP1 DUP6 PUSH2 0x12B9 JUMP JUMPDEST GT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x6 SLOAD PUSH2 0x9A7 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP4 PUSH2 0x9C1 PUSH1 0x6 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x9EE PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH2 0xA3C PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x6 SLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH2 0xABB PUSH32 0x0 TIMESTAMP PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F206E6577206D6F6E746820746F20756E6C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0xB22 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xC41 JUMPI PUSH1 0x3 DUP2 GT PUSH2 0xB7E JUMPI PUSH2 0x3E8 PUSH2 0xB58 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x5 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0xB6D SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0xB77 SWAP1 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0xBB4 JUMPI PUSH1 0x64 PUSH2 0xBA9 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x1 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0xBEA JUMPI PUSH1 0x64 PUSH2 0xBDF PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xB63 SWAP1 PUSH1 0x2 PUSH2 0x12DF JUMP JUMPDEST PUSH1 0x64 PUSH2 0xC0D PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xC18 SWAP1 PUSH1 0x3 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0xC2C SWAP1 DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xC39 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB25 JUMP JUMPDEST POP PUSH2 0xC63 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xC70 SWAP1 DUP4 PUSH2 0x12B9 JUMP JUMPDEST GT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x6 SLOAD PUSH2 0xC9A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F20756E6C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0xD14 PUSH1 0x6 DUP4 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xD2F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xD47 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xD5F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xD77 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD8F SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xDA7 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xEDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xE78 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xE78 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xEDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xDFD DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE78 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF9F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFD7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1047 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1063 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x111E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x113D DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x115D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1166 DUP5 PUSH2 0x1108 JUMP JUMPDEST SWAP3 POP PUSH2 0x1174 PUSH1 0x20 DUP6 ADD PUSH2 0x1108 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1196 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x11A6 PUSH1 0x20 DUP5 ADD PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C8 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x111E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11F8 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 PUSH1 0x20 DUP5 ADD PUSH2 0x11CF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1216 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C8 DUP3 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1239 DUP4 PUSH2 0x1108 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 PUSH1 0x20 DUP5 ADD PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x125B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1279 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E6F7420616C6C6F77656421 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x12A5 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x12A5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1310 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1326 JUMPI PUSH2 0x1326 PUSH2 0x12A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 MSTORE8 DUP9 0xC6 0xDB 0x25 KECCAK256 MULMOD RETURN PUSH18 0xDF04C1EF0515DB5A51061FAD50AD30BF0533 SMOD 0xC3 DUP14 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "21808:5495:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22399:73;;;;;-1:-1:-1;;;;;22399:73:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;22399:73:0;;;;;;;;12629:89;;;:::i;:::-;;;;;;;:::i;14848:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:1;;1286:22;1268:41;;1256:2;1241:18;14848:186:0;1128:187:1;13699:97:0;13777:12;;13699:97;;;1466:25:1;;;1454:2;1439:18;13699:97:0;1320:177:1;15626:244:0;;;;;;:::i;:::-;;:::i;24882:481::-;;;;;;:::i;:::-;;:::i;:::-;;22324:69;;;;;-1:-1:-1;;;;;22324:69:0;;;13557:82;;;13630:2;2328:36:1;;2316:2;2301:18;13557:82:0;2186:184:1;22732:37:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;22164:76;;;;;-1:-1:-1;;;;;22164:76:0;;;13854:116;;;;;;:::i;:::-;-1:-1:-1;;;;;13945:18:0;13919:7;13945:18;;;;;;;;;;;;13854:116;26883;;;;;;:::i;:::-;;:::i;22093:30::-;;;;;;21907:60;;-1:-1:-1;;;21907:60:0;;26671:99;;;;;;:::i;:::-;;:::i;22634:32::-;;;;;-1:-1:-1;;;22634:32:0;;;;;;21841:60;;21880:21;21841:60;;12831:93;;;:::i;26555:110::-;;;;;;:::i;:::-;;:::i;22129:28::-;;;;;;14165:178;;;;;;:::i;:::-;;:::i;26776:101::-;;;;;;:::i;:::-;;:::i;22557:70::-;;;;;-1:-1:-1;;;;;22557:70:0;;;25369:654;;;:::i;:::-;;;;3377:25:1;;;3433:2;3418:18;;3411:34;;;;3461:18;;;3454:34;3365:2;3350:18;25369:654:0;3175:319:1;22478:73:0;;;;;-1:-1:-1;;;;;22478:73:0;;;22246:72;;;;;-1:-1:-1;;;;;22246:72:0;;;14401:140;;;;;;:::i;:::-;-1:-1:-1;;;;;14507:18:0;;;14481:7;14507:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14401:140;22048:39;;;;;21973:68;;;:::i;22672:33::-;;;;;-1:-1:-1;;;22672:33:0;;;;;;23318:1558;;;:::i;22775:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;12629:89;12674:13;12706:5;12699:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12629:89;:::o;14848:186::-;14921:4;4256:10;14975:31;4256:10;14991:7;15000:5;14975:8;:31::i;:::-;15023:4;15016:11;;;14848:186;;;;;:::o;15626:244::-;15713:4;4256:10;15769:37;15785:4;4256:10;15800:5;15769:15;:37::i;:::-;15816:26;15826:4;15832:2;15836:5;15816:9;:26::i;:::-;-1:-1:-1;15859:4:0;;15626:244;-1:-1:-1;;;;15626:244:0:o;24882:481::-;22949:6;;-1:-1:-1;;;;;22949:6:0;22959:10;22949:20;22941:45;;;;-1:-1:-1;;;22941:45:0;;;;;;;:::i;:::-;;;;;;;;;24996:1:::1;24987:5;:10;;:24;;;;;25010:1;25001:5;:10;;24987:24;24979:50;;;::::0;-1:-1:-1;;;24979:50:0;;4692:2:1;24979:50:0::1;::::0;::::1;4674:21:1::0;4731:2;4711:18;;;4704:30;-1:-1:-1;;;4750:18:1;;;4743:43;4803:18;;24979:50:0::1;4490:337:1::0;24979:50:0::1;25043:5;25052:1;25043:10:::0;25040:316:::1;;25055:16;:29:::0;;-1:-1:-1;;;;;;25055:29:0::1;-1:-1:-1::0;;;;;25055:29:0;::::1;;::::0;;24882:481;;:::o;25040:316::-:1;25102:5;25111:1;25102:10:::0;25099:257:::1;;25114:12;:25:::0;;-1:-1:-1;;;;;;25114:25:0::1;-1:-1:-1::0;;;;;25114:25:0;::::1;;::::0;;24882:481;;:::o;25099:257::-:1;25157:5;25166:1;25157:10:::0;25154:202:::1;;25169:9;:22:::0;;-1:-1:-1;;;;;;25169:22:0::1;-1:-1:-1::0;;;;;25169:22:0;::::1;;::::0;;24882:481;;:::o;25154:202::-:1;25209:5;25218:1;25209:10:::0;25206:150:::1;;25221:13;:26:::0;;-1:-1:-1;;;;;;25221:26:0::1;-1:-1:-1::0;;;;;25221:26:0;::::1;;::::0;;24882:481;;:::o;25206:150::-:1;25265:5;25274:1;25265:10:::0;25262:94:::1;;25277:13;:26:::0;;-1:-1:-1;;;;;;25277:26:0::1;-1:-1:-1::0;;;;;25277:26:0;::::1;;::::0;;24882:481;;:::o;25262:94::-:1;25321:5;25330:1;25321:10:::0;25318:38:::1;;25333:10;:23:::0;;-1:-1:-1;;;;;;25333:23:0::1;-1:-1:-1::0;;;;;25333:23:0;::::1;;::::0;;25318:38:::1;24882:481:::0;;:::o;26883:116::-;22949:6;;-1:-1:-1;;;;;22949:6:0;22959:10;22949:20;22941:45;;;;-1:-1:-1;;;22941:45:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;26966:17:0;;;::::1;;::::0;;;:5:::1;:17;::::0;;;;:26;;-1:-1:-1;;26966:26:0::1;::::0;::::1;;::::0;;;::::1;::::0;;26883:116::o;26671:99::-;22949:6;;-1:-1:-1;;;;;22949:6:0;22959:10;22949:20;22941:45;;;;-1:-1:-1;;;22941:45:0;;;;;;;:::i;:::-;26739:13:::1;:24:::0;;;::::1;;-1:-1:-1::0;;;26739:24:0::1;-1:-1:-1::0;;;;26739:24:0;;::::1;::::0;;;::::1;::::0;;26671:99::o;12831:93::-;12878:13;12910:7;12903:14;;;;;:::i;26555:110::-;22949:6;;-1:-1:-1;;;;;22949:6:0;22959:10;22949:20;22941:45;;;;-1:-1:-1;;;22941:45:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;26632:17:0;;;::::1;;::::0;;;:8:::1;:17;::::0;;;;:26;;-1:-1:-1;;26632:26:0::1;::::0;::::1;;::::0;;;::::1;::::0;;26555:110::o;14165:178::-;14234:4;4256:10;14288:27;4256:10;14305:2;14309:5;14288:9;:27::i;26776:101::-;22949:6;;-1:-1:-1;;;;;22949:6:0;22959:10;22949:20;22941:45;;;;-1:-1:-1;;;22941:45:0;;;;;;;:::i;:::-;26845:14:::1;:25:::0;;;::::1;;-1:-1:-1::0;;;26845:25:0::1;-1:-1:-1::0;;;;26845:25:0;;::::1;::::0;;;::::1;::::0;;26776:101::o;25369:654::-;25421:13;25436:19;25457:17;25486:9;25498:15;;25516:1;25498:19;;;;:::i;:::-;25486:31;;25537:1;25532;:6;25528:311;;25590:4;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;25569:17;;25585:1;25569:17;:::i;:::-;25568:26;;;;:::i;:::-;25554:40;;25528:311;;;25620:1;25615;:6;25611:228;;25673:3;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;25652:17;;25668:1;25652:17;:::i;25611:228::-;25702:1;25697;:6;25693:146;;25755:3;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;25734:17;;25750:1;25734:17;:::i;25693:146::-;25825:3;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;25804:17;;25820:1;25804:17;:::i;:::-;25803:25;;;;:::i;:::-;25789:39;;25693:146;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;25867:13;;25853:27;;:11;:27;:::i;:::-;:43;25849:117;;;25942:13;;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;25926:29;;;;:::i;:::-;25912:43;;25849:117;25984:1;25987:11;26000:15;26014:1;25987:11;26000:15;:::i;:::-;25976:40;;;;;;;25369:654;;;:::o;21973:68::-;22013:28;-1:-1:-1;;;21880:21:0;22013:28;:::i;:::-;21973:68;:::o;23318:1558::-;22949:6;;-1:-1:-1;;;;;22949:6:0;22959:10;22949:20;22941:45;;;;-1:-1:-1;;;22941:45:0;;;;;;;:::i;:::-;22013:28:::1;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;23377:13;;:29;23369:69;;;::::0;-1:-1:-1;;;23369:69:0;;5824:2:1;23369:69:0::1;::::0;::::1;5806:21:1::0;5863:2;5843:18;;;5836:30;5902:29;5882:18;;;5875:57;5949:18;;23369:69:0::1;5622:351:1::0;23369:69:0::1;23449:21;23510:7;23474:32;23492:14;23474:15;:32;:::i;:::-;23473:44;;;;:::i;:::-;23449:68;;23551:15;;23535:13;:31;23527:66;;;::::0;-1:-1:-1;;;23527:66:0;;6180:2:1;23527:66:0::1;::::0;::::1;6162:21:1::0;6219:2;6199:18;;;6192:30;-1:-1:-1;;;6238:18:1;;;6231:52;6300:18;;23527:66:0::1;5978:346:1::0;23527:66:0::1;23604:22;23646:9:::0;23658:15:::1;;23676:1;23658:19;;;;:::i;:::-;23646:31;;23641:472;23684:13;23679:1;:18;23641:472;;23727:1;23722;:6;23718:385;;23788:4;22013:28;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;23767:17;::::0;23783:1:::1;23767:17;:::i;:::-;23766:26;;;;:::i;:::-;23748:44;::::0;;::::1;:::i;:::-;;;23718:385;;;23830:1;23825;:6;23821:282;;23891:3;22013:28;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;23870:17;::::0;23886:1:::1;23870:17;:::i;23821:282::-;23930:1;23925;:6;23921:182;;23991:3;22013:28;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;23970:17;::::0;23986:1:::1;23970:17;:::i;23921:182::-;24079:3;22013:28;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;24058:17;::::0;24074:1:::1;24058:17;:::i;:::-;24057:25;;;;:::i;:::-;24039:43;::::0;;::::1;:::i;:::-;;;23921:182;23699:3:::0;::::1;::::0;::::1;:::i;:::-;;;;23641:472;;;-1:-1:-1::0;22013:28:0::1;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;24144:13;::::0;24127:30:::1;::::0;:14;:30:::1;:::i;:::-;:46;24123:159;;;24222:13;::::0;22013:28:::1;-1:-1:-1::0;;;21880:21:0::1;22013:28;:::i;:::-;24206:29;;;;:::i;:::-;24189:46;;24123:159;24317:1;24300:14;:18;24292:48;;;::::0;-1:-1:-1;;;24292:48:0;;6671:2:1;24292:48:0::1;::::0;::::1;6653:21:1::0;6710:2;6690:18;;;6683:30;-1:-1:-1;;;6729:18:1;;;6722:47;6786:18;;24292:48:0::1;6469:341:1::0;24292:48:0::1;24369:13;24351:15;:31;;;;24409:14;24392:13;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;24434:13:0::1;::::0;-1:-1:-1;24450:18:0::1;24467:1;24450:14:::0;:18:::1;:::i;:::-;24504:16;::::0;24434:34;;-1:-1:-1;24479:49:0::1;::::0;24497:4:::1;::::0;-1:-1:-1;;;;;24504:16:0::1;24434:34:::0;24479:9:::1;:49::i;:::-;24563:12;::::0;24538:45:::1;::::0;24556:4:::1;::::0;-1:-1:-1;;;;;24563:12:0::1;24577:5:::0;24538:9:::1;:45::i;:::-;24618:9;::::0;24593:42:::1;::::0;24611:4:::1;::::0;-1:-1:-1;;;;;24618:9:0::1;24629:5:::0;24593:9:::1;:42::i;:::-;24670:13;::::0;24645:46:::1;::::0;24663:4:::1;::::0;-1:-1:-1;;;;;24670:13:0::1;24685:5:::0;24645:9:::1;:46::i;:::-;24726:13;::::0;24701:46:::1;::::0;24719:4:::1;::::0;-1:-1:-1;;;;;24726:13:0::1;24741:5:::0;24701:9:::1;:46::i;:::-;24782:10;::::0;24757:43:::1;::::0;24775:4:::1;::::0;-1:-1:-1;;;;;24782:10:0::1;24794:5:::0;24757:9:::1;:43::i;:::-;24831:15;::::0;24855:13:::1;::::0;24816:53:::1;::::0;;3377:25:1;;;3433:2;3418:18;;3411:34;;;3461:18;;3454:34;24816:53:0::1;::::0;3365:2:1;3350:18;24816:53:0::1;;;;;;;23359:1517;;;23318:1558::o:0;19576:128::-;19660:37;19669:5;19676:7;19685:5;19692:4;19660:8;:37::i;:::-;19576:128;;;:::o;21265:476::-;-1:-1:-1;;;;;14507:18:0;;;21364:24;14507:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21430:36:0;;21426:309;;;21505:5;21486:16;:24;21482:130;;;21537:60;;-1:-1:-1;;;21537:60:0;;-1:-1:-1;;;;;7035:32:1;;21537:60:0;;;7017:51:1;7084:18;;;7077:34;;;7127:18;;;7120:34;;;6990:18;;21537:60:0;6815:345:1;21482:130:0;21653:57;21662:5;21669:7;21697:5;21678:16;:24;21704:5;21653:8;:57::i;:::-;21354:387;21265:476;;;:::o;16243:300::-;-1:-1:-1;;;;;16326:18:0;;16322:86;;16367:30;;-1:-1:-1;;;16367:30:0;;16394:1;16367:30;;;160:51:1;133:18;;16367:30:0;14:203:1;16322:86:0;-1:-1:-1;;;;;16421:16:0;;16417:86;;16460:32;;-1:-1:-1;;;16460:32:0;;16489:1;16460:32;;;160:51:1;133:18;;16460:32:0;14:203:1;16417:86:0;16512:24;16520:4;16526:2;16530:5;16512:7;:24::i;20551:432::-;-1:-1:-1;;;;;20663:19:0;;20659:89;;20705:32;;-1:-1:-1;;;20705:32:0;;20734:1;20705:32;;;160:51:1;133:18;;20705:32:0;14:203:1;20659:89:0;-1:-1:-1;;;;;20761:21:0;;20757:90;;20805:31;;-1:-1:-1;;;20805:31:0;;20833:1;20805:31;;;160:51:1;133:18;;20805:31:0;14:203:1;20757:90:0;-1:-1:-1;;;;;20856:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20901:76;;;;20951:7;-1:-1:-1;;;;;20935:31:0;20944:5;-1:-1:-1;;;;;20935:31:0;;20960:5;20935:31;;;;1466:25:1;;1454:2;1439:18;;1320:177;20935:31:0;;;;;;;;20551:432;;;;:::o;16858:1107::-;-1:-1:-1;;;;;16947:18:0;;16943:540;;17099:5;17083:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16943:540:0;;-1:-1:-1;16943:540:0;;-1:-1:-1;;;;;17157:15:0;;17135:19;17157:15;;;;;;;;;;;17190:19;;;17186:115;;;17236:50;;-1:-1:-1;;;17236:50:0;;-1:-1:-1;;;;;7035:32:1;;17236:50:0;;;7017:51:1;7084:18;;;7077:34;;;7127:18;;;7120:34;;;6990:18;;17236:50:0;6815:345:1;17186:115:0;-1:-1:-1;;;;;17421:15:0;;:9;:15;;;;;;;;;;17439:19;;;;17421:37;;16943:540;-1:-1:-1;;;;;17497:16:0;;17493:425;;17660:12;:21;;;;;;;17493:425;;;-1:-1:-1;;;;;17871:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17493:425;17948:2;-1:-1:-1;;;;;17933:25:0;17942:4;-1:-1:-1;;;;;17933:25:0;;17952:5;17933:25;;;;1466::1;;1454:2;1439:18;;1320:177;17933:25:0;;;;;;;;16858:1107;;;:::o;222:418:1:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;505:6;500:2;492:6;488:15;483:2;472:9;468:18;462:50;561:1;556:2;547:6;536:9;532:22;528:31;521:42;631:2;624;620:7;615:2;607:6;603:15;599:29;588:9;584:45;580:54;572:62;;;222:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:1;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:1:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:1;1827:18;;;;1814:32;;1502:374::o;1881:300::-;1949:6;1957;2010:2;1998:9;1989:7;1985:23;1981:32;1978:52;;;2026:1;2023;2016:12;1978:52;2071:23;;;-1:-1:-1;2137:38:1;2171:2;2156:18;;2137:38;:::i;:::-;2127:48;;1881:300;;;;;:::o;2375:186::-;2434:6;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2526:29;2545:9;2526:29;:::i;:::-;2516:39;2375:186;-1:-1:-1;;;2375:186:1:o;2566:160::-;2631:20;;2687:13;;2680:21;2670:32;;2660:60;;2716:1;2713;2706:12;2731:254;2796:6;2804;2857:2;2845:9;2836:7;2832:23;2828:32;2825:52;;;2873:1;2870;2863:12;2825:52;2896:29;2915:9;2896:29;:::i;:::-;2886:39;;2944:35;2975:2;2964:9;2960:18;2944:35;:::i;2990:180::-;3046:6;3099:2;3087:9;3078:7;3074:23;3070:32;3067:52;;;3115:1;3112;3105:12;3067:52;3138:26;3154:9;3138:26;:::i;3499:260::-;3567:6;3575;3628:2;3616:9;3607:7;3603:23;3599:32;3596:52;;;3644:1;3641;3634:12;3596:52;3667:29;3686:9;3667:29;:::i;:::-;3657:39;;3715:38;3749:2;3738:9;3734:18;3715:38;:::i;3764:380::-;3843:1;3839:12;;;;3886;;;3907:61;;3961:4;3953:6;3949:17;3939:27;;3907:61;4014:2;4006:6;4003:14;3983:18;3980:38;3977:161;;4060:10;4055:3;4051:20;4048:1;4041:31;4095:4;4092:1;4085:15;4123:4;4120:1;4113:15;3977:161;;3764:380;;;:::o;4149:336::-;4351:2;4333:21;;;4390:2;4370:18;;;4363:30;-1:-1:-1;;;4424:2:1;4409:18;;4402:42;4476:2;4461:18;;4149:336::o;4832:127::-;4893:10;4888:3;4884:20;4881:1;4874:31;4924:4;4921:1;4914:15;4948:4;4945:1;4938:15;4964:125;5029:9;;;5050:10;;;5047:36;;;5063:18;;:::i;5094:128::-;5161:9;;;5182:11;;;5179:37;;;5196:18;;:::i;5227:168::-;5300:9;;;5331;;5348:15;;;5342:22;;5328:37;5318:71;;5369:18;;:::i;5400:217::-;5440:1;5466;5456:132;;5510:10;5505:3;5501:20;5498:1;5491:31;5545:4;5542:1;5535:15;5573:4;5570:1;5563:15;5456:132;-1:-1:-1;5602:9:1;;5400:217::o;6329:135::-;6368:3;6389:17;;;6386:43;;6409:18;;:::i;:::-;-1:-1:-1;6456:1:1;6445:13;;6329:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "992600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LOCKED_SUPPLY()": "328",
								"PUBLIC_SUPPLY()": "267",
								"TOTAL_SUPPLY()": "240",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24803",
								"awardBonus()": "2414",
								"balanceOf(address)": "2627",
								"buyingEnabled()": "2437",
								"decimals()": "288",
								"gameTreasury()": "2392",
								"getNextUnlockInfo()": "infinite",
								"isDex(address)": "2574",
								"lastUnlockMonth()": "2339",
								"liquidityListing()": "2393",
								"managers(address)": "2638",
								"marketing()": "2415",
								"name()": "infinite",
								"referralBonus()": "2370",
								"sellingEnabled()": "2392",
								"setBuyingEnabled(bool)": "26782",
								"setDexAddress(address,bool)": "infinite",
								"setManager(address,bool)": "infinite",
								"setSellingEnabled(bool)": "26760",
								"stakingReward()": "2372",
								"startTimestamp()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2393",
								"totalUnlocked()": "2406",
								"transfer(address,uint256)": "51261",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockTokens()": "infinite",
								"updateDistributionAddress(uint256,address)": "26990"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22198,
									"end": 22240,
									"name": "PUSH",
									"source": 0,
									"value": "7EC13697D98925BA1DC2BCC705C071BD168B10C2"
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22164,
									"end": 22240,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22276,
									"end": 22318,
									"name": "PUSH",
									"source": 0,
									"value": "8DE119E98707AC240ABA2CB77E83B29882A34357"
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22246,
									"end": 22318,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22351,
									"end": 22393,
									"name": "PUSH",
									"source": 0,
									"value": "3499C18F7265BE9AFDA16504A34CD1892F278AE"
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22324,
									"end": 22393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22430,
									"end": 22472,
									"name": "PUSH",
									"source": 0,
									"value": "CC234A1D3E32148461B7EACB5A8BF4D0C4B6BE74"
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22399,
									"end": 22472,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22509,
									"end": 22551,
									"name": "PUSH",
									"source": 0,
									"value": "CEEA0E87B553BC445C5EB2242B5F28CD81B4ACAA"
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22478,
									"end": 22551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22557,
									"end": 22627,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 22557,
									"end": 22627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22557,
									"end": 22627,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "PUSH",
									"source": 0,
									"value": "1017E23E2781A1DA5DACE87B4F0E7BF68191263FC32"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22672,
									"end": 22705,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23010,
									"end": 23312,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "212122102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "109091"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12525,
									"end": 12530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12522,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12517,
									"end": 12530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12540,
									"end": 12547,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12550,
									"end": 12557,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12540,
									"end": 12557,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 23060,
									"end": 23066,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 23060,
									"end": 23079,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23069,
									"end": 23079,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23060,
									"end": 23079,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23089,
									"end": 23117,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 23089,
									"end": 23117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 21947,
									"end": 21967,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 23089,
									"end": 23094,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 23089,
									"end": 23117,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23089,
									"end": 23117,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 23089,
									"end": 23117,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23158,
									"end": 23193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23172,
									"end": 23176,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22013,
									"end": 22041,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21947,
									"end": 21967,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 21880,
									"end": 21901,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 22013,
									"end": 22041,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22013,
									"end": 22041,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22013,
									"end": 22041,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22013,
									"end": 22041,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23158,
									"end": 23163,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 23158,
									"end": 23193,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23158,
									"end": 23193,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23158,
									"end": 23193,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23261,
									"end": 23276,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 23244,
									"end": 23276,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23244,
									"end": 23276,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23304,
									"end": 23305,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23286,
									"end": 23301,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 23286,
									"end": 23305,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18451,
									"end": 18452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3066,
									"end": 3117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18490,
									"end": 18491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18494,
									"end": 18501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18503,
									"end": 18508,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18474,
									"end": 18509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17099,
									"end": 17104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17095,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17083,
									"end": 17095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17083,
									"end": 17104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17135,
									"end": 17154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17209,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3478,
									"end": 3510,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3478,
									"end": 3510,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3460,
									"end": 3511,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3545,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3527,
									"end": 3545,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3545,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3554,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3554,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3520,
									"end": 3554,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3433,
									"end": 3451,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3433,
									"end": 3451,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3258,
									"end": 3603,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17430,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17458,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17458,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17458,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17672,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17948,
									"end": 17950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17942,
									"end": 17946,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17952,
									"end": 17957,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3754,
									"end": 3779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3754,
									"end": 3779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3608,
									"end": 3785,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2655,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 2726,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2711,
									"end": 2714,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2707,
									"end": 2727,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2728,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2744,
									"end": 2745,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2737,
									"end": 2752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2775,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2768,
									"end": 2769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2776,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2863,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2872,
									"end": 2909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2872,
									"end": 2909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2872,
									"end": 2909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2889,
									"end": 2907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2889,
									"end": 2907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2787,
									"end": 2915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3128,
									"end": 3253,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3128,
									"end": 3253,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3202,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3193,
									"end": 3202,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3224,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3224,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3247,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3211,
									"end": 3247,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3227,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3227,
									"end": 3245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3608,
									"end": 3785,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3608,
									"end": 3785,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "791"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21808,
									"end": 27303,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e95388c6db252009f371df04c1ef0515db5a51061fad50ad30bf053307c38df464736f6c634300081a0033",
									".code": [
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "CE7842F5"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "E8BE9A44"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "E8BE9A44"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "F771CB65"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "F968F493"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "FDFF9B4D"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "CE7842F5"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "D2F9EFAB"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "E6FD48BC"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "B16D78CF"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "B361412A"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "BE381B85"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "A5E90EEE"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "A779D080"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "3C11E12A"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "8310A74D"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "8310A74D"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "8342083A"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "8DDEDB33"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "8ED2FE91"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "3C11E12A"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "67859B6E"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "7CDF6FB1"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "2BE8781F"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "2D3E474A"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "42249BB"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21808,
											"end": 27303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22399,
											"end": 22472,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12629,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12629,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15626,
											"end": 15870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15626,
											"end": 15870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22324,
											"end": 22393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13639,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13557,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13557,
											"end": 13639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13557,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2186,
											"end": 2370,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22732,
											"end": 22769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22240,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13854,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13919,
											"end": 13926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 26883,
											"end": 26999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26883,
											"end": 26999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21907,
											"end": 21967,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21907,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21907,
											"end": 21967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21907,
											"end": 21967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21907,
											"end": 21967,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26671,
											"end": 26770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26671,
											"end": 26770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22634,
											"end": 22666,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21841,
											"end": 21901,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21841,
											"end": 21901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21841,
											"end": 21901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 21841,
											"end": 21901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21841,
											"end": 21901,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12831,
											"end": 12924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 26555,
											"end": 26665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 26555,
											"end": 26665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22129,
											"end": 22157,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14165,
											"end": 14343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14165,
											"end": 14343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26776,
											"end": 26877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 26776,
											"end": 26877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22557,
											"end": 22627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25369,
											"end": 26023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3175,
											"end": 3494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22478,
											"end": 22551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22246,
											"end": 22318,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 14401,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14518,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22048,
											"end": 22087,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22048,
											"end": 22087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22048,
											"end": 22087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 22048,
											"end": 22087,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 22048,
											"end": 22087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22048,
											"end": 22087,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21973,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22672,
											"end": 22705,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23318,
											"end": 24876,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23318,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23318,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23318,
											"end": 24876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 23318,
											"end": 24876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22775,
											"end": 22815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22775,
											"end": 22815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12674,
											"end": 12687,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12706,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12699,
											"end": 12711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12699,
											"end": 12711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 14998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14975,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15027,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15713,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 15785,
											"end": 15789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15800,
											"end": 15805,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 15769,
											"end": 15806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15806,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 15769,
											"end": 15806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15826,
											"end": 15830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 15816,
											"end": 15842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15842,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 15816,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15626,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22941,
											"end": 22986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24996,
											"end": 24997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24987,
											"end": 24992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 24997,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 24997,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25010,
											"end": 25011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25001,
											"end": 25006,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25011,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 24987,
											"end": 25011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24979,
											"end": 25029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24979,
											"end": 25029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 25029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24979,
											"end": 25029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4711,
											"end": 4729,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4711,
											"end": 4729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840D2DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4803,
											"end": 4821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4490,
											"end": 4827,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24979,
											"end": 25029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25043,
											"end": 25048,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25052,
											"end": 25053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25043,
											"end": 25053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25040,
											"end": 25356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 25040,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25055,
											"end": 25084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25055,
											"end": 25084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25055,
											"end": 25084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25084,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25055,
											"end": 25084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25040,
											"end": 25356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 25040,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25102,
											"end": 25107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25111,
											"end": 25112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25102,
											"end": 25112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25099,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25114,
											"end": 25126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25114,
											"end": 25139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25114,
											"end": 25139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25114,
											"end": 25139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25114,
											"end": 25139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25114,
											"end": 25139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25114,
											"end": 25139,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25114,
											"end": 25139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25114,
											"end": 25139,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25099,
											"end": 25356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25099,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25166,
											"end": 25167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25157,
											"end": 25167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 25154,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25169,
											"end": 25191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25169,
											"end": 25191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25169,
											"end": 25191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25191,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25169,
											"end": 25191,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 25154,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25218,
											"end": 25219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25209,
											"end": 25219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25206,
											"end": 25356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25206,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25221,
											"end": 25247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25221,
											"end": 25247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25221,
											"end": 25247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25247,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25247,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25206,
											"end": 25356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25206,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25265,
											"end": 25270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25274,
											"end": 25275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25265,
											"end": 25275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25262,
											"end": 25356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25262,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25277,
											"end": 25303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25277,
											"end": 25303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25277,
											"end": 25303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25303,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25277,
											"end": 25303,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25262,
											"end": 25356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25262,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25321,
											"end": 25326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25330,
											"end": 25331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25321,
											"end": 25331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 25318,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25333,
											"end": 25343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 25333,
											"end": 25356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25333,
											"end": 25356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25333,
											"end": 25356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25333,
											"end": 25356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25333,
											"end": 25356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25333,
											"end": 25356,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25333,
											"end": 25356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25333,
											"end": 25356,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25318,
											"end": 25356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 25318,
											"end": 25356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26883,
											"end": 26999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22941,
											"end": 22986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 26966,
											"end": 26983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26966,
											"end": 26992,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26966,
											"end": 26992,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 26999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26671,
											"end": 26770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22941,
											"end": 22986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26739,
											"end": 26763,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26739,
											"end": 26763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12878,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12910,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12903,
											"end": 12917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 26555,
											"end": 26665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22941,
											"end": 22986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 26632,
											"end": 26649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26649,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26632,
											"end": 26658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26632,
											"end": 26658,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14234,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14307,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14314,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 14288,
											"end": 14315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 26776,
											"end": 26877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22941,
											"end": 22986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26845,
											"end": 26870,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26845,
											"end": 26870,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25421,
											"end": 25434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25436,
											"end": 25455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25457,
											"end": 25474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25486,
											"end": 25495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25498,
											"end": 25513,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25498,
											"end": 25513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25516,
											"end": 25517,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25498,
											"end": 25517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 25498,
											"end": 25517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25498,
											"end": 25517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25498,
											"end": 25517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25498,
											"end": 25517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25498,
											"end": 25517,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 25498,
											"end": 25517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25486,
											"end": 25517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25486,
											"end": 25517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25538,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25532,
											"end": 25533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 25528,
											"end": 25839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25590,
											"end": 25594,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25569,
											"end": 25586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25569,
											"end": 25586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25569,
											"end": 25586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25569,
											"end": 25586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25569,
											"end": 25586,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25569,
											"end": 25586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25568,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25568,
											"end": 25594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25568,
											"end": 25594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25568,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 25568,
											"end": 25594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25568,
											"end": 25594,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25568,
											"end": 25594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25554,
											"end": 25594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25554,
											"end": 25594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 25528,
											"end": 25839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25528,
											"end": 25839,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 25528,
											"end": 25839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 25621,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25615,
											"end": 25616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25621,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 25611,
											"end": 25839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25673,
											"end": 25676,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25652,
											"end": 25669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25652,
											"end": 25669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25669,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25652,
											"end": 25669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25652,
											"end": 25669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25611,
											"end": 25839,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 25611,
											"end": 25839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25702,
											"end": 25703,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25697,
											"end": 25698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25703,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 25693,
											"end": 25839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25755,
											"end": 25758,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25734,
											"end": 25751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 25734,
											"end": 25751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25750,
											"end": 25751,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25734,
											"end": 25751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25734,
											"end": 25751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25839,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 25693,
											"end": 25839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25828,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25804,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 25804,
											"end": 25821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25820,
											"end": 25821,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25804,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 25804,
											"end": 25821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25804,
											"end": 25821,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 25804,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 25803,
											"end": 25828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 25803,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25789,
											"end": 25828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25789,
											"end": 25828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25839,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 25693,
											"end": 25839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25867,
											"end": 25880,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25867,
											"end": 25880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25853,
											"end": 25880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 25853,
											"end": 25880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25853,
											"end": 25864,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25853,
											"end": 25880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 25853,
											"end": 25880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25853,
											"end": 25880,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 25853,
											"end": 25880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25853,
											"end": 25896,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25849,
											"end": 25966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25849,
											"end": 25966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 25849,
											"end": 25966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25955,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25942,
											"end": 25955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25926,
											"end": 25955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 25926,
											"end": 25955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25926,
											"end": 25955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25926,
											"end": 25955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 25926,
											"end": 25955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25926,
											"end": 25955,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 25926,
											"end": 25955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25912,
											"end": 25955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25849,
											"end": 25966,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 25849,
											"end": 25966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25984,
											"end": 25985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25987,
											"end": 25998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26000,
											"end": 26015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 26014,
											"end": 26015,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25987,
											"end": 25998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26000,
											"end": 26015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 26000,
											"end": 26015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26000,
											"end": 26015,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 26000,
											"end": 26015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25976,
											"end": 26016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25369,
											"end": 26023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 22013,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21973,
											"end": 22041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21973,
											"end": 22041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23318,
											"end": 24876,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 23318,
											"end": 24876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22949,
											"end": 22955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22969,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22949,
											"end": 22969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22941,
											"end": 22986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 22941,
											"end": 22986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23377,
											"end": 23390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23377,
											"end": 23390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23377,
											"end": 23406,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23369,
											"end": 23438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23369,
											"end": 23438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23369,
											"end": 23438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23369,
											"end": 23438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5931,
											"name": "PUSH",
											"source": 1,
											"value": "416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000"
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5622,
											"end": 5973,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 23369,
											"end": 23438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23449,
											"end": 23470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23510,
											"end": 23517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 23474,
											"end": 23506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 23492,
											"end": 23506,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 23474,
											"end": 23489,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 23474,
											"end": 23506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 23474,
											"end": 23506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23474,
											"end": 23506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 23474,
											"end": 23506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23473,
											"end": 23517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 23473,
											"end": 23517,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23473,
											"end": 23517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23473,
											"end": 23517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 23473,
											"end": 23517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23473,
											"end": 23517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 23473,
											"end": 23517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23449,
											"end": 23517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23449,
											"end": 23517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23551,
											"end": 23566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23551,
											"end": 23566,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23535,
											"end": 23548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23535,
											"end": 23566,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23527,
											"end": 23593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23527,
											"end": 23593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23527,
											"end": 23593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23527,
											"end": 23593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206E6577206D6F6E746820746F20756E6C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6300,
											"end": 6318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5978,
											"end": 6324,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 23527,
											"end": 23593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23646,
											"end": 23655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23658,
											"end": 23673,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 23677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23658,
											"end": 23677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 23658,
											"end": 23677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 23658,
											"end": 23677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 23658,
											"end": 23677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23646,
											"end": 23677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23697,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23680,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23679,
											"end": 23697,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23722,
											"end": 23723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23722,
											"end": 23728,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 24103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 23718,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23788,
											"end": 23792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 23767,
											"end": 23784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23783,
											"end": 23784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23767,
											"end": 23784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 23767,
											"end": 23784,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23767,
											"end": 23784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 23767,
											"end": 23784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23766,
											"end": 23792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 23766,
											"end": 23792,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23766,
											"end": 23792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23766,
											"end": 23792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 23766,
											"end": 23792,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23766,
											"end": 23792,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 23766,
											"end": 23792,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 23748,
											"end": 23792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 23748,
											"end": 23792,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23792,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 23748,
											"end": 23792,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23792,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23748,
											"end": 23792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 24103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 23718,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 24103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 23718,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23830,
											"end": 23831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23825,
											"end": 23826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23825,
											"end": 23831,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23821,
											"end": 24103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 23821,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23891,
											"end": 23894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23870,
											"end": 23887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 23870,
											"end": 23887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23886,
											"end": 23887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23870,
											"end": 23887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 23870,
											"end": 23887,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23821,
											"end": 24103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 23821,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23925,
											"end": 23926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23925,
											"end": 23931,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 24103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 23921,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23991,
											"end": 23994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23970,
											"end": 23987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 23970,
											"end": 23987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23986,
											"end": 23987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23970,
											"end": 23987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 23970,
											"end": 23987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 24103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 23921,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24079,
											"end": 24082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24058,
											"end": 24075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 24058,
											"end": 24075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24058,
											"end": 24075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 24058,
											"end": 24075,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24058,
											"end": 24075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 24058,
											"end": 24075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 24057,
											"end": 24082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 24057,
											"end": 24082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24057,
											"end": 24082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 24057,
											"end": 24082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 24039,
											"end": 24082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24039,
											"end": 24082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 24039,
											"end": 24082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24039,
											"end": 24082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 24103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 23921,
											"end": 24103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 23699,
											"end": 23702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 23699,
											"end": 23702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23702,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 23641,
											"end": 24113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24144,
											"end": 24157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24144,
											"end": 24157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24127,
											"end": 24157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 24127,
											"end": 24157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24127,
											"end": 24141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24127,
											"end": 24157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24127,
											"end": 24157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24127,
											"end": 24157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 24127,
											"end": 24157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24127,
											"end": 24173,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24123,
											"end": 24282,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24123,
											"end": 24282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 24123,
											"end": 24282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24222,
											"end": 24235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24222,
											"end": 24235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21880,
											"end": 21901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 22013,
											"end": 22041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 22013,
											"end": 22041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24206,
											"end": 24235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 24206,
											"end": 24235,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24206,
											"end": 24235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24206,
											"end": 24235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 24206,
											"end": 24235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24206,
											"end": 24235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 24206,
											"end": 24235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24189,
											"end": 24235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24189,
											"end": 24235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24123,
											"end": 24282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 24123,
											"end": 24282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24300,
											"end": 24314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24300,
											"end": 24318,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24292,
											"end": 24340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24292,
											"end": 24340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24292,
											"end": 24340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24292,
											"end": 24340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7468696E6720746F20756E6C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6469,
											"end": 6810,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 24292,
											"end": 24340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24369,
											"end": 24382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24351,
											"end": 24366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24351,
											"end": 24382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24351,
											"end": 24382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24351,
											"end": 24382,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24351,
											"end": 24382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24409,
											"end": 24423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24392,
											"end": 24405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24392,
											"end": 24423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 24392,
											"end": 24423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24392,
											"end": 24423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24434,
											"end": 24447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24434,
											"end": 24447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24450,
											"end": 24468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24467,
											"end": 24468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24450,
											"end": 24464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24450,
											"end": 24468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 24450,
											"end": 24468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24450,
											"end": 24468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24450,
											"end": 24468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24504,
											"end": 24520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24434,
											"end": 24468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24434,
											"end": 24468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24479,
											"end": 24528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 24479,
											"end": 24528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24501,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24497,
											"end": 24501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24504,
											"end": 24520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24434,
											"end": 24468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24479,
											"end": 24488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24479,
											"end": 24528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24479,
											"end": 24528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 24479,
											"end": 24528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24563,
											"end": 24575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24563,
											"end": 24575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24538,
											"end": 24583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 24538,
											"end": 24583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24560,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24556,
											"end": 24560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24563,
											"end": 24575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24577,
											"end": 24582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24538,
											"end": 24547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24538,
											"end": 24583,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24538,
											"end": 24583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 24538,
											"end": 24583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24618,
											"end": 24627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24618,
											"end": 24627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24593,
											"end": 24635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 24593,
											"end": 24635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24615,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24611,
											"end": 24615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24618,
											"end": 24627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24629,
											"end": 24634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24593,
											"end": 24602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24593,
											"end": 24635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24593,
											"end": 24635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 24593,
											"end": 24635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24670,
											"end": 24683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24670,
											"end": 24683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24645,
											"end": 24691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 24645,
											"end": 24691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24667,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24663,
											"end": 24667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24670,
											"end": 24683,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24685,
											"end": 24690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24645,
											"end": 24654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24645,
											"end": 24691,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24645,
											"end": 24691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 24645,
											"end": 24691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24726,
											"end": 24739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24726,
											"end": 24739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24701,
											"end": 24747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 24701,
											"end": 24747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24719,
											"end": 24723,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24719,
											"end": 24723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24726,
											"end": 24739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24701,
											"end": 24710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24701,
											"end": 24747,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24701,
											"end": 24747,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 24701,
											"end": 24747,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24782,
											"end": 24792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 24782,
											"end": 24792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 24757,
											"end": 24800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24779,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24782,
											"end": 24792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 24757,
											"end": 24800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 24757,
											"end": 24800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24831,
											"end": 24846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24831,
											"end": 24846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24855,
											"end": 24868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24816,
											"end": 24869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC"
										},
										{
											"begin": 24816,
											"end": 24869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24816,
											"end": 24869,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 24876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 24876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 24876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23318,
											"end": 24876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 19669,
											"end": 19674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19676,
											"end": 19683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19685,
											"end": 19690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19692,
											"end": 19696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19660,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 19660,
											"end": 19697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19697,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 19660,
											"end": 19697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21364,
											"end": 21388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14518,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21430,
											"end": 21466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21430,
											"end": 21466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21505,
											"end": 21510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21486,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21486,
											"end": 21510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6815,
											"end": 7160,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 21662,
											"end": 21667,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21669,
											"end": 21676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21697,
											"end": 21702,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21678,
											"end": 21694,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21678,
											"end": 21702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21653,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 21653,
											"end": 21710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21710,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 21653,
											"end": 21710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16489,
											"end": 16490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 16520,
											"end": 16524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16526,
											"end": 16528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16530,
											"end": 16535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 16512,
											"end": 16536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20734,
											"end": 20735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20833,
											"end": 20834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 20958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20960,
											"end": 20965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17095,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17083,
											"end": 17095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 17083,
											"end": 17104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17209,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7035,
											"end": 7067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6815,
											"end": 7160,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17458,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17672,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 17950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17942,
											"end": 17946,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17952,
											"end": 17957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 222,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 488,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 603,
											"end": 618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 588,
											"end": 597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 584,
											"end": 629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 580,
											"end": 634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2137,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2490,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2526,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2555,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2566,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2702,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2660,
											"end": 2720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2731,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2860,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 2825,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 2915,
											"end": 2924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2896,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 2896,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 2978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2944,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3170,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2990,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3085,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3102,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3067,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3154,
											"end": 3163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3138,
											"end": 3164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3759,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3499,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3626,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3667,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3667,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3715,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 3907,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4006,
											"end": 4012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4017,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4055,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4051,
											"end": 4071,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4099,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4485,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4149,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420616C6C6F77656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4959,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4832,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4903,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4888,
											"end": 4891,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4884,
											"end": 4904,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4924,
											"end": 4928,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4945,
											"end": 4946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4938,
											"end": 4953,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 5089,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4964,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5083,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5047,
											"end": 5083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5063,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5063,
											"end": 5081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5222,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5094,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5193,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5179,
											"end": 5216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5196,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5395,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5227,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5363,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5364,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5365,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5369,
											"end": 5387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5400,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5505,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5501,
											"end": 5521,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5535,
											"end": 5550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5577,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5578,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5456,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6464,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6329,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6386,
											"end": 6429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6409,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6456,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6445,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/assets/BBD_Token_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"LOCKED_SUPPLY()": "e8be9a44",
							"PUBLIC_SUPPLY()": "8342083a",
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"awardBonus()": "b361412a",
							"balanceOf(address)": "70a08231",
							"buyingEnabled()": "8ed2fe91",
							"decimals()": "313ce567",
							"gameTreasury()": "d2f9efab",
							"getNextUnlockInfo()": "be381b85",
							"isDex(address)": "3c11e12a",
							"lastUnlockMonth()": "8310a74d",
							"liquidityListing()": "67859b6e",
							"managers(address)": "fdff9b4d",
							"marketing()": "2d3e474a",
							"name()": "06fdde03",
							"referralBonus()": "ce7842f5",
							"sellingEnabled()": "f771cb65",
							"setBuyingEnabled(bool)": "8ddedb33",
							"setDexAddress(address,bool)": "7cdf6fb1",
							"setManager(address,bool)": "a5e90eee",
							"setSellingEnabled(bool)": "b16d78cf",
							"stakingReward()": "042249bb",
							"startTimestamp()": "e6fd48bc",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalUnlocked()": "a779d080",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockTokens()": "f968f493",
							"updateDistributionAddress(uint256,address)": "2be8781f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPerWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUnlocked\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LOCKED_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"awardBonus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextUnlockInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"perWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUnlockMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralBonus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setBuyingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setDexAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setSellingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateDistributionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"BBDToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "lastUnlockMonth",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 795,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "totalUnlocked",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 798,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "liquidityListing",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 801,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "gameTreasury",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 804,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "marketing",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 807,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "stakingReward",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 810,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "referralBonus",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 813,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "awardBonus",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 816,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "buyingEnabled",
								"offset": 20,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 819,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "sellingEnabled",
								"offset": 21,
								"slot": "12",
								"type": "t_bool"
							},
							{
								"astId": 821,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "_owner",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 825,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "isDex",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 829,
								"contract": "src/assets/BBD_Token_flattened.sol:BBDToken",
								"label": "managers",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "src/assets/BBD_Token_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "src/assets/BBD_Token_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "src/assets/BBD_Token_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "src/assets/BBD_Token_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "src/assets/BBD_Token_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/assets/BBD_Token_flattened.sol\":{\"keccak256\":\"0xf94b47f34082433428529a09431c72de3d5d2a9b2425b244dabf9f0d2b770014\",\"urls\":[\"bzz-raw://27d43d113971547cd7cd16c5fe94ddb74997a8ddb5724298324318910366cc00\",\"dweb:/ipfs/QmeaAvua36CVqQFKngQ7ugVDBymARq5gZQLA2YjxzhwSpP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> src/assets/BBD_Token_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "src/assets/BBD_Token_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"src/assets/BBD_Token_flattened.sol": {
				"ast": {
					"absolutePath": "src/assets/BBD_Token_flattened.sol",
					"exportedSymbols": {
						"BBDToken": [
							1338
						],
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						]
					},
					"id": 1339,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "159:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "241:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "423:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "432:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "470:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "454:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:57:0"
									},
									"src": "417:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "495:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "654:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "719:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "711:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:63:0"
									},
									"src": "648:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "732:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "811:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:9:0"
									},
									"scope": 77,
									"src": "802:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "966:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:9:0"
									},
									"scope": 77,
									"src": "939:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1013:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1240:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1294:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:6:0"
									},
									"scope": 77,
									"src": "1231:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1306:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1584:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1617:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:9:0"
									},
									"scope": 77,
									"src": "1575:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1664:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2345:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2403:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2402:6:0"
									},
									"scope": 77,
									"src": "2336:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2415:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2726:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2753:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:6:0"
									},
									"scope": 77,
									"src": "2717:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1339,
							"src": "231:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2978:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3121:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3121:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3121:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3005:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3103:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3134:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3202:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3232:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:15:0"
									},
									"scope": 100,
									"src": "3193:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3253:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3323:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3355:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:15:0"
									},
									"scope": 100,
									"src": "3314:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3376:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3455:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3463:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3489:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:7:0"
									},
									"scope": 100,
									"src": "3446:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1339,
							"src": "3093:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3622:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3648:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4163:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4239:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4256:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4260:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4256:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4249:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4186:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4196:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:9:0"
									},
									"scope": 129,
									"src": "4177:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4346:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4363:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4367:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4363:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4356:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4288:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4330:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4329:16:0"
									},
									"scope": 129,
									"src": "4279:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4456:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4473:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4466:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4393:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4447:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:9:0"
									},
									"scope": 129,
									"src": "4384:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "4145:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4630:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4656:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4808:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4827:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5147:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5196:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5188:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5213:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:49:0"
									},
									"src": "5141:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5227:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5390:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:16:0"
									},
									"src": "5384:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5431:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5601:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5630:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5622:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:18:0"
									},
									"src": "5595:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5646:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6002:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6037:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6029:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6054:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6046:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6065:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:52:0"
									},
									"src": "5996:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6087:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6272:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6293:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:18:0"
									},
									"src": "6266:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6317:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6523:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6542:17:0"
									},
									"src": "6517:43:0"
								}
							],
							"scope": 1339,
							"src": "4798:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6564:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6718:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6738:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6968:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6986:15:0"
									},
									"src": "6962:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7008:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7151:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7182:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7174:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7173:17:0"
									},
									"src": "7145:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7197:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7497:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7542:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7559:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7551:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7517:48:0"
									},
									"src": "7491:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7572:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7735:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7754:16:0"
									},
									"src": "7729:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7777:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7947:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7977:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7969:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7968:18:0"
									},
									"src": "7941:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7993:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8251:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8286:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8278:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8277:35:0"
									},
									"src": "8245:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8319:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8504:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8526:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8525:18:0"
									},
									"src": "8498:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8550:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8758:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8788:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8780:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8779:18:0"
									},
									"src": "8752:46:0"
								}
							],
							"scope": 1339,
							"src": "6708:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8802:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8958:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8979:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9351:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9386:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9378:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9377:66:0"
									},
									"src": "9345:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9450:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9613:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9642:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9633:16:0"
									},
									"src": "9607:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9656:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9826:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9849:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9848:18:0"
									},
									"src": "9820:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9873:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10140:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10177:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10169:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10195:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10187:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:33:0"
									},
									"src": "10134:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10208:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10393:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10424:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10416:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10415:18:0"
									},
									"src": "10387:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10440:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10648:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10679:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10671:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:18:0"
									},
									"src": "10642:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10695:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10986:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11020:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11012:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11039:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11031:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11011:41:0"
									},
									"src": "10980:73:0"
								}
							],
							"scope": 1339,
							"src": "8948:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11187:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12002:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12002:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12002:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12011:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12011:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12011:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12019:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12019:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12019:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12035:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12035:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12035:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11217:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "11993:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12098:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12054:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12070:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12062:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12054:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12081:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12186:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12114:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12130:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12114:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12157:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12149:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12141:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12220:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12204:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12204:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12254:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12239:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12239:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12280:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12265:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12265:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12507:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12517:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12517:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12517:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12540:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12540:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12294:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12463:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12484:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12484:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12462:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12507:0:0"
									},
									"scope": 771,
									"src": "12451:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12689:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12699:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12570:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12638:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12642:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12674:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12673:15:0"
									},
									"scope": 771,
									"src": "12629:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12893:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12903:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12724:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12840:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12846:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12878:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12877:15:0"
									},
									"scope": 771,
									"src": "12831:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13613:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13630:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13623:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12930:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13566:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13574:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13606:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13605:7:0"
									},
									"scope": 771,
									"src": "13557:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13760:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13777:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13770:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13645:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13708:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13719:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13750:9:0"
									},
									"scope": 771,
									"src": "13699:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13928:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13945:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13945:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13938:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13802:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13863:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13881:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13873:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13872:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13919:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13918:9:0"
									},
									"scope": 771,
									"src": "13854:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14240:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14258:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14250:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14250:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14266:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14266:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14250:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14298:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14305:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14309:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14288:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14288:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14288:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14325:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "13976:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14174:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14191:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14183:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14203:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14195:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14234:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14233:6:0"
									},
									"scope": 771,
									"src": "14165:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14490:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14507:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14519:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14507:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14507:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14500:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14349:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14410:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14443:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14435:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14419:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14480:9:0"
									},
									"scope": 771,
									"src": "14401:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14927:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14945:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14937:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14937:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14953:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14953:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14937:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "14984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "14991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "14975:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14975:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "14975:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15016:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14547:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14857:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14873:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14890:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14882:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14864:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14921:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14920:6:0"
									},
									"scope": 771,
									"src": "14848:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15719:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15737:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15729:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15729:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15747:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15747:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15729:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15785:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15800:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15769:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15769:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15769:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15832:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15816:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15816:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15816:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15852:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15040:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15635:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15656:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15648:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15670:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15662:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15647:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15713:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15713:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15712:6:0"
									},
									"scope": 771,
									"src": "15626:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16312:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16326:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16342:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16334:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16334:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16326:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16322:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16346:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16394:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16386:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16386:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16386:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16367:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16367:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16360:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16421:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16427:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16427:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16421:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16417:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16439:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16481:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16481:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16481:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16460:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16460:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16453:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16520:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16526:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16530:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16512:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16512:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15876:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16252:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16284:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16276:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16288:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16261:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16312:0:0"
									},
									"scope": 771,
									"src": "16243:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16933:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16955:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16955:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16947:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17121:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17143:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17135:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17135:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17157:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17167:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17157:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17135:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17190:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17204:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17190:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17186:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17211:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17261:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17267:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17236:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17236:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17229:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17314:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17421:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17431:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17421:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17439:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17453:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17439:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17421:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17421:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16943:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16967:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17083:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17083:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17083:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17497:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17503:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17503:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17497:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17712:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17726:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17871:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17881:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17871:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17888:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17871:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17871:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17493:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17515:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17529:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17660:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17676:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17660:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17660:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17942:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17948:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17952:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17933:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17933:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17928:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16549:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16867:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16875:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16897:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16889:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16909:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16901:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16874:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16933:0:0"
									},
									"scope": 771,
									"src": "16858:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18364:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18397:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18389:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18389:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18378:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18374:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18401:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18451:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18443:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18443:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18443:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18422:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18422:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18415:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18482:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18482:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18482:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18494:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18474:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18474:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "17971:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18317:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18331:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18323:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18322:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18364:0:0"
									},
									"scope": 771,
									"src": "18308:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18890:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18915:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18915:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18904:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18900:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18927:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18975:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18967:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18967:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18967:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18948:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18948:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18941:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19015:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19015:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19015:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18998:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "18998:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18522:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18843:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18874:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18866:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18848:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18890:0:0"
									},
									"scope": 771,
									"src": "18834:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19650:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19669:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19692:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19660:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19660:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19660:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19046:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19585:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19617:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19593:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19650:0:0"
									},
									"scope": 771,
									"src": "19576:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20649:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20663:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20680:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20672:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20672:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20663:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20659:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20684:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20734:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20726:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20726:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20726:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20705:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20705:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20698:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20780:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20772:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20772:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20761:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20757:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20784:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20833:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20825:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20825:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20825:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20805:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20805:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20798:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20856:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20868:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20856:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20856:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20886:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20856:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20856:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20905:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20901:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20916:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20944:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20951:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20960:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20935:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20935:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20930:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19710:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20560:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20569:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20592:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20584:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20621:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20568:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20649:0:0"
									},
									"scope": 771,
									"src": "20551:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21354:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21372:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21364:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21401:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21391:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21391:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21364:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21430:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21454:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21454:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21449:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21449:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21463:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21449:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21430:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21426:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21468:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21486:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21486:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21482:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21512:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21564:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21573:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21591:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21537:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21537:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21530:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21625:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21662:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21669:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21678:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21697:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21678:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21704:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21653:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21653:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21653:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "20989:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21274:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21313:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21330:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21322:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21289:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21354:0:0"
									},
									"scope": 771,
									"src": "21265:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "11975:9768:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21781:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "ERC20",
										"nameLocations": [
											"21829:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "21829:5:0"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "21829:5:0"
								}
							],
							"canonicalName": "BBDToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338,
								771,
								170,
								100,
								77,
								129
							],
							"name": "BBDToken",
							"nameLocation": "21817:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 779,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "21865:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "21841:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 775,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21841:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										},
										"id": 778,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f3030305f303030",
											"id": 776,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "21880:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "10_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 777,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "21897:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "21880:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8342083a",
									"id": 784,
									"mutability": "constant",
									"name": "PUBLIC_SUPPLY",
									"nameLocation": "21931:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "21907:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 780,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21907:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 781,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "21947:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 782,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "21963:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "21947:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e8be9a44",
									"id": 789,
									"mutability": "constant",
									"name": "LOCKED_SUPPLY",
									"nameLocation": "21997:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "21973:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "21973:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 786,
											"name": "TOTAL_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 779,
											"src": "22013:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"id": 787,
											"name": "PUBLIC_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 784,
											"src": "22028:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "22013:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fd48bc",
									"id": 791,
									"mutability": "immutable",
									"name": "startTimestamp",
									"nameLocation": "22073:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22048:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 790,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22048:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8310a74d",
									"id": 793,
									"mutability": "mutable",
									"name": "lastUnlockMonth",
									"nameLocation": "22108:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22093:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 792,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22093:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a779d080",
									"id": 795,
									"mutability": "mutable",
									"name": "totalUnlocked",
									"nameLocation": "22144:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22129:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22129:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67859b6e",
									"id": 798,
									"mutability": "mutable",
									"name": "liquidityListing",
									"nameLocation": "22179:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22164:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 796,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22164:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837456331333639374439383932356241316443324263433730356330373162643136384231304332",
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22198:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d2f9efab",
									"id": 801,
									"mutability": "mutable",
									"name": "gameTreasury",
									"nameLocation": "22261:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22246:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 799,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22246:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838646531313965393837303741633234306162413263423737453833423239383832413334333537",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22276:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8de119e98707Ac240abA2cB77E83B29882A34357"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d3e474a",
									"id": 804,
									"mutability": "mutable",
									"name": "marketing",
									"nameLocation": "22339:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22324:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 802,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22324:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830333439394331384637323635424539414644413136353034413334434431383932463237384145",
										"id": 803,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22351:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x03499C18F7265BE9AFDA16504A34CD1892F278AE"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "042249bb",
									"id": 807,
									"mutability": "mutable",
									"name": "stakingReward",
									"nameLocation": "22414:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22399:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 805,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22399:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863633233346131643365333231343834363162376561436235613862663444304334623642653734",
										"id": 806,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22430:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce7842f5",
									"id": 810,
									"mutability": "mutable",
									"name": "referralBonus",
									"nameLocation": "22493:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22478:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 808,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22478:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843654541304538374235353362633434354335456232323432623546323843643831423441436141",
										"id": 809,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22509:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b361412a",
									"id": 813,
									"mutability": "mutable",
									"name": "awardBonus",
									"nameLocation": "22572:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22557:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 811,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22557:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837453233453237383161314461354441436538376234663065376266363831393132363346633332",
										"id": 812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22585:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ed2fe91",
									"id": 816,
									"mutability": "mutable",
									"name": "buyingEnabled",
									"nameLocation": "22646:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22634:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 814,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "22634:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22662:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f771cb65",
									"id": 819,
									"mutability": "mutable",
									"name": "sellingEnabled",
									"nameLocation": "22684:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22672:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 817,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "22672:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22701:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 821,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22720:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22712:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 820,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22712:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3c11e12a",
									"id": 825,
									"mutability": "mutable",
									"name": "isDex",
									"nameLocation": "22764:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22732:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 824,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22740:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22732:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "22751:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdff9b4d",
									"id": 829,
									"mutability": "mutable",
									"name": "managers",
									"nameLocation": "22807:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1338,
									"src": "22775:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 828,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 826,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22783:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22775:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 827,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "22794:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac",
									"id": 837,
									"name": "TokensUnlocked",
									"nameLocation": "22828:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "22851:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "22843:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPerWallet",
												"nameLocation": "22866:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "22858:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUnlocked",
												"nameLocation": "22891:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "22883:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22842:63:0"
									},
									"src": "22822:84:0"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "22931:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "22949:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 841,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "22959:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22963:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "22959:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22949:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656421",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22971:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127",
																"typeString": "literal_string \"Not allowed!\""
															},
															"value": "Not allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_979b4c7dcccc63b5a6fa2aa9d64d100e0dc7ed98f38a98312f5f2dd8c28ea127",
																"typeString": "literal_string \"Not allowed!\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22941:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "22941:45:0"
											},
											{
												"id": 847,
												"nodeType": "PlaceholderStatement",
												"src": "22996:1:0"
											}
										]
									},
									"id": 849,
									"name": "isOwner",
									"nameLocation": "22921:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22928:2:0"
									},
									"src": "22912:92:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "23050:262:0",
										"statements": [
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "23060:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 857,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "23069:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23073:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "23069:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23060:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "23060:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 862,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "23095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "PUBLIC_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "23103:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "23089:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23089:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "23089:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 869,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "23172:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23164:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 867,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23164:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23164:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "LOCKED_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "23179:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "23158:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23158:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "23158:35:0"
											},
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "23244:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 875,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "23261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23267:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "23261:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23244:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "23244:32:0"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 879,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "23286:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23286:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "23286:19:0"
											}
										]
									},
									"id": 884,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42424420546f6b656e",
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23030:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_967d686aff54b80901cec9b110d19a7eace42eeff791cc1cda6a0484e3c90564",
														"typeString": "literal_string \"BBD Token\""
													},
													"value": "BBD Token"
												},
												{
													"hexValue": "424244",
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23043:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_62efa472771d791c354b2c18397e13fe87ea362a768ddf9ceed6c93a3ebbfefe",
														"typeString": "literal_string \"BBD\""
													},
													"value": "BBD"
												}
											],
											"id": 854,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 851,
												"name": "ERC20",
												"nameLocations": [
													"23024:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "23024:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23024:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23021:2:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23050:0:0"
									},
									"scope": 1338,
									"src": "23010:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "23359:1517:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "totalUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "23377:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 891,
																"name": "LOCKED_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "23393:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23377:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e7320616c726561647920756e6c6f636b6564",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23408:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0",
																"typeString": "literal_string \"All tokens already unlocked\""
															},
															"value": "All tokens already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0",
																"typeString": "literal_string \"All tokens already unlocked\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23369:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "23369:69:0"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "monthsElapsed",
														"nameLocation": "23457:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "23449:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 898,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "23474:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23480:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "23474:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 900,
																	"name": "startTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "23492:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23474:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 902,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "23473:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23510:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "23473:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23449:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 907,
																"name": "monthsElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "23535:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 908,
																"name": "lastUnlockMonth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "23551:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23535:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206e6577206d6f6e746820746f20756e6c6f636b",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23568:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c",
																"typeString": "literal_string \"No new month to unlock\""
															},
															"value": "No new month to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c",
																"typeString": "literal_string \"No new month to unlock\""
															}
														],
														"id": 906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23527:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "23527:66:0"
											},
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "tokensToUnlock",
														"nameLocation": "23612:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "23604:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"hexValue": "30",
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23629:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23604:26:0"
											},
											{
												"body": {
													"id": 981,
													"nodeType": "Block",
													"src": "23704:409:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 929,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "23722:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23727:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "23722:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 942,
																		"name": "m",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "23825:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "36",
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23830:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6_by_1",
																			"typeString": "int_const 6"
																		},
																		"value": "6"
																	},
																	"src": "23825:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 955,
																			"name": "m",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 918,
																			"src": "23925:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "39",
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23930:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_9_by_1",
																				"typeString": "int_const 9"
																			},
																			"value": "9"
																		},
																		"src": "23925:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 977,
																		"nodeType": "Block",
																		"src": "24021:82:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 975,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 968,
																						"name": "tokensToUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 914,
																						"src": "24039:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 974,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 971,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 969,
																										"name": "LOCKED_SUPPLY",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 789,
																										"src": "24058:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "33",
																										"id": 970,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "24074:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_3_by_1",
																											"typeString": "int_const 3"
																										},
																										"value": "3"
																									},
																									"src": "24058:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 972,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "24057:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 973,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24079:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "24057:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24039:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 976,
																				"nodeType": "ExpressionStatement",
																				"src": "24039:43:0"
																			}
																		]
																	},
																	"id": 978,
																	"nodeType": "IfStatement",
																	"src": "23921:182:0",
																	"trueBody": {
																		"id": 967,
																		"nodeType": "Block",
																		"src": "23933:82:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 965,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 958,
																						"name": "tokensToUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 914,
																						"src": "23951:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 964,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 961,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 959,
																										"name": "LOCKED_SUPPLY",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 789,
																										"src": "23970:13:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "32",
																										"id": 960,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "23986:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "23970:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 962,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "23969:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 963,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "23991:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "23969:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23951:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 966,
																				"nodeType": "ExpressionStatement",
																				"src": "23951:43:0"
																			}
																		]
																	}
																},
																"id": 979,
																"nodeType": "IfStatement",
																"src": "23821:282:0",
																"trueBody": {
																	"id": 954,
																	"nodeType": "Block",
																	"src": "23833:82:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 945,
																					"name": "tokensToUnlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 914,
																					"src": "23851:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 948,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 946,
																									"name": "LOCKED_SUPPLY",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 789,
																									"src": "23870:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 947,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "23886:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "23870:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 949,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "23869:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 950,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23891:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "23869:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23851:43:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 953,
																			"nodeType": "ExpressionStatement",
																			"src": "23851:43:0"
																		}
																	]
																}
															},
															"id": 980,
															"nodeType": "IfStatement",
															"src": "23718:385:0",
															"trueBody": {
																"id": 941,
																"nodeType": "Block",
																"src": "23730:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 932,
																				"name": "tokensToUnlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "23748:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 935,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 933,
																								"name": "LOCKED_SUPPLY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 789,
																								"src": "23767:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "35",
																								"id": 934,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23783:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "23767:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 936,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23766:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23788:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "23766:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23748:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 940,
																		"nodeType": "ExpressionStatement",
																		"src": "23748:44:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "23679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 924,
														"name": "monthsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "23684:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23679:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"initializationExpression": {
													"assignments": [
														918
													],
													"declarations": [
														{
															"constant": false,
															"id": 918,
															"mutability": "mutable",
															"name": "m",
															"nameLocation": "23654:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 982,
															"src": "23646:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 917,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 922,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 919,
															"name": "lastUnlockMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "23658:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23676:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "23658:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "23646:31:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "23699:3:0",
														"subExpression": {
															"id": 926,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "23699:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"nodeType": "ExpressionStatement",
													"src": "23699:3:0"
												},
												"nodeType": "ForStatement",
												"src": "23641:472:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 983,
															"name": "tokensToUnlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "24127:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 984,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "24144:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "24127:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 986,
														"name": "LOCKED_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "24160:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24127:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "24123:159:0",
												"trueBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "24175:107:0",
													"statements": [
														{
															"expression": {
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 988,
																	"name": "tokensToUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "24189:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 989,
																		"name": "LOCKED_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "24206:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 990,
																		"name": "totalUnlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "24222:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "24206:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24189:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "24189:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 997,
																"name": "tokensToUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "24300:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24300:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20756e6c6f636b",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24320:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375",
																"typeString": "literal_string \"Nothing to unlock\""
															},
															"value": "Nothing to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375",
																"typeString": "literal_string \"Nothing to unlock\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24292:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "24292:48:0"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1003,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24351:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1004,
														"name": "monthsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "24369:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24351:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "24351:31:0"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "totalUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "24392:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1008,
														"name": "tokensToUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "24409:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24392:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "24392:31:0"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "share",
														"nameLocation": "24442:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "24434:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "tokensToUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "24450:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "36",
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "24450:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24434:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1020,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24497:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24489:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1018,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24489:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24489:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "liquidityListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "24504:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24522:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "24479:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24479:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "24479:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1029,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24556:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24548:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24548:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24548:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "gameTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "24563:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24577:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "24538:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24538:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "24538:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1038,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24611:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24603:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24603:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "marketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "24618:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "24593:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24593:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24593:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1047,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24663:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24655:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1045,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24655:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24655:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "24670:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "24645:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24645:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "24645:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1056,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24719:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24711:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24711:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24711:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "referralBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "24726:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24741:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "24701:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24701:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "24701:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1065,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24775:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1338",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24767:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24767:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "awardBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "24782:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24794:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1062,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "24757:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24757:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "24757:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "lastUnlockMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "24831:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1073,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "24848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "24855:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "24816:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24816:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "EmitStatement",
												"src": "24811:58:0"
											}
										]
									},
									"functionSelector": "f968f493",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 886,
												"name": "isOwner",
												"nameLocations": [
													"23351:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 849,
												"src": "23351:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23351:7:0"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "23327:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23339:2:0"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23359:0:0"
									},
									"scope": 1338,
									"src": "23318:1558:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "24969:394:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1088,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "24987:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24996:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24987:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1091,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "25001:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "36",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25010:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"src": "25001:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24987:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e646578",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25013:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															},
															"value": "Invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24979:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "24979:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "25043:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25052:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25043:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1105,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "25102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "25102:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1112,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "25157:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25166:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "25157:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1119,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "25209:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25218:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25209:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1126,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "25265:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25274:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "25265:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1133,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1080,
																			"src": "25321:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25330:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "25321:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1140,
																	"nodeType": "IfStatement",
																	"src": "25318:38:0",
																	"trueBody": {
																		"expression": {
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1136,
																				"name": "awardBonus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 813,
																				"src": "25333:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1137,
																				"name": "newAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1082,
																				"src": "25346:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "25333:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1139,
																		"nodeType": "ExpressionStatement",
																		"src": "25333:23:0"
																	}
																},
																"id": 1141,
																"nodeType": "IfStatement",
																"src": "25262:94:0",
																"trueBody": {
																	"expression": {
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1129,
																			"name": "referralBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 810,
																			"src": "25277:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1130,
																			"name": "newAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "25293:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "25277:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "25277:26:0"
																}
															},
															"id": 1142,
															"nodeType": "IfStatement",
															"src": "25206:150:0",
															"trueBody": {
																"expression": {
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1122,
																		"name": "stakingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "25221:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1123,
																		"name": "newAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "25237:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "25221:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1125,
																"nodeType": "ExpressionStatement",
																"src": "25221:26:0"
															}
														},
														"id": 1143,
														"nodeType": "IfStatement",
														"src": "25154:202:0",
														"trueBody": {
															"expression": {
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1115,
																	"name": "marketing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "25169:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1116,
																	"name": "newAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "25181:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "25169:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "25169:22:0"
														}
													},
													"id": 1144,
													"nodeType": "IfStatement",
													"src": "25099:257:0",
													"trueBody": {
														"expression": {
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1108,
																"name": "gameTreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "25114:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1109,
																"name": "newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "25129:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25114:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1111,
														"nodeType": "ExpressionStatement",
														"src": "25114:25:0"
													}
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "25040:316:0",
												"trueBody": {
													"expression": {
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1101,
															"name": "liquidityListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "25055:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1102,
															"name": "newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "25074:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "25055:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1104,
													"nodeType": "ExpressionStatement",
													"src": "25055:29:0"
												}
											}
										]
									},
									"functionSelector": "2be8781f",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1085,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1084,
												"name": "isOwner",
												"nameLocations": [
													"24961:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 849,
												"src": "24961:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24961:7:0"
										}
									],
									"name": "updateDistributionAddress",
									"nameLocation": "24891:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "24925:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "24917:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "24940:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "24932:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24916:35:0"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24969:0:0"
									},
									"scope": 1338,
									"src": "24882:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "25476:547:0",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "25494:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "25486:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1158,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "25498:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25516:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25498:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25486:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1162,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "25532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "33",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25537:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "25532:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1175,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "25615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "36",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25620:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "25615:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "25697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "25697:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1210,
															"nodeType": "Block",
															"src": "25775:64:0",
															"statements": [
																{
																	"expression": {
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1201,
																			"name": "amountTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1152,
																			"src": "25789:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1204,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1202,
																							"name": "LOCKED_SUPPLY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 789,
																							"src": "25804:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "33",
																							"id": 1203,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "25820:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3_by_1",
																								"typeString": "int_const 3"
																							},
																							"value": "3"
																						},
																						"src": "25804:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1205,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "25803:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25825:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "25803:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25789:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1209,
																	"nodeType": "ExpressionStatement",
																	"src": "25789:39:0"
																}
															]
														},
														"id": 1211,
														"nodeType": "IfStatement",
														"src": "25693:146:0",
														"trueBody": {
															"id": 1200,
															"nodeType": "Block",
															"src": "25705:64:0",
															"statements": [
																{
																	"expression": {
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1191,
																			"name": "amountTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1152,
																			"src": "25719:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1192,
																							"name": "LOCKED_SUPPLY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 789,
																							"src": "25734:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 1193,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "25750:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "25734:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1195,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "25733:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25755:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "25733:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25719:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1199,
																	"nodeType": "ExpressionStatement",
																	"src": "25719:39:0"
																}
															]
														}
													},
													"id": 1212,
													"nodeType": "IfStatement",
													"src": "25611:228:0",
													"trueBody": {
														"id": 1187,
														"nodeType": "Block",
														"src": "25623:64:0",
														"statements": [
															{
																"expression": {
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1178,
																		"name": "amountTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "25637:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1179,
																						"name": "LOCKED_SUPPLY",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 789,
																						"src": "25652:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25668:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "25652:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1182,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "25651:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25673:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "25651:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25637:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1186,
																"nodeType": "ExpressionStatement",
																"src": "25637:39:0"
															}
														]
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "25528:311:0",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "25540:65:0",
													"statements": [
														{
															"expression": {
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1165,
																	"name": "amountTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "25554:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1166,
																					"name": "LOCKED_SUPPLY",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "25569:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25585:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "25569:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1169,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "25568:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25590:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "25568:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25554:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1173,
															"nodeType": "ExpressionStatement",
															"src": "25554:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1214,
															"name": "amountTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "25853:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1215,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "25867:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25853:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1217,
														"name": "LOCKED_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "25883:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25853:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "25849:117:0",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "25898:68:0",
													"statements": [
														{
															"expression": {
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1219,
																	"name": "amountTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "25912:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1220,
																		"name": "LOCKED_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "25926:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1221,
																		"name": "totalUnlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "25942:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25926:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25912:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "25912:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1227,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "25984:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1228,
															"name": "amountTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "25987:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "amountTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "26000:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "36",
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "26000:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1232,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "25983:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1233,
												"nodeType": "Return",
												"src": "25976:40:0"
											}
										]
									},
									"functionSelector": "be381b85",
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextUnlockInfo",
									"nameLocation": "25378:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25395:2:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "25429:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "25421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amountTotal",
												"nameLocation": "25444:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "25436:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "perWallet",
												"nameLocation": "25465:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "25457:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25420:55:0"
									},
									"scope": 1338,
									"src": "25369:654:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "26086:463:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1241,
															"name": "isDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "26181:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1243,
														"indexExpression": {
															"id": 1242,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "26187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26181:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "26198:14:0",
														"subExpression": {
															"id": 1244,
															"name": "buyingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "26199:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26181:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "IfStatement",
												"src": "26177:135:0",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "26214:98:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1248,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "26236:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1249,
																				"name": "_owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "26249:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "26236:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1251,
																				"name": "managers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "26259:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1253,
																			"indexExpression": {
																				"id": 1252,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "26268:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "26259:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26236:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "427579696e672069732064697361626c6564",
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26280:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b",
																			"typeString": "literal_string \"Buying is disabled\""
																		},
																		"value": "Buying is disabled"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1d895cc7504d7751b3a8338d54d3c577acdfde506f6986fa99080a4a8d3b0e4b",
																			"typeString": "literal_string \"Buying is disabled\""
																		}
																	],
																	"id": 1247,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "26228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26228:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "26228:73:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1260,
															"name": "isDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "26402:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1261,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "26408:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26402:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "26422:15:0",
														"subExpression": {
															"id": 1263,
															"name": "sellingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "26423:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26402:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1278,
												"nodeType": "IfStatement",
												"src": "26398:134:0",
												"trueBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "26439:93:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1267,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1237,
																				"src": "26461:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1268,
																				"name": "_owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "26471:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "26461:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1270,
																				"name": "managers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "26481:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1272,
																			"indexExpression": {
																				"id": 1271,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1237,
																				"src": "26490:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "26481:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26461:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656c6c696e672069732064697361626c6564",
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26499:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e",
																			"typeString": "literal_string \"Selling is disabled\""
																		},
																		"value": "Selling is disabled"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e7dfdfffd237c20d04bd125d860d47717509b3b50a1aa09f2870bb1eef42b95e",
																			"typeString": "literal_string \"Selling is disabled\""
																		}
																	],
																	"id": 1266,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "26453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26453:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "26453:68:0"
														}
													]
												}
											},
											{
												"id": 1279,
												"nodeType": "PlaceholderStatement",
												"src": "26541:1:0"
											}
										]
									},
									"id": 1281,
									"name": "canTransfer",
									"nameLocation": "26039:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "26059:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "26051:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "26075:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "26067:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26050:35:0"
									},
									"src": "26030:519:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "26622:43:0",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1290,
															"name": "managers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "26632:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1292,
														"indexExpression": {
															"id": 1291,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "26641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26632:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1293,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "26652:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26632:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "26632:26:0"
											}
										]
									},
									"functionSelector": "a5e90eee",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "isOwner",
												"nameLocations": [
													"26614:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 849,
												"src": "26614:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26614:7:0"
										}
									],
									"name": "setManager",
									"nameLocation": "26564:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "26583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "26575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "26597:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "26592:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26574:30:0"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26622:0:0"
									},
									"scope": 1338,
									"src": "26555:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "26729:41:0",
										"statements": [
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "buyingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "26739:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1305,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "26755:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26739:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "26739:24:0"
											}
										]
									},
									"functionSelector": "8ddedb33",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "isOwner",
												"nameLocations": [
													"26721:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 849,
												"src": "26721:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26721:7:0"
										}
									],
									"name": "setBuyingEnabled",
									"nameLocation": "26680:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "26702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "26697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26697:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26696:15:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26729:0:0"
									},
									"scope": 1338,
									"src": "26671:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "26835:42:0",
										"statements": [
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "sellingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "26845:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1317,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "26862:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26845:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "26845:25:0"
											}
										]
									},
									"functionSelector": "b16d78cf",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1313,
												"name": "isOwner",
												"nameLocations": [
													"26827:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 849,
												"src": "26827:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26827:7:0"
										}
									],
									"name": "setSellingEnabled",
									"nameLocation": "26785:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "26808:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "26803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26803:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26802:15:0"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26835:0:0"
									},
									"scope": 1338,
									"src": "26776:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "26956:43:0",
										"statements": [
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1330,
															"name": "isDex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "26966:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1332,
														"indexExpression": {
															"id": 1331,
															"name": "dexAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "26972:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26966:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1333,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "26986:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "26966:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "26966:26:0"
											}
										]
									},
									"functionSelector": "7cdf6fb1",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1327,
												"name": "isOwner",
												"nameLocations": [
													"26948:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 849,
												"src": "26948:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26948:7:0"
										}
									],
									"name": "setDexAddress",
									"nameLocation": "26892:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "dexAddress",
												"nameLocation": "26914:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "26906:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "26931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "26926:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26926:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26905:33:0"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26956:0:0"
									},
									"scope": 1338,
									"src": "26883:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1339,
							"src": "21808:5495:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20,
								837
							]
						}
					],
					"src": "133:27171:0"
				},
				"id": 0
			}
		}
	}
}