{
	"id": "2183db2331b652648f37dc2af2f57a1b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/assets/BBD_Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BBDToken is ERC20, Ownable {\r\n    uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18;\r\n    uint256 public constant PUBLIC_SUPPLY = 1_000_000_000 * 1e18;\r\n    uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY;\r\n\r\n    uint256 public immutable startTimestamp;\r\n    uint256 public lastUnlockMonth;\r\n    uint256 public totalUnlocked;\r\n\r\n    address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2;\r\n    address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357;\r\n    address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE;\r\n    address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74;\r\n    address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA;\r\n    address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32;\r\n\r\n    event TokensUnlocked(uint256 month, uint256 amountPerWallet, uint256 totalUnlocked);\r\n\r\n    constructor(address owner_) ERC20(\"BBD Token\", \"BBD\") Ownable(owner_) {\r\n        _mint(owner_, PUBLIC_SUPPLY);          // 1 billion to owner\r\n        _mint(address(this), LOCKED_SUPPLY);   // 9 billion stays locked in contract\r\n\r\n        startTimestamp = block.timestamp;\r\n        lastUnlockMonth = 0;\r\n    }\r\n\r\n    function unlockTokens() external onlyOwner {\r\n        require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\");\r\n\r\n        uint256 monthsElapsed = (block.timestamp - startTimestamp) / 30 days;\r\n        require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\");\r\n\r\n        uint256 tokensToUnlock = 0;\r\n\r\n        for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {\r\n            if (m <= 3) {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 5) / 1000; // 0.5%\r\n            } else if (m <= 6) {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 1) / 100; // 1%\r\n            } else if (m <= 9) {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 2) / 100; // 2%\r\n            } else {\r\n                tokensToUnlock += (LOCKED_SUPPLY * 3) / 100; // 3%\r\n            }\r\n        }\r\n\r\n        if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {\r\n            tokensToUnlock = LOCKED_SUPPLY - totalUnlocked; // Adjust final unlock if exceeding\r\n        }\r\n\r\n        require(tokensToUnlock > 0, \"Nothing to unlock\");\r\n\r\n        lastUnlockMonth = monthsElapsed;\r\n        totalUnlocked += tokensToUnlock;\r\n\r\n        uint256 share = tokensToUnlock / 6;\r\n\r\n        _transfer(address(this), liquidityListing, share);\r\n        _transfer(address(this), gameTreasury, share);\r\n        _transfer(address(this), marketing, share);\r\n        _transfer(address(this), stakingReward, share);\r\n        _transfer(address(this), referralBonus, share);\r\n        _transfer(address(this), awardBonus, share);\r\n\r\n        emit TokensUnlocked(lastUnlockMonth, share, totalUnlocked);\r\n    }\r\n\r\n    function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {\r\n        require(index >= 1 && index <= 6, \"Invalid index\");\r\n\r\n        if(index == 1) liquidityListing = newAddress;\r\n        else if(index == 2) gameTreasury = newAddress;\r\n        else if(index == 3) marketing = newAddress;\r\n        else if(index == 4) stakingReward = newAddress;\r\n        else if(index == 5) referralBonus = newAddress;\r\n        else if(index == 6) awardBonus = newAddress;\r\n    }\r\n\r\n    function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {\r\n        uint256 m = lastUnlockMonth + 1;\r\n\r\n        if (m <= 3) {\r\n            amountTotal = (LOCKED_SUPPLY * 5) / 1000;\r\n        } else if (m <= 6) {\r\n            amountTotal = (LOCKED_SUPPLY * 1) / 100;\r\n        } else if (m <= 9) {\r\n            amountTotal = (LOCKED_SUPPLY * 2) / 100;\r\n        } else {\r\n            amountTotal = (LOCKED_SUPPLY * 3) / 100;\r\n        }\r\n\r\n        if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {\r\n            amountTotal = LOCKED_SUPPLY - totalUnlocked;\r\n        }\r\n\r\n        return (m, amountTotal, amountTotal / 6);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/assets/BBD_Token.sol": {
				"BBDToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPerWallet",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUnlocked",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LOCKED_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PUBLIC_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "awardBonus",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameTreasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextUnlockInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "month",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTotal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "perWallet",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUnlockMonth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityListing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "referralBonus",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingReward",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUnlocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "updateDistributionAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/assets/BBD_Token.sol\":174:4216  contract BBDToken is ERC20, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"src/assets/BBD_Token.sol\":548:624  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"src/assets/BBD_Token.sol\":582:624  0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  0x7ec13697d98925ba1dc2bcc705c071bd168b10c2\n    /* \"src/assets/BBD_Token.sol\":548:624  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"src/assets/BBD_Token.sol\":631:703  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  0x09\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":661:703  0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  0x8de119e98707ac240aba2cb77e83b29882a34357\n    /* \"src/assets/BBD_Token.sol\":631:703  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":710:779  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  0x0a\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":737:779  0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  0x03499c18f7265be9afda16504a34cd1892f278ae\n    /* \"src/assets/BBD_Token.sol\":710:779  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":786:859  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  0x0b\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":817:859  0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  0xcc234a1d3e32148461b7eacb5a8bf4d0c4b6be74\n    /* \"src/assets/BBD_Token.sol\":786:859  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":866:939  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  0x0c\n  dup1\n  sload\n  dup3\n  and\n    /* \"src/assets/BBD_Token.sol\":897:939  0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  0xceea0e87b553bc445c5eb2242b5f28cd81b4acaa\n    /* \"src/assets/BBD_Token.sol\":866:939  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":946:1016  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n  0x0d\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"src/assets/BBD_Token.sol\":974:1016  0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n  0x7e23e2781a1da5dace87b4f0e7bf68191263fc32\n    /* \"src/assets/BBD_Token.sol\":946:1016  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n  or\n  swap1\n  sstore\n    /* \"src/assets/BBD_Token.sol\":1117:1426  constructor(address owner_) ERC20(\"BBD Token\", \"BBD\") Ownable(owner_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/assets/BBD_Token.sol\":1179:1185  owner_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x212122102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x109091)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"src/assets/BBD_Token.sol\":1198:1226  _mint(owner_, PUBLIC_SUPPLY) */\n  tag_18\n    /* \"src/assets/BBD_Token.sol\":1204:1210  owner_ */\n  dup2\n    /* \"src/assets/BBD_Token.sol\":324:344  1_000_000_000 * 1e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"src/assets/BBD_Token.sol\":1198:1203  _mint */\n  tag_19\n    /* \"src/assets/BBD_Token.sol\":1198:1226  _mint(owner_, PUBLIC_SUPPLY) */\n  jump\t// in\ntag_18:\n    /* \"src/assets/BBD_Token.sol\":1268:1303  _mint(address(this), LOCKED_SUPPLY) */\n  tag_20\n    /* \"src/assets/BBD_Token.sol\":1282:1286  this */\n  address\n    /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n  tag_21\n    /* \"src/assets/BBD_Token.sol\":324:344  1_000_000_000 * 1e18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n  0x204fce5e3e25026110000000\n    /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"src/assets/BBD_Token.sol\":1268:1273  _mint */\n  tag_19\n    /* \"src/assets/BBD_Token.sol\":1268:1303  _mint(address(this), LOCKED_SUPPLY) */\n  jump\t// in\ntag_20:\n  pop\n    /* \"src/assets/BBD_Token.sol\":1373:1388  block.timestamp */\n  timestamp\n    /* \"src/assets/BBD_Token.sol\":1356:1388  startTimestamp = block.timestamp */\n  0x80\n  mstore\n    /* \"src/assets/BBD_Token.sol\":1417:1418  0 */\n  0x00\n    /* \"src/assets/BBD_Token.sol\":1399:1414  lastUnlockMonth */\n  0x06\n    /* \"src/assets/BBD_Token.sol\":1399:1418  lastUnlockMonth = 0 */\n  sstore\n    /* \"src/assets/BBD_Token.sol\":174:4216  contract BBDToken is ERC20, Ownable {... */\n  jump(tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2950:3153   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_29\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_34\n  swap1\n  pop\n  jump\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3773:3805   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3755:3806   */\n  mstore\n    /* \"#utility.yul\":3822:3840   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3815:3849   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3865:3883   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3858:3892   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3728:3746   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":3553:3898   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_39)\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_40\n  swap2\n    /* \"#utility.yul\":4049:4074   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4022:4040   */\n  add\n  swap1\n    /* \"#utility.yul\":3903:4080   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_50:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_51:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_42:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_43:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_54:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_55:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_45:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_59:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_60:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_58:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_66\n  tag_42\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1850:1947   */\n  tag_67\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_68\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_43\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_45\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_71:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_62)\n    /* \"#utility.yul\":2039:2688   */\ntag_70:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_74:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_77:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":3158:3285   */\ntag_47:\n    /* \"#utility.yul\":3219:3229   */\n  0x4e487b71\n    /* \"#utility.yul\":3214:3217   */\n  0xe0\n    /* \"#utility.yul\":3210:3230   */\n  shl\n    /* \"#utility.yul\":3207:3208   */\n  0x00\n    /* \"#utility.yul\":3200:3231   */\n  mstore\n    /* \"#utility.yul\":3250:3254   */\n  0x11\n    /* \"#utility.yul\":3247:3248   */\n  0x04\n    /* \"#utility.yul\":3240:3255   */\n  mstore\n    /* \"#utility.yul\":3274:3278   */\n  0x24\n    /* \"#utility.yul\":3271:3272   */\n  0x00\n    /* \"#utility.yul\":3264:3279   */\n  revert\n    /* \"#utility.yul\":3290:3418   */\ntag_22:\n    /* \"#utility.yul\":3357:3366   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":3378:3389   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":3375:3412   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3392:3410   */\n  tag_82\n  tag_47\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3290:3418   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3423:3548   */\ntag_33:\n    /* \"#utility.yul\":3488:3497   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3509:3519   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3506:3542   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3522:3540   */\n  tag_82\n  tag_47\n  jump\t// in\n    /* \"#utility.yul\":3903:4080   */\ntag_48:\n    /* \"src/assets/BBD_Token.sol\":174:4216  contract BBDToken is ERC20, Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/assets/BBD_Token.sol\":174:4216  contract BBDToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xce7842f5\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe6fd48bc\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe6fd48bc\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe8be9a44\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xce7842f5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd2f9efab\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xa779d080\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xa779d080\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb361412a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbe381b85\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x2d3e474a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8310a74d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8342083a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x2d3e474a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x67859b6e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x042249bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2be8781f\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/assets/BBD_Token.sol\":786:859  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n    tag_3:\n      sload(0x0b)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/assets/BBD_Token.sol\":786:859  address public stakingReward = 0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74 */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_38\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_44\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n    tag_8:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"src/assets/BBD_Token.sol\":710:779  address public marketing = 0x03499C18F7265BE9AFDA16504A34CD1892F278AE */\n    tag_9:\n      sload(0x0a)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2328:2364   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2316:2318   */\n      0x20\n        /* \"#utility.yul\":2301:2319   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_38\n        /* \"#utility.yul\":2186:2370   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":548:624  address public liquidityListing = 0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2 */\n    tag_11:\n      sload(0x08)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_50\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_59\n      tag_79\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":474:504  uint256 public lastUnlockMonth */\n    tag_14:\n      tag_50\n      sload(0x06)\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":284:344  uint256 public constant PUBLIC_SUPPLY = 1_000_000_000 * 1e18 */\n    tag_15:\n      tag_50\n      shl(0x1b, 0x6765c793fa10079d)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"src/assets/BBD_Token.sol\":217:277  uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18 */\n    tag_17:\n      tag_50\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":217:277  uint256 public constant TOTAL_SUPPLY = 10_000_000_000 * 1e18 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_40\n      tag_93\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":511:539  uint256 public totalUnlocked */\n    tag_19:\n      tag_50\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_44\n      tag_99\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":946:1016  address public awardBonus = 0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32 */\n    tag_21:\n      sload(0x0d)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":3541:4213  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2768:2793   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2809:2827   */\n      dup5\n      add\n        /* \"#utility.yul\":2802:2836   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2852:2870   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2845:2879   */\n      mstore\n        /* \"#utility.yul\":2756:2758   */\n      0x60\n        /* \"#utility.yul\":2741:2759   */\n      add\n        /* \"src/assets/BBD_Token.sol\":3541:4213  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n      tag_38\n        /* \"#utility.yul\":2566:2885   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":866:939  address public referralBonus = 0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA */\n    tag_23:\n      sload(0x0c)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":631:703  address public gameTreasury = 0x8de119e98707Ac240abA2cB77E83B29882A34357 */\n    tag_24:\n      sload(0x09)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_50\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"src/assets/BBD_Token.sol\":428:467  uint256 public immutable startTimestamp */\n    tag_26:\n      tag_50\n      immutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n      dup2\n      jump\n        /* \"src/assets/BBD_Token.sol\":351:419  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n    tag_27:\n      tag_50\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_59\n      tag_127\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":1434:3033  function unlockTokens() external onlyOwner {... */\n    tag_29:\n      tag_59\n      tag_130\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_138:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"src/assets/BBD_Token.sol\":3158:3159  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":3149:3154  index */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":3149:3159  index >= 1 */\n      lt\n      iszero\n        /* \"src/assets/BBD_Token.sol\":3149:3173  index >= 1 && index <= 6 */\n      dup1\n      iszero\n      tag_154\n      jumpi\n      pop\n        /* \"src/assets/BBD_Token.sol\":3172:3173  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":3163:3168  index */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":3163:3173  index <= 6 */\n      gt\n      iszero\n        /* \"src/assets/BBD_Token.sol\":3149:3173  index >= 1 && index <= 6 */\n    tag_154:\n        /* \"src/assets/BBD_Token.sol\":3141:3191  require(index >= 1 && index <= 6, \"Invalid index\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3742:3744   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":3141:3191  require(index >= 1 && index <= 6, \"Invalid index\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3724:3745   */\n      mstore\n        /* \"#utility.yul\":3781:3783   */\n      0x0d\n        /* \"#utility.yul\":3761:3779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3754:3784   */\n      mstore\n      shl(0x9b, 0x092dcecc2d8d2c840d2dcc8caf)\n        /* \"#utility.yul\":3800:3818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3793:3836   */\n      mstore\n        /* \"#utility.yul\":3853:3871   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":3141:3191  require(index >= 1 && index <= 6, \"Invalid index\") */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"src/assets/BBD_Token.sol\":3207:3212  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3216:3217  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":3207:3217  index == 1 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":3204:3525  if(index == 1) liquidityListing = newAddress;... */\n      tag_158\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3219:3235  liquidityListing */\n      0x08\n        /* \"src/assets/BBD_Token.sol\":3219:3248  liquidityListing = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":3204:3525  if(index == 1) liquidityListing = newAddress;... */\n    tag_158:\n        /* \"src/assets/BBD_Token.sol\":3267:3272  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3276:3277  2 */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":3267:3277  index == 2 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":3264:3525  if(index == 2) gameTreasury = newAddress;... */\n      tag_160\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3279:3291  gameTreasury */\n      0x09\n        /* \"src/assets/BBD_Token.sol\":3279:3304  gameTreasury = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":3264:3525  if(index == 2) gameTreasury = newAddress;... */\n    tag_160:\n        /* \"src/assets/BBD_Token.sol\":3323:3328  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3332:3333  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":3323:3333  index == 3 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":3320:3525  if(index == 3) marketing = newAddress;... */\n      tag_162\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3335:3344  marketing */\n      0x0a\n        /* \"src/assets/BBD_Token.sol\":3335:3357  marketing = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":3320:3525  if(index == 3) marketing = newAddress;... */\n    tag_162:\n        /* \"src/assets/BBD_Token.sol\":3376:3381  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3385:3386  4 */\n      0x04\n        /* \"src/assets/BBD_Token.sol\":3376:3386  index == 4 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":3373:3525  if(index == 4) stakingReward = newAddress;... */\n      tag_164\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3388:3401  stakingReward */\n      0x0b\n        /* \"src/assets/BBD_Token.sol\":3388:3414  stakingReward = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":3373:3525  if(index == 4) stakingReward = newAddress;... */\n    tag_164:\n        /* \"src/assets/BBD_Token.sol\":3433:3438  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3442:3443  5 */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":3433:3443  index == 5 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":3430:3525  if(index == 5) referralBonus = newAddress;... */\n      tag_166\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3445:3458  referralBonus */\n      0x0c\n        /* \"src/assets/BBD_Token.sol\":3445:3471  referralBonus = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":3430:3525  if(index == 5) referralBonus = newAddress;... */\n    tag_166:\n        /* \"src/assets/BBD_Token.sol\":3490:3495  index */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3499:3500  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":3490:3500  index == 6 */\n      sub\n        /* \"src/assets/BBD_Token.sol\":3487:3525  if(index == 6) awardBonus = newAddress */\n      tag_168\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3502:3512  awardBonus */\n      0x0d\n        /* \"src/assets/BBD_Token.sol\":3502:3525  awardBonus = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/assets/BBD_Token.sol\":3487:3525  if(index == 6) awardBonus = newAddress */\n    tag_168:\n        /* \"src/assets/BBD_Token.sol\":3041:3533  function updateDistributionAddress(uint256 index, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":3541:4213  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n    tag_106:\n        /* \"src/assets/BBD_Token.sol\":3593:3606  uint256 month */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":3608:3627  uint256 amountTotal */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":3629:3646  uint256 perWallet */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":3659:3668  uint256 m */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":3671:3686  lastUnlockMonth */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":3689:3690  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":3671:3690  lastUnlockMonth + 1 */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"src/assets/BBD_Token.sol\":3659:3690  uint256 m = lastUnlockMonth + 1 */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":3712:3713  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":3707:3708  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3707:3713  m <= 3 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":3703:4022  if (m <= 3) {... */\n      tag_189\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3766:3770  1000 */\n      0x03e8\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_190\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"src/assets/BBD_Token.sol\":3745:3762  LOCKED_SUPPLY * 5 */\n      tag_192\n      swap1\n        /* \"src/assets/BBD_Token.sol\":3761:3762  5 */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":3745:3762  LOCKED_SUPPLY * 5 */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"src/assets/BBD_Token.sol\":3744:3770  (LOCKED_SUPPLY * 5) / 1000 */\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"src/assets/BBD_Token.sol\":3730:3770  amountTotal = (LOCKED_SUPPLY * 5) / 1000 */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token.sol\":3703:4022  if (m <= 3) {... */\n      jump(tag_206)\n    tag_189:\n        /* \"src/assets/BBD_Token.sol\":3797:3798  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":3792:3793  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3792:3798  m <= 6 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":3788:4022  if (m <= 6) {... */\n      tag_197\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3851:3854  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_198\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_198:\n        /* \"src/assets/BBD_Token.sol\":3830:3847  LOCKED_SUPPLY * 1 */\n      tag_192\n      swap1\n        /* \"src/assets/BBD_Token.sol\":3846:3847  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":3830:3847  LOCKED_SUPPLY * 1 */\n      tag_193\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":3788:4022  if (m <= 6) {... */\n    tag_197:\n        /* \"src/assets/BBD_Token.sol\":3881:3882  9 */\n      0x09\n        /* \"src/assets/BBD_Token.sol\":3876:3877  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":3876:3882  m <= 9 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":3872:4022  if (m <= 9) {... */\n      tag_202\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":3935:3938  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_203\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_203:\n        /* \"src/assets/BBD_Token.sol\":3914:3931  LOCKED_SUPPLY * 2 */\n      tag_192\n      swap1\n        /* \"src/assets/BBD_Token.sol\":3930:3931  2 */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":3914:3931  LOCKED_SUPPLY * 2 */\n      tag_193\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":3872:4022  if (m <= 9) {... */\n    tag_202:\n        /* \"src/assets/BBD_Token.sol\":4007:4010  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_207\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_207:\n        /* \"src/assets/BBD_Token.sol\":3986:4003  LOCKED_SUPPLY * 3 */\n      tag_208\n      swap1\n        /* \"src/assets/BBD_Token.sol\":4002:4003  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":3986:4003  LOCKED_SUPPLY * 3 */\n      tag_193\n      jump\t// in\n    tag_208:\n        /* \"src/assets/BBD_Token.sol\":3985:4010  (LOCKED_SUPPLY * 3) / 100 */\n      tag_209\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_209:\n        /* \"src/assets/BBD_Token.sol\":3971:4010  amountTotal = (LOCKED_SUPPLY * 3) / 100 */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token.sol\":3872:4022  if (m <= 9) {... */\n    tag_206:\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_210\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_210:\n        /* \"src/assets/BBD_Token.sol\":4052:4065  totalUnlocked */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":4038:4065  amountTotal + totalUnlocked */\n      tag_211\n      swap1\n        /* \"src/assets/BBD_Token.sol\":4038:4049  amountTotal */\n      dup6\n        /* \"src/assets/BBD_Token.sol\":4038:4065  amountTotal + totalUnlocked */\n      tag_188\n      jump\t// in\n    tag_211:\n        /* \"src/assets/BBD_Token.sol\":4038:4081  amountTotal + totalUnlocked > LOCKED_SUPPLY */\n      gt\n        /* \"src/assets/BBD_Token.sol\":4034:4153  if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":4128:4141  totalUnlocked */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_213\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_213:\n        /* \"src/assets/BBD_Token.sol\":4112:4141  LOCKED_SUPPLY - totalUnlocked */\n      tag_214\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_214:\n        /* \"src/assets/BBD_Token.sol\":4098:4141  amountTotal = LOCKED_SUPPLY - totalUnlocked */\n      swap3\n      pop\n        /* \"src/assets/BBD_Token.sol\":4034:4153  if (amountTotal + totalUnlocked > LOCKED_SUPPLY) {... */\n    tag_212:\n        /* \"src/assets/BBD_Token.sol\":4173:4174  m */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":4176:4187  amountTotal */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":4189:4204  amountTotal / 6 */\n      tag_215\n        /* \"src/assets/BBD_Token.sol\":4203:4204  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":4176:4187  amountTotal */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":4189:4204  amountTotal / 6 */\n      tag_195\n      jump\t// in\n    tag_215:\n        /* \"src/assets/BBD_Token.sol\":4165:4205  return (m, amountTotal, amountTotal / 6) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":3541:4213  function getNextUnlockInfo() external view returns (uint256 month, uint256 amountTotal, uint256 perWallet) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":351:419  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n    tag_124:\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_217\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_217:\n        /* \"src/assets/BBD_Token.sol\":351:419  uint256 public constant LOCKED_SUPPLY = TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_156\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/assets/BBD_Token.sol\":1434:3033  function unlockTokens() external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_225:\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_227\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_227:\n        /* \"src/assets/BBD_Token.sol\":1496:1509  totalUnlocked */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":1496:1525  totalUnlocked < LOCKED_SUPPLY */\n      lt\n        /* \"src/assets/BBD_Token.sol\":1488:1557  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4874:4876   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":1488:1557  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4856:4877   */\n      mstore\n        /* \"#utility.yul\":4913:4915   */\n      0x1b\n        /* \"#utility.yul\":4893:4911   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4886:4916   */\n      mstore\n        /* \"#utility.yul\":4952:4981   */\n      0x416c6c20746f6b656e7320616c726561647920756e6c6f636b65640000000000\n        /* \"#utility.yul\":4932:4950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4925:4982   */\n      mstore\n        /* \"#utility.yul\":4999:5017   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":1488:1557  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n      tag_156\n        /* \"#utility.yul\":4672:5023   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":1488:1557  require(totalUnlocked < LOCKED_SUPPLY, \"All tokens already unlocked\") */\n    tag_228:\n        /* \"src/assets/BBD_Token.sol\":1570:1591  uint256 monthsElapsed */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":1631:1638  30 days */\n      0x278d00\n        /* \"src/assets/BBD_Token.sol\":1595:1627  block.timestamp - startTimestamp */\n      tag_231\n        /* \"src/assets/BBD_Token.sol\":1613:1627  startTimestamp */\n      immutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n        /* \"src/assets/BBD_Token.sol\":1595:1610  block.timestamp */\n      timestamp\n        /* \"src/assets/BBD_Token.sol\":1595:1627  block.timestamp - startTimestamp */\n      tag_191\n      jump\t// in\n    tag_231:\n        /* \"src/assets/BBD_Token.sol\":1594:1638  (block.timestamp - startTimestamp) / 30 days */\n      tag_232\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_232:\n        /* \"src/assets/BBD_Token.sol\":1570:1638  uint256 monthsElapsed = (block.timestamp - startTimestamp) / 30 days */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":1673:1688  lastUnlockMonth */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":1657:1670  monthsElapsed */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":1657:1688  monthsElapsed > lastUnlockMonth */\n      gt\n        /* \"src/assets/BBD_Token.sol\":1649:1715  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5230:5232   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":1649:1715  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5212:5233   */\n      mstore\n        /* \"#utility.yul\":5269:5271   */\n      0x16\n        /* \"#utility.yul\":5249:5267   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5242:5272   */\n      mstore\n      shl(0x50, 0x4e6f206e6577206d6f6e746820746f20756e6c6f636b)\n        /* \"#utility.yul\":5288:5306   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5281:5333   */\n      mstore\n        /* \"#utility.yul\":5350:5368   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":1649:1715  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n      tag_156\n        /* \"#utility.yul\":5028:5374   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":1649:1715  require(monthsElapsed > lastUnlockMonth, \"No new month to unlock\") */\n    tag_233:\n        /* \"src/assets/BBD_Token.sol\":1728:1750  uint256 tokensToUnlock */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":1772:1781  uint256 m */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":1784:1799  lastUnlockMonth */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":1802:1803  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":1784:1803  lastUnlockMonth + 1 */\n      tag_239\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_239:\n        /* \"src/assets/BBD_Token.sol\":1772:1803  uint256 m = lastUnlockMonth + 1 */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":1767:2249  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n    tag_236:\n        /* \"src/assets/BBD_Token.sol\":1810:1823  monthsElapsed */\n      dup3\n        /* \"src/assets/BBD_Token.sol\":1805:1806  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":1805:1823  m <= monthsElapsed */\n      gt\n        /* \"src/assets/BBD_Token.sol\":1767:2249  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n      tag_237\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":1854:1855  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":1849:1850  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":1849:1855  m <= 3 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":1845:2238  if (m <= 3) {... */\n      tag_240\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":1916:1920  1000 */\n      0x03e8\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_241\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_241:\n        /* \"src/assets/BBD_Token.sol\":1895:1912  LOCKED_SUPPLY * 5 */\n      tag_242\n      swap1\n        /* \"src/assets/BBD_Token.sol\":1911:1912  5 */\n      0x05\n        /* \"src/assets/BBD_Token.sol\":1895:1912  LOCKED_SUPPLY * 5 */\n      tag_193\n      jump\t// in\n    tag_242:\n        /* \"src/assets/BBD_Token.sol\":1894:1920  (LOCKED_SUPPLY * 5) / 1000 */\n      tag_243\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_243:\n        /* \"src/assets/BBD_Token.sol\":1876:1920  tokensToUnlock += (LOCKED_SUPPLY * 5) / 1000 */\n      tag_244\n      swap1\n      dup4\n      tag_188\n      jump\t// in\n    tag_244:\n      swap2\n      pop\n        /* \"src/assets/BBD_Token.sol\":1845:2238  if (m <= 3) {... */\n      jump(tag_257)\n    tag_240:\n        /* \"src/assets/BBD_Token.sol\":1959:1960  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":1954:1955  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":1954:1960  m <= 6 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":1950:2238  if (m <= 6) {... */\n      tag_246\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":2021:2024  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_247\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_247:\n        /* \"src/assets/BBD_Token.sol\":2000:2017  LOCKED_SUPPLY * 1 */\n      tag_242\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2016:2017  1 */\n      0x01\n        /* \"src/assets/BBD_Token.sol\":2000:2017  LOCKED_SUPPLY * 1 */\n      tag_193\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":1950:2238  if (m <= 6) {... */\n    tag_246:\n        /* \"src/assets/BBD_Token.sol\":2061:2062  9 */\n      0x09\n        /* \"src/assets/BBD_Token.sol\":2056:2057  m */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":2056:2062  m <= 9 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":2052:2238  if (m <= 9) {... */\n      tag_252\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":2123:2126  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_253\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_253:\n        /* \"src/assets/BBD_Token.sol\":2102:2119  LOCKED_SUPPLY * 2 */\n      tag_242\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2118:2119  2 */\n      0x02\n        /* \"src/assets/BBD_Token.sol\":2102:2119  LOCKED_SUPPLY * 2 */\n      tag_193\n      jump\t// in\n        /* \"src/assets/BBD_Token.sol\":2052:2238  if (m <= 9) {... */\n    tag_252:\n        /* \"src/assets/BBD_Token.sol\":2213:2216  100 */\n      0x64\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_258\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_258:\n        /* \"src/assets/BBD_Token.sol\":2192:2209  LOCKED_SUPPLY * 3 */\n      tag_259\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2208:2209  3 */\n      0x03\n        /* \"src/assets/BBD_Token.sol\":2192:2209  LOCKED_SUPPLY * 3 */\n      tag_193\n      jump\t// in\n    tag_259:\n        /* \"src/assets/BBD_Token.sol\":2191:2216  (LOCKED_SUPPLY * 3) / 100 */\n      tag_260\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_260:\n        /* \"src/assets/BBD_Token.sol\":2173:2216  tokensToUnlock += (LOCKED_SUPPLY * 3) / 100 */\n      tag_261\n      swap1\n      dup4\n      tag_188\n      jump\t// in\n    tag_261:\n      swap2\n      pop\n        /* \"src/assets/BBD_Token.sol\":2052:2238  if (m <= 9) {... */\n    tag_257:\n        /* \"src/assets/BBD_Token.sol\":1825:1828  m++ */\n      dup1\n      tag_262\n      dup2\n      tag_263\n      jump\t// in\n    tag_262:\n      swap2\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":1767:2249  for (uint256 m = lastUnlockMonth + 1; m <= monthsElapsed; m++) {... */\n      jump(tag_236)\n    tag_237:\n      pop\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_264\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_264:\n        /* \"src/assets/BBD_Token.sol\":2282:2295  totalUnlocked */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":2265:2295  tokensToUnlock + totalUnlocked */\n      tag_265\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2265:2279  tokensToUnlock */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2265:2295  tokensToUnlock + totalUnlocked */\n      tag_188\n      jump\t// in\n    tag_265:\n        /* \"src/assets/BBD_Token.sol\":2265:2311  tokensToUnlock + totalUnlocked > LOCKED_SUPPLY */\n      gt\n        /* \"src/assets/BBD_Token.sol\":2261:2422  if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"src/assets/BBD_Token.sol\":2361:2374  totalUnlocked */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_267\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"src/assets/BBD_Token.sol\":256:277  10_000_000_000 * 1e18 */\n      0x204fce5e3e25026110000000\n        /* \"src/assets/BBD_Token.sol\":391:419  TOTAL_SUPPLY - PUBLIC_SUPPLY */\n      tag_191\n      jump\t// in\n    tag_267:\n        /* \"src/assets/BBD_Token.sol\":2345:2374  LOCKED_SUPPLY - totalUnlocked */\n      tag_268\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_268:\n        /* \"src/assets/BBD_Token.sol\":2328:2374  tokensToUnlock = LOCKED_SUPPLY - totalUnlocked */\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":2261:2422  if (tokensToUnlock + totalUnlocked > LOCKED_SUPPLY) {... */\n    tag_266:\n        /* \"src/assets/BBD_Token.sol\":2459:2460  0 */\n      0x00\n        /* \"src/assets/BBD_Token.sol\":2442:2456  tokensToUnlock */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":2442:2460  tokensToUnlock > 0 */\n      gt\n        /* \"src/assets/BBD_Token.sol\":2434:2482  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5721:5723   */\n      0x20\n        /* \"src/assets/BBD_Token.sol\":2434:2482  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5703:5724   */\n      mstore\n        /* \"#utility.yul\":5760:5762   */\n      0x11\n        /* \"#utility.yul\":5740:5758   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5733:5763   */\n      mstore\n      shl(0x78, 0x4e6f7468696e6720746f20756e6c6f636b)\n        /* \"#utility.yul\":5779:5797   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5772:5819   */\n      mstore\n        /* \"#utility.yul\":5836:5854   */\n      0x64\n      add\n        /* \"src/assets/BBD_Token.sol\":2434:2482  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n      tag_156\n        /* \"#utility.yul\":5519:5860   */\n      jump\n        /* \"src/assets/BBD_Token.sol\":2434:2482  require(tokensToUnlock > 0, \"Nothing to unlock\") */\n    tag_269:\n        /* \"src/assets/BBD_Token.sol\":2513:2526  monthsElapsed */\n      dup2\n        /* \"src/assets/BBD_Token.sol\":2495:2510  lastUnlockMonth */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":2495:2526  lastUnlockMonth = monthsElapsed */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/assets/BBD_Token.sol\":2554:2568  tokensToUnlock */\n      dup1\n        /* \"src/assets/BBD_Token.sol\":2537:2550  totalUnlocked */\n      0x07\n      0x00\n        /* \"src/assets/BBD_Token.sol\":2537:2568  totalUnlocked += tokensToUnlock */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_272:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/assets/BBD_Token.sol\":2581:2594  uint256 share */\n      0x00\n      swap1\n      pop\n        /* \"src/assets/BBD_Token.sol\":2597:2615  tokensToUnlock / 6 */\n      tag_273\n        /* \"src/assets/BBD_Token.sol\":2614:2615  6 */\n      0x06\n        /* \"src/assets/BBD_Token.sol\":2597:2611  tokensToUnlock */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2597:2615  tokensToUnlock / 6 */\n      tag_195\n      jump\t// in\n    tag_273:\n        /* \"src/assets/BBD_Token.sol\":2653:2669  liquidityListing */\n      sload(0x08)\n        /* \"src/assets/BBD_Token.sol\":2581:2615  uint256 share = tokensToUnlock / 6 */\n      swap1\n      swap2\n      pop\n        /* \"src/assets/BBD_Token.sol\":2628:2677  _transfer(address(this), liquidityListing, share) */\n      tag_274\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2646:2650  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":2653:2669  liquidityListing */\n      and\n        /* \"src/assets/BBD_Token.sol\":2581:2615  uint256 share = tokensToUnlock / 6 */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2628:2637  _transfer */\n      tag_149\n        /* \"src/assets/BBD_Token.sol\":2628:2677  _transfer(address(this), liquidityListing, share) */\n      jump\t// in\n    tag_274:\n        /* \"src/assets/BBD_Token.sol\":2713:2725  gameTreasury */\n      sload(0x09)\n        /* \"src/assets/BBD_Token.sol\":2688:2733  _transfer(address(this), gameTreasury, share) */\n      tag_275\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2706:2710  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":2713:2725  gameTreasury */\n      and\n        /* \"src/assets/BBD_Token.sol\":2727:2732  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2688:2697  _transfer */\n      tag_149\n        /* \"src/assets/BBD_Token.sol\":2688:2733  _transfer(address(this), gameTreasury, share) */\n      jump\t// in\n    tag_275:\n        /* \"src/assets/BBD_Token.sol\":2769:2778  marketing */\n      sload(0x0a)\n        /* \"src/assets/BBD_Token.sol\":2744:2786  _transfer(address(this), marketing, share) */\n      tag_276\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2762:2766  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":2769:2778  marketing */\n      and\n        /* \"src/assets/BBD_Token.sol\":2780:2785  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2744:2753  _transfer */\n      tag_149\n        /* \"src/assets/BBD_Token.sol\":2744:2786  _transfer(address(this), marketing, share) */\n      jump\t// in\n    tag_276:\n        /* \"src/assets/BBD_Token.sol\":2822:2835  stakingReward */\n      sload(0x0b)\n        /* \"src/assets/BBD_Token.sol\":2797:2843  _transfer(address(this), stakingReward, share) */\n      tag_277\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2815:2819  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":2822:2835  stakingReward */\n      and\n        /* \"src/assets/BBD_Token.sol\":2837:2842  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2797:2806  _transfer */\n      tag_149\n        /* \"src/assets/BBD_Token.sol\":2797:2843  _transfer(address(this), stakingReward, share) */\n      jump\t// in\n    tag_277:\n        /* \"src/assets/BBD_Token.sol\":2879:2892  referralBonus */\n      sload(0x0c)\n        /* \"src/assets/BBD_Token.sol\":2854:2900  _transfer(address(this), referralBonus, share) */\n      tag_278\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2872:2876  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":2879:2892  referralBonus */\n      and\n        /* \"src/assets/BBD_Token.sol\":2894:2899  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2854:2863  _transfer */\n      tag_149\n        /* \"src/assets/BBD_Token.sol\":2854:2900  _transfer(address(this), referralBonus, share) */\n      jump\t// in\n    tag_278:\n        /* \"src/assets/BBD_Token.sol\":2936:2946  awardBonus */\n      sload(0x0d)\n        /* \"src/assets/BBD_Token.sol\":2911:2954  _transfer(address(this), awardBonus, share) */\n      tag_279\n      swap1\n        /* \"src/assets/BBD_Token.sol\":2929:2933  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/assets/BBD_Token.sol\":2936:2946  awardBonus */\n      and\n        /* \"src/assets/BBD_Token.sol\":2948:2953  share */\n      dup4\n        /* \"src/assets/BBD_Token.sol\":2911:2920  _transfer */\n      tag_149\n        /* \"src/assets/BBD_Token.sol\":2911:2954  _transfer(address(this), awardBonus, share) */\n      jump\t// in\n    tag_279:\n        /* \"src/assets/BBD_Token.sol\":2987:3002  lastUnlockMonth */\n      sload(0x06)\n        /* \"src/assets/BBD_Token.sol\":3011:3024  totalUnlocked */\n      sload(0x07)\n        /* \"src/assets/BBD_Token.sol\":2972:3025  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2768:2793   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2809:2827   */\n      dup4\n      add\n        /* \"#utility.yul\":2802:2836   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2852:2870   */\n      dup3\n      add\n        /* \"#utility.yul\":2845:2879   */\n      mstore\n        /* \"src/assets/BBD_Token.sol\":2972:3025  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      0xd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac\n      swap1\n        /* \"#utility.yul\":2756:2758   */\n      0x60\n        /* \"#utility.yul\":2741:2759   */\n      add\n        /* \"src/assets/BBD_Token.sol\":2972:3025  TokensUnlocked(lastUnlockMonth, share, totalUnlocked) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/assets/BBD_Token.sol\":1477:3033  {... */\n      pop\n      pop\n      pop\n        /* \"src/assets/BBD_Token.sol\":1434:3033  function unlockTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6085:6117   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6067:6118   */\n      mstore\n        /* \"#utility.yul\":6134:6152   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6127:6161   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6177:6195   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6170:6204   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6040:6058   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_156\n        /* \"#utility.yul\":5865:6210   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_156\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_156\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_156\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_156\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_156\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_309:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_312\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_315\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_315:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_316\n      swap1\n      pop\n      jump\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6085:6117   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6067:6118   */\n      mstore\n        /* \"#utility.yul\":6134:6152   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6127:6161   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6177:6195   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6170:6204   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6040:6058   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_156\n        /* \"#utility.yul\":5865:6210   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_320)\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_321\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:640   */\n    tag_43:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":505:511   */\n      dup1\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":492:498   */\n      dup6\n        /* \"#utility.yul\":488:503   */\n      add\n        /* \"#utility.yul\":483:485   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup6\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":462:512   */\n      mcopy\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":556:558   */\n      0x40\n        /* \"#utility.yul\":547:553   */\n      dup3\n        /* \"#utility.yul\":536:545   */\n      dup6\n        /* \"#utility.yul\":532:554   */\n      add\n        /* \"#utility.yul\":528:559   */\n      add\n        /* \"#utility.yul\":521:563   */\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x40\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":620:627   */\n      not\n        /* \"#utility.yul\":615:617   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:618   */\n      add\n        /* \"#utility.yul\":599:628   */\n      and\n        /* \"#utility.yul\":588:597   */\n      dup5\n        /* \"#utility.yul\":584:629   */\n      add\n        /* \"#utility.yul\":580:634   */\n      add\n        /* \"#utility.yul\":572:634   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_322:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_328:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_46:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      dup1\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      dup1\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_330:\n        /* \"#utility.yul\":991:1020   */\n      tag_331\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_322\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_56:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      dup1\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_335:\n        /* \"#utility.yul\":1687:1716   */\n      tag_336\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_322\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_337\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_322\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":1881:2181   */\n    tag_61:\n        /* \"#utility.yul\":1949:1955   */\n      0x00\n        /* \"#utility.yul\":1957:1963   */\n      dup1\n        /* \"#utility.yul\":2010:2012   */\n      0x40\n        /* \"#utility.yul\":1998:2007   */\n      dup4\n        /* \"#utility.yul\":1989:1996   */\n      dup6\n        /* \"#utility.yul\":1985:2008   */\n      sub\n        /* \"#utility.yul\":1981:2013   */\n      slt\n        /* \"#utility.yul\":1978:2030   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2026:2027   */\n      0x00\n        /* \"#utility.yul\":2023:2024   */\n      dup1\n        /* \"#utility.yul\":2016:2028   */\n      revert\n        /* \"#utility.yul\":1978:2030   */\n    tag_339:\n        /* \"#utility.yul\":2071:2094   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2137:2175   */\n      tag_340\n        /* \"#utility.yul\":2171:2173   */\n      0x20\n        /* \"#utility.yul\":2156:2174   */\n      dup5\n      add\n        /* \"#utility.yul\":2137:2175   */\n      tag_322\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2127:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1881:2181   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2375:2561   */\n    tag_75:\n        /* \"#utility.yul\":2434:2440   */\n      0x00\n        /* \"#utility.yul\":2487:2489   */\n      0x20\n        /* \"#utility.yul\":2475:2484   */\n      dup3\n        /* \"#utility.yul\":2466:2473   */\n      dup5\n        /* \"#utility.yul\":2462:2485   */\n      sub\n        /* \"#utility.yul\":2458:2490   */\n      slt\n        /* \"#utility.yul\":2455:2507   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2500:2501   */\n      dup1\n        /* \"#utility.yul\":2493:2505   */\n      revert\n        /* \"#utility.yul\":2455:2507   */\n    tag_343:\n        /* \"#utility.yul\":2526:2555   */\n      tag_344\n        /* \"#utility.yul\":2545:2554   */\n      dup3\n        /* \"#utility.yul\":2526:2555   */\n      tag_322\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2516:2555   */\n      swap4\n        /* \"#utility.yul\":2375:2561   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2890:3150   */\n    tag_117:\n        /* \"#utility.yul\":2958:2964   */\n      0x00\n        /* \"#utility.yul\":2966:2972   */\n      dup1\n        /* \"#utility.yul\":3019:3021   */\n      0x40\n        /* \"#utility.yul\":3007:3016   */\n      dup4\n        /* \"#utility.yul\":2998:3005   */\n      dup6\n        /* \"#utility.yul\":2994:3017   */\n      sub\n        /* \"#utility.yul\":2990:3022   */\n      slt\n        /* \"#utility.yul\":2987:3039   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3032:3033   */\n      dup1\n        /* \"#utility.yul\":3025:3037   */\n      revert\n        /* \"#utility.yul\":2987:3039   */\n    tag_347:\n        /* \"#utility.yul\":3058:3087   */\n      tag_348\n        /* \"#utility.yul\":3077:3086   */\n      dup4\n        /* \"#utility.yul\":3058:3087   */\n      tag_322\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3048:3087   */\n      swap2\n      pop\n        /* \"#utility.yul\":3106:3144   */\n      tag_340\n        /* \"#utility.yul\":3140:3142   */\n      0x20\n        /* \"#utility.yul\":3129:3138   */\n      dup5\n        /* \"#utility.yul\":3125:3143   */\n      add\n        /* \"#utility.yul\":3106:3144   */\n      tag_322\n      jump\t// in\n        /* \"#utility.yul\":3155:3535   */\n    tag_133:\n        /* \"#utility.yul\":3234:3235   */\n      0x01\n        /* \"#utility.yul\":3230:3242   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3277:3289   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3298:3359   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3352:3356   */\n      0x7f\n        /* \"#utility.yul\":3344:3350   */\n      dup3\n        /* \"#utility.yul\":3340:3357   */\n      and\n        /* \"#utility.yul\":3330:3357   */\n      swap2\n      pop\n        /* \"#utility.yul\":3298:3359   */\n    tag_351:\n        /* \"#utility.yul\":3405:3407   */\n      0x20\n        /* \"#utility.yul\":3397:3403   */\n      dup3\n        /* \"#utility.yul\":3394:3408   */\n      lt\n        /* \"#utility.yul\":3374:3392   */\n      dup2\n        /* \"#utility.yul\":3371:3409   */\n      sub\n        /* \"#utility.yul\":3368:3529   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3451:3461   */\n      0x4e487b71\n        /* \"#utility.yul\":3446:3449   */\n      0xe0\n        /* \"#utility.yul\":3442:3462   */\n      shl\n        /* \"#utility.yul\":3439:3440   */\n      0x00\n        /* \"#utility.yul\":3432:3463   */\n      mstore\n        /* \"#utility.yul\":3486:3490   */\n      0x22\n        /* \"#utility.yul\":3483:3484   */\n      0x04\n        /* \"#utility.yul\":3476:3491   */\n      mstore\n        /* \"#utility.yul\":3514:3518   */\n      0x24\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3504:3519   */\n      revert\n        /* \"#utility.yul\":3368:3529   */\n    tag_352:\n      pop\n        /* \"#utility.yul\":3155:3535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3882:4009   */\n    tag_323:\n        /* \"#utility.yul\":3943:3953   */\n      0x4e487b71\n        /* \"#utility.yul\":3938:3941   */\n      0xe0\n        /* \"#utility.yul\":3934:3954   */\n      shl\n        /* \"#utility.yul\":3931:3932   */\n      0x00\n        /* \"#utility.yul\":3924:3955   */\n      mstore\n        /* \"#utility.yul\":3974:3978   */\n      0x11\n        /* \"#utility.yul\":3971:3972   */\n      0x04\n        /* \"#utility.yul\":3964:3979   */\n      mstore\n        /* \"#utility.yul\":3998:4002   */\n      0x24\n        /* \"#utility.yul\":3995:3996   */\n      0x00\n        /* \"#utility.yul\":3988:4003   */\n      revert\n        /* \"#utility.yul\":4014:4139   */\n    tag_188:\n        /* \"#utility.yul\":4079:4088   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4100:4110   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4097:4133   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4113:4131   */\n      tag_138\n      tag_323\n      jump\t// in\n        /* \"#utility.yul\":4144:4272   */\n    tag_191:\n        /* \"#utility.yul\":4211:4220   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4232:4243   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4229:4266   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4246:4264   */\n      tag_138\n      tag_323\n      jump\t// in\n        /* \"#utility.yul\":4277:4445   */\n    tag_193:\n        /* \"#utility.yul\":4350:4359   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4381:4390   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4398:4413   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4392:4414   */\n      dup5\n      eq\n        /* \"#utility.yul\":4378:4415   */\n      or\n        /* \"#utility.yul\":4368:4439   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4419:4437   */\n      tag_138\n      tag_323\n      jump\t// in\n        /* \"#utility.yul\":4450:4667   */\n    tag_195:\n        /* \"#utility.yul\":4490:4491   */\n      0x00\n        /* \"#utility.yul\":4516:4517   */\n      dup3\n        /* \"#utility.yul\":4506:4638   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":4560:4570   */\n      0x4e487b71\n        /* \"#utility.yul\":4555:4558   */\n      0xe0\n        /* \"#utility.yul\":4551:4571   */\n      shl\n        /* \"#utility.yul\":4548:4549   */\n      0x00\n        /* \"#utility.yul\":4541:4572   */\n      mstore\n        /* \"#utility.yul\":4595:4599   */\n      0x12\n        /* \"#utility.yul\":4592:4593   */\n      0x04\n        /* \"#utility.yul\":4585:4600   */\n      mstore\n        /* \"#utility.yul\":4623:4627   */\n      0x24\n        /* \"#utility.yul\":4620:4621   */\n      0x00\n        /* \"#utility.yul\":4613:4628   */\n      revert\n        /* \"#utility.yul\":4506:4638   */\n    tag_365:\n      pop\n        /* \"#utility.yul\":4652:4661   */\n      div\n      swap1\n        /* \"#utility.yul\":4450:4667   */\n      jump\t// out\n        /* \"#utility.yul\":5379:5514   */\n    tag_263:\n        /* \"#utility.yul\":5418:5421   */\n      0x00\n        /* \"#utility.yul\":5439:5456   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5436:5479   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5459:5477   */\n      tag_370\n      tag_323\n      jump\t// in\n    tag_370:\n      pop\n        /* \"#utility.yul\":5506:5507   */\n      0x01\n        /* \"#utility.yul\":5495:5508   */\n      add\n      swap1\n        /* \"#utility.yul\":5379:5514   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f50d3555b15df4cd371fd98e7f80921811010daed5a59b573c3b0864e9abca364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 548,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 467,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 604,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4082:7",
										"nodeType": "YulBlock",
										"src": "0:4082:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:7",
													"nodeType": "YulBlock",
													"src": "95:209:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:7",
																"nodeType": "YulBlock",
																"src": "141:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:7",
																					"nodeType": "YulLiteral",
																					"src": "150:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:7",
																					"nodeType": "YulLiteral",
																					"src": "153:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:7"
																			},
																			"nativeSrc": "143:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:7"
																		},
																		"nativeSrc": "143:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:7"
																		},
																		"nativeSrc": "112:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:7"
																},
																"nativeSrc": "108:32:7",
																"nodeType": "YulFunctionCall",
																"src": "108:32:7"
															},
															"nativeSrc": "105:52:7",
															"nodeType": "YulIf",
															"src": "105:52:7"
														},
														{
															"nativeSrc": "166:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:7"
																},
																"nativeSrc": "179:16:7",
																"nodeType": "YulFunctionCall",
																"src": "179:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:7",
																	"nodeType": "YulTypedName",
																	"src": "170:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:7",
																"nodeType": "YulBlock",
																"src": "258:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "267:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:7",
																					"nodeType": "YulLiteral",
																					"src": "270:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:7"
																			},
																			"nativeSrc": "260:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:7"
																		},
																		"nativeSrc": "260:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:7",
																										"nodeType": "YulLiteral",
																										"src": "243:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:7",
																										"nodeType": "YulLiteral",
																										"src": "248:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:7"
																								},
																								"nativeSrc": "239:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:7",
																								"nodeType": "YulLiteral",
																								"src": "252:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:7"
																						},
																						"nativeSrc": "235:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:7"
																				},
																				"nativeSrc": "224:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:7"
																		},
																		"nativeSrc": "214:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:7"
																},
																"nativeSrc": "207:50:7",
																"nodeType": "YulFunctionCall",
																"src": "207:50:7"
															},
															"nativeSrc": "204:70:7",
															"nodeType": "YulIf",
															"src": "204:70:7"
														},
														{
															"nativeSrc": "283:15:7",
															"nodeType": "YulAssignment",
															"src": "283:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:7",
																"nodeType": "YulIdentifier",
																"src": "293:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:7",
														"nodeType": "YulTypedName",
														"src": "61:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:7",
														"nodeType": "YulTypedName",
														"src": "72:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:7",
														"nodeType": "YulTypedName",
														"src": "84:6:7",
														"type": ""
													}
												],
												"src": "14:290:7"
											},
											{
												"body": {
													"nativeSrc": "341:95:7",
													"nodeType": "YulBlock",
													"src": "341:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:7",
																		"nodeType": "YulLiteral",
																		"src": "358:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:7",
																				"nodeType": "YulLiteral",
																				"src": "365:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:7",
																				"nodeType": "YulLiteral",
																				"src": "370:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:7"
																		},
																		"nativeSrc": "361:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:7"
																},
																"nativeSrc": "351:31:7",
																"nodeType": "YulFunctionCall",
																"src": "351:31:7"
															},
															"nativeSrc": "351:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:7",
																		"nodeType": "YulLiteral",
																		"src": "398:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:7",
																		"nodeType": "YulLiteral",
																		"src": "401:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:7"
																},
																"nativeSrc": "391:15:7",
																"nodeType": "YulFunctionCall",
																"src": "391:15:7"
															},
															"nativeSrc": "391:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:7",
																		"nodeType": "YulLiteral",
																		"src": "422:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:7",
																		"nodeType": "YulLiteral",
																		"src": "425:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:7"
																},
																"nativeSrc": "415:15:7",
																"nodeType": "YulFunctionCall",
																"src": "415:15:7"
															},
															"nativeSrc": "415:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:7"
											},
											{
												"body": {
													"nativeSrc": "496:325:7",
													"nodeType": "YulBlock",
													"src": "496:325:7",
													"statements": [
														{
															"nativeSrc": "506:22:7",
															"nodeType": "YulAssignment",
															"src": "506:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:7",
																		"nodeType": "YulLiteral",
																		"src": "520:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:7"
																},
																"nativeSrc": "516:12:7",
																"nodeType": "YulFunctionCall",
																"src": "516:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:7"
																}
															]
														},
														{
															"nativeSrc": "537:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:7",
																		"nodeType": "YulLiteral",
																		"src": "573:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:7"
																},
																"nativeSrc": "563:12:7",
																"nodeType": "YulFunctionCall",
																"src": "563:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:7",
																	"nodeType": "YulTypedName",
																	"src": "541:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:7",
																"nodeType": "YulBlock",
																"src": "614:31:7",
																"statements": [
																	{
																		"nativeSrc": "616:27:7",
																		"nodeType": "YulAssignment",
																		"src": "616:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:7",
																					"nodeType": "YulLiteral",
																					"src": "638:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:7"
																			},
																			"nativeSrc": "626:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:7"
																},
																"nativeSrc": "587:26:7",
																"nodeType": "YulFunctionCall",
																"src": "587:26:7"
															},
															"nativeSrc": "584:61:7",
															"nodeType": "YulIf",
															"src": "584:61:7"
														},
														{
															"body": {
																"nativeSrc": "704:111:7",
																"nodeType": "YulBlock",
																"src": "704:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:7",
																					"nodeType": "YulLiteral",
																					"src": "725:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:7",
																							"nodeType": "YulLiteral",
																							"src": "732:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:7",
																							"nodeType": "YulLiteral",
																							"src": "737:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:7"
																					},
																					"nativeSrc": "728:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:7"
																			},
																			"nativeSrc": "718:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:7"
																		},
																		"nativeSrc": "718:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:7",
																					"nodeType": "YulLiteral",
																					"src": "769:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:7",
																					"nodeType": "YulLiteral",
																					"src": "772:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:7"
																			},
																			"nativeSrc": "762:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:7"
																		},
																		"nativeSrc": "762:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:7",
																					"nodeType": "YulLiteral",
																					"src": "797:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:7",
																					"nodeType": "YulLiteral",
																					"src": "800:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:7"
																			},
																			"nativeSrc": "790:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:7"
																		},
																		"nativeSrc": "790:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:7",
																				"nodeType": "YulLiteral",
																				"src": "691:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:7"
																		},
																		"nativeSrc": "680:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:7"
																},
																"nativeSrc": "657:38:7",
																"nodeType": "YulFunctionCall",
																"src": "657:38:7"
															},
															"nativeSrc": "654:161:7",
															"nodeType": "YulIf",
															"src": "654:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:7",
														"nodeType": "YulTypedName",
														"src": "476:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:7",
														"nodeType": "YulTypedName",
														"src": "485:6:7",
														"type": ""
													}
												],
												"src": "441:380:7"
											},
											{
												"body": {
													"nativeSrc": "882:65:7",
													"nodeType": "YulBlock",
													"src": "882:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:7",
																		"nodeType": "YulLiteral",
																		"src": "899:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:7"
																},
																"nativeSrc": "892:14:7",
																"nodeType": "YulFunctionCall",
																"src": "892:14:7"
															},
															"nativeSrc": "892:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:7"
														},
														{
															"nativeSrc": "915:26:7",
															"nodeType": "YulAssignment",
															"src": "915:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:7",
																		"nodeType": "YulLiteral",
																		"src": "933:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:7",
																		"nodeType": "YulLiteral",
																		"src": "936:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:7"
																},
																"nativeSrc": "923:18:7",
																"nodeType": "YulFunctionCall",
																"src": "923:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:7",
														"nodeType": "YulTypedName",
														"src": "865:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:7",
														"nodeType": "YulTypedName",
														"src": "873:4:7",
														"type": ""
													}
												],
												"src": "826:121:7"
											},
											{
												"body": {
													"nativeSrc": "1033:437:7",
													"nodeType": "YulBlock",
													"src": "1033:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:7",
																"nodeType": "YulBlock",
																"src": "1066:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:7"
																			},
																			"nativeSrc": "1080:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:7"
																		},
																		"nativeSrc": "1080:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:7"
																	},
																	{
																		"nativeSrc": "1109:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:7"
																			},
																			"nativeSrc": "1121:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:7"
																							},
																							"nativeSrc": "1188:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:7"
																					},
																					"nativeSrc": "1181:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:7"
																			},
																			"nativeSrc": "1171:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:7",
																			"nodeType": "YulBlock",
																			"src": "1246:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:7"
																			},
																			"nativeSrc": "1225:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:7"
																		},
																		"nativeSrc": "1222:47:7",
																		"nodeType": "YulIf",
																		"src": "1222:47:7"
																	},
																	{
																		"nativeSrc": "1282:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:7"
																							},
																							"nativeSrc": "1309:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:7"
																					},
																					"nativeSrc": "1302:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:7"
																			},
																			"nativeSrc": "1292:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:7",
																			"nodeType": "YulBlock",
																			"src": "1434:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:7"
																						},
																						"nativeSrc": "1436:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:7"
																					},
																					"nativeSrc": "1436:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:7"
																			},
																			"nativeSrc": "1381:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:7"
																		},
																		"nativeSrc": "1373:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:7",
																			"nodeType": "YulBlock",
																			"src": "1395:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:7"
																						},
																						"nativeSrc": "1406:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:7",
																			"nodeType": "YulBlock",
																			"src": "1377:3:7",
																			"statements": []
																		},
																		"src": "1373:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:7"
																},
																"nativeSrc": "1046:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:7"
															},
															"nativeSrc": "1043:421:7",
															"nodeType": "YulIf",
															"src": "1043:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:7",
														"nodeType": "YulTypedName",
														"src": "1005:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:7",
														"nodeType": "YulTypedName",
														"src": "1012:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:7",
														"nodeType": "YulTypedName",
														"src": "1017:10:7",
														"type": ""
													}
												],
												"src": "952:518:7"
											},
											{
												"body": {
													"nativeSrc": "1560:81:7",
													"nodeType": "YulBlock",
													"src": "1560:81:7",
													"statements": [
														{
															"nativeSrc": "1570:65:7",
															"nodeType": "YulAssignment",
															"src": "1570:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:7"
																								},
																								"nativeSrc": "1599:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:7",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:7"
																								},
																								"nativeSrc": "1612:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:7"
																						},
																						"nativeSrc": "1595:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:7"
																				},
																				"nativeSrc": "1591:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:7"
																		},
																		"nativeSrc": "1581:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:7"
																		},
																		"nativeSrc": "1623:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:7"
																},
																"nativeSrc": "1578:57:7",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:7",
														"nodeType": "YulTypedName",
														"src": "1537:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:7",
														"nodeType": "YulTypedName",
														"src": "1543:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:7",
														"nodeType": "YulTypedName",
														"src": "1551:4:7",
														"type": ""
													}
												],
												"src": "1475:166:7"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:7",
													"nodeType": "YulBlock",
													"src": "1742:1203:7",
													"statements": [
														{
															"nativeSrc": "1752:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:7"
																},
																"nativeSrc": "1766:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:7",
																"nodeType": "YulBlock",
																"src": "1819:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:7"
																			},
																			"nativeSrc": "1821:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:7"
																		},
																		"nativeSrc": "1821:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:7"
																				},
																				"nativeSrc": "1803:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:7"
																		},
																		"nativeSrc": "1799:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:7"
																},
																"nativeSrc": "1788:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:7"
															},
															"nativeSrc": "1785:56:7",
															"nodeType": "YulIf",
															"src": "1785:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:7"
																				},
																				"nativeSrc": "1926:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:7"
																		},
																		"nativeSrc": "1900:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:7"
																},
																"nativeSrc": "1850:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:7"
															},
															"nativeSrc": "1850:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:7"
														},
														{
															"nativeSrc": "1956:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:7",
																"nodeType": "YulLiteral",
																"src": "1973:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:7",
															"nodeType": "YulAssignment",
															"src": "1983:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:7",
																"nodeType": "YulLiteral",
																"src": "1996:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:7",
																		"nodeType": "YulBlock",
																		"src": "2046:642:7",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:7"
																							},
																							"nativeSrc": "2087:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:7"
																					},
																					"nativeSrc": "2075:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:7"
																					},
																					"nativeSrc": "2122:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:7",
																					"nodeType": "YulBlock",
																					"src": "2250:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:7"
																												},
																												"nativeSrc": "2289:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:7"
																										},
																										"nativeSrc": "2283:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:7"
																								},
																								"nativeSrc": "2268:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:7"
																							},
																							"nativeSrc": "2268:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:7"
																						},
																						{
																							"nativeSrc": "2327:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:7"
																								},
																								"nativeSrc": "2337:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:7",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:7"
																								},
																								"nativeSrc": "2381:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:7"
																					},
																					"nativeSrc": "2201:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:7"
																				},
																				"nativeSrc": "2193:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:7",
																					"nodeType": "YulBlock",
																					"src": "2216:21:7",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:7",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:7"
																								},
																								"nativeSrc": "2223:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:7",
																					"nodeType": "YulBlock",
																					"src": "2197:3:7",
																					"statements": []
																				},
																				"src": "2193:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:7",
																					"nodeType": "YulBlock",
																					"src": "2463:166:7",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:7"
																										},
																										"nativeSrc": "2504:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:7"
																								},
																								"nativeSrc": "2498:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:7",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:7"
																																		},
																																		"nativeSrc": "2583:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:7"
																																},
																																"nativeSrc": "2579:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:7"
																																},
																																"nativeSrc": "2605:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:7"
																														},
																														"nativeSrc": "2575:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:7"
																												},
																												"nativeSrc": "2571:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:7"
																										},
																										"nativeSrc": "2556:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:7"
																								},
																								"nativeSrc": "2541:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:7"
																							},
																							"nativeSrc": "2541:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:7"
																					},
																					"nativeSrc": "2431:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:7"
																				},
																				"nativeSrc": "2428:201:7",
																				"nodeType": "YulIf",
																				"src": "2428:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:7"
																									},
																									"nativeSrc": "2659:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:7"
																							},
																							"nativeSrc": "2655:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:7"
																					},
																					"nativeSrc": "2642:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:7"
																				},
																				"nativeSrc": "2642:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:7"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:7",
																	"nodeType": "YulCase",
																	"src": "2039:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:7",
																		"nodeType": "YulBlock",
																		"src": "2705:234:7",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:7",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:7",
																					"nodeType": "YulBlock",
																					"src": "2768:67:7",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:7",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:7"
																										},
																										"nativeSrc": "2801:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:7"
																								},
																								"nativeSrc": "2795:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:7"
																				},
																				"nativeSrc": "2746:89:7",
																				"nodeType": "YulIf",
																				"src": "2746:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:7"
																							},
																							"nativeSrc": "2861:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:7"
																					},
																					"nativeSrc": "2848:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:7"
																				},
																				"nativeSrc": "2848:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:7"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:7",
																	"nodeType": "YulCase",
																	"src": "2697:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:7"
																},
																"nativeSrc": "2016:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:7"
															},
															"nativeSrc": "2009:930:7",
															"nodeType": "YulSwitch",
															"src": "2009:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:7",
														"nodeType": "YulTypedName",
														"src": "1727:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:7",
														"nodeType": "YulTypedName",
														"src": "1733:3:7",
														"type": ""
													}
												],
												"src": "1646:1299:7"
											},
											{
												"body": {
													"nativeSrc": "3051:102:7",
													"nodeType": "YulBlock",
													"src": "3051:102:7",
													"statements": [
														{
															"nativeSrc": "3061:26:7",
															"nodeType": "YulAssignment",
															"src": "3061:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:7"
																},
																"nativeSrc": "3069:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:7"
																						},
																						"nativeSrc": "3130:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:7"
																				},
																				"nativeSrc": "3126:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:7"
																		},
																		"nativeSrc": "3114:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:7"
																},
																"nativeSrc": "3096:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:7"
															},
															"nativeSrc": "3096:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:7",
														"nodeType": "YulTypedName",
														"src": "3020:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:7",
														"nodeType": "YulTypedName",
														"src": "3031:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:7",
														"nodeType": "YulTypedName",
														"src": "3042:4:7",
														"type": ""
													}
												],
												"src": "2950:203:7"
											},
											{
												"body": {
													"nativeSrc": "3190:95:7",
													"nodeType": "YulBlock",
													"src": "3190:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3207:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3207:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3214:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3214:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3219:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3219:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3210:3:7"
																		},
																		"nativeSrc": "3210:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3210:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3200:6:7"
																},
																"nativeSrc": "3200:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3200:31:7"
															},
															"nativeSrc": "3200:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3200:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3247:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3247:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3250:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3250:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3240:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:7"
																},
																"nativeSrc": "3240:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3240:15:7"
															},
															"nativeSrc": "3240:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3240:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3271:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3271:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3274:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3274:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3264:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:7"
																},
																"nativeSrc": "3264:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3264:15:7"
															},
															"nativeSrc": "3264:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3264:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3158:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3158:127:7"
											},
											{
												"body": {
													"nativeSrc": "3339:79:7",
													"nodeType": "YulBlock",
													"src": "3339:79:7",
													"statements": [
														{
															"nativeSrc": "3349:17:7",
															"nodeType": "YulAssignment",
															"src": "3349:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3361:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3361:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3364:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3364:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3357:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:7"
																},
																"nativeSrc": "3357:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3357:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3349:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3349:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3390:22:7",
																"nodeType": "YulBlock",
																"src": "3390:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3392:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3392:16:7"
																			},
																			"nativeSrc": "3392:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3392:18:7"
																		},
																		"nativeSrc": "3392:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3392:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3381:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3381:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3387:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3387:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3378:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3378:2:7"
																},
																"nativeSrc": "3378:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3378:11:7"
															},
															"nativeSrc": "3375:37:7",
															"nodeType": "YulIf",
															"src": "3375:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3290:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3321:1:7",
														"nodeType": "YulTypedName",
														"src": "3321:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3324:1:7",
														"nodeType": "YulTypedName",
														"src": "3324:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3330:4:7",
														"nodeType": "YulTypedName",
														"src": "3330:4:7",
														"type": ""
													}
												],
												"src": "3290:128:7"
											},
											{
												"body": {
													"nativeSrc": "3471:77:7",
													"nodeType": "YulBlock",
													"src": "3471:77:7",
													"statements": [
														{
															"nativeSrc": "3481:16:7",
															"nodeType": "YulAssignment",
															"src": "3481:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3492:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3492:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3495:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3495:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:7"
																},
																"nativeSrc": "3488:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3488:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3520:22:7",
																"nodeType": "YulBlock",
																"src": "3520:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3522:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3522:16:7"
																			},
																			"nativeSrc": "3522:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3522:18:7"
																		},
																		"nativeSrc": "3522:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3522:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3512:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3512:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3515:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3515:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3509:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3509:2:7"
																},
																"nativeSrc": "3509:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3509:10:7"
															},
															"nativeSrc": "3506:36:7",
															"nodeType": "YulIf",
															"src": "3506:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3423:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3454:1:7",
														"nodeType": "YulTypedName",
														"src": "3454:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3457:1:7",
														"nodeType": "YulTypedName",
														"src": "3457:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3463:3:7",
														"nodeType": "YulTypedName",
														"src": "3463:3:7",
														"type": ""
													}
												],
												"src": "3423:125:7"
											},
											{
												"body": {
													"nativeSrc": "3710:188:7",
													"nodeType": "YulBlock",
													"src": "3710:188:7",
													"statements": [
														{
															"nativeSrc": "3720:26:7",
															"nodeType": "YulAssignment",
															"src": "3720:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3732:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3732:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3743:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3743:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3728:3:7"
																},
																"nativeSrc": "3728:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3728:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3720:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3720:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3762:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3762:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3777:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3777:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3793:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3793:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3798:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3798:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3789:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3789:3:7"
																						},
																						"nativeSrc": "3789:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3789:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3802:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3802:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3785:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3785:3:7"
																				},
																				"nativeSrc": "3785:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3785:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:7"
																		},
																		"nativeSrc": "3773:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3755:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:7"
																},
																"nativeSrc": "3755:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:51:7"
															},
															"nativeSrc": "3755:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3755:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3837:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3837:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3822:3:7"
																		},
																		"nativeSrc": "3822:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3822:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3842:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3842:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:7"
																},
																"nativeSrc": "3815:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3815:34:7"
															},
															"nativeSrc": "3815:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3815:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3869:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3869:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3880:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3880:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3865:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3865:3:7"
																		},
																		"nativeSrc": "3865:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3865:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3885:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3858:6:7"
																},
																"nativeSrc": "3858:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3858:34:7"
															},
															"nativeSrc": "3858:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3858:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3553:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3663:9:7",
														"nodeType": "YulTypedName",
														"src": "3663:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3674:6:7",
														"nodeType": "YulTypedName",
														"src": "3674:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3682:6:7",
														"nodeType": "YulTypedName",
														"src": "3682:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3690:6:7",
														"nodeType": "YulTypedName",
														"src": "3690:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3701:4:7",
														"nodeType": "YulTypedName",
														"src": "3701:4:7",
														"type": ""
													}
												],
												"src": "3553:345:7"
											},
											{
												"body": {
													"nativeSrc": "4004:76:7",
													"nodeType": "YulBlock",
													"src": "4004:76:7",
													"statements": [
														{
															"nativeSrc": "4014:26:7",
															"nodeType": "YulAssignment",
															"src": "4014:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4026:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4037:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4022:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:7"
																},
																"nativeSrc": "4022:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4022:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4014:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4056:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4056:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4067:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4049:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:7"
																},
																"nativeSrc": "4049:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4049:25:7"
															},
															"nativeSrc": "4049:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4049:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3903:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3973:9:7",
														"nodeType": "YulTypedName",
														"src": "3973:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3984:6:7",
														"nodeType": "YulTypedName",
														"src": "3984:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3995:4:7",
														"nodeType": "YulTypedName",
														"src": "3995:4:7",
														"type": ""
													}
												],
												"src": "3903:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052600880546001600160a01b0319908116737ec13697d98925ba1dc2bcc705c071bd168b10c217909155600980548216738de119e98707ac240aba2cb77e83b29882a34357179055600a805482167303499c18f7265be9afda16504a34cd1892f278ae179055600b8054821673cc234a1d3e32148461b7eacb5a8bf4d0c4b6be74179055600c8054821673ceea0e87b553bc445c5eb2242b5f28cd81b4acaa179055600d8054909116737e23e2781a1da5dace87b4f0e7bf68191263fc321790553480156100cf575f80fd5b506040516116c93803806116c98339810160408190526100ee91610382565b8060405180604001604052806009815260200168212122102a37b5b2b760b91b8152506040518060400160405280600381526020016210909160ea1b815250816003908161013c9190610447565b5060046101498282610447565b5050506001600160a01b03811661017a57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610183816101d3565b5061019a816b033b2e3c9fd0803ce8000000610224565b6101c5306101c06b033b2e3c9fd0803ce80000006b204fce5e3e25026110000000610515565b610224565b50426080525f600655610541565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661024d5760405163ec442f0560e01b81525f6004820152602401610171565b6102585f838361025c565b5050565b6001600160a01b038316610286578060025f82825461027b919061052e565b909155506102f69050565b6001600160a01b0383165f90815260208190526040902054818110156102d85760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610171565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661031257600280548290039055610330565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161037591815260200190565b60405180910390a3505050565b5f60208284031215610392575f80fd5b81516001600160a01b03811681146103a8575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806103d757607f821691505b6020821081036103f557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561044257805f5260205f20601f840160051c810160208510156104205750805b601f840160051c820191505b8181101561043f575f815560010161042c565b50505b505050565b81516001600160401b03811115610460576104606103af565b6104748161046e84546103c3565b846103fb565b6020601f8211600181146104a6575f831561048f5750848201515b5f19600385901b1c1916600184901b17845561043f565b5f84815260208120601f198516915b828110156104d557878501518255602094850194600190920191016104b5565b50848210156104f257868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561052857610528610501565b92915050565b8082018082111561052857610528610501565b6080516111696105605f395f81816103a8015261089401526111695ff3fe608060405234801561000f575f80fd5b50600436106101a1575f3560e01c80638da5cb5b116100f3578063ce7842f511610093578063e6fd48bc1161006e578063e6fd48bc146103a3578063e8be9a44146103ca578063f2fde38b146103d2578063f968f493146103e5575f80fd5b8063ce7842f514610345578063d2f9efab14610358578063dd62ed3e1461036b575f80fd5b8063a779d080116100ce578063a779d080146102f3578063a9059cbb146102fc578063b361412a1461030f578063be381b8514610322575f80fd5b80638da5cb5b146102c7578063902d55a5146102d857806395d89b41146102eb575f80fd5b80632d3e474a1161015e57806370a082311161013957806370a082311461027c578063715018a6146102a45780638310a74d146102ac5780638342083a146102b5575f80fd5b80632d3e474a14610247578063313ce5671461025a57806367859b6e14610269575f80fd5b8063042249bb146101a557806306fdde03146101d5578063095ea7b3146101ea57806318160ddd1461020d57806323b872dd1461021f5780632be8781f14610232575b5f80fd5b600b546101b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101dd6103ed565b6040516101cc9190610f4f565b6101fd6101f8366004610f9f565b61047d565b60405190151581526020016101cc565b6002545b6040519081526020016101cc565b6101fd61022d366004610fc7565b610496565b610245610240366004611001565b6104b9565b005b600a546101b8906001600160a01b031681565b604051601281526020016101cc565b6008546101b8906001600160a01b031681565b61021161028a36600461102b565b6001600160a01b03165f9081526020819052604090205490565b6102456105ff565b61021160065481565b610211676765c793fa10079d601b1b81565b6005546001600160a01b03166101b8565b6102116b204fce5e3e2502611000000081565b6101dd610612565b61021160075481565b6101fd61030a366004610f9f565b610621565b600d546101b8906001600160a01b031681565b61032a61062e565b604080519384526020840192909252908201526060016101cc565b600c546101b8906001600160a01b031681565b6009546101b8906001600160a01b031681565b61021161037936600461104b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102116107b0565b6102456103e036600461102b565b6107d4565b610245610811565b6060600380546103fc90611073565b80601f016020809104026020016040519081016040528092919081815260200182805461042890611073565b80156104735780601f1061044a57610100808354040283529160200191610473565b820191905f5260205f20905b81548152906001019060200180831161045657829003601f168201915b5050505050905090565b5f3361048a818585610bee565b60019150505b92915050565b5f336104a3858285610c00565b6104ae858585610c7c565b506001949350505050565b6104c1610cd9565b600182101580156104d3575060068211155b6105145760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064015b60405180910390fd5b8160010361053b57600880546001600160a01b0319166001600160a01b0383161790555050565b8160020361056257600980546001600160a01b0319166001600160a01b0383161790555050565b8160030361058957600a80546001600160a01b0319166001600160a01b0383161790555050565b816004036105b057600b80546001600160a01b0319166001600160a01b0383161790555050565b816005036105d757600c80546001600160a01b0319166001600160a01b0383161790555050565b816006036105fb57600d80546001600160a01b0319166001600160a01b0383161790555b5050565b610607610cd9565b6106105f610d06565b565b6060600480546103fc90611073565b5f3361048a818585610c7c565b5f805f80600654600161064191906110bf565b90506003811161068b576103e861066f676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b61067a9060056110e5565b61068491906110fc565b9250610732565b600681116106c15760646106b6676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b61067a9060016110e5565b600981116106f75760646106ec676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b61067a9060026110e5565b606461071a676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b6107259060036110e5565b61072f91906110fc565b92505b610753676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b60075461076090856110bf565b11156107975760075461078a676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b61079491906110d2565b92505b80836107a46006826110fc565b93509350935050909192565b6107d1676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b81565b6107dc610cd9565b6001600160a01b03811661080557604051631e4fbdf760e01b81525f600482015260240161050b565b61080e81610d06565b50565b610819610cd9565b61083a676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b6007541061088a5760405162461bcd60e51b815260206004820152601b60248201527f416c6c20746f6b656e7320616c726561647920756e6c6f636b65640000000000604482015260640161050b565b5f62278d006108b97f0000000000000000000000000000000000000000000000000000000000000000426110d2565b6108c391906110fc565b9050600654811161090f5760405162461bcd60e51b81526020600482015260166024820152754e6f206e6577206d6f6e746820746f20756e6c6f636b60501b604482015260640161050b565b5f80600654600161092091906110bf565b90505b828111610a3f576003811161097c576103e8610956676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b6109619060056110e5565b61096b91906110fc565b61097590836110bf565b9150610a2d565b600681116109b25760646109a7676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b6109619060016110e5565b600981116109e85760646109dd676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b6109619060026110e5565b6064610a0b676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b610a169060036110e5565b610a2091906110fc565b610a2a90836110bf565b91505b80610a378161111b565b915050610923565b50610a61676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b600754610a6e90836110bf565b1115610aa557600754610a98676765c793fa10079d601b1b6b204fce5e3e250261100000006110d2565b610aa291906110d2565b90505b5f8111610ae85760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b604482015260640161050b565b816006819055508060075f828254610b0091906110bf565b909155505f9050610b126006836110fc565b600854909150610b2d9030906001600160a01b031683610c7c565b600954610b459030906001600160a01b031683610c7c565b600a54610b5d9030906001600160a01b031683610c7c565b600b54610b759030906001600160a01b031683610c7c565b600c54610b8d9030906001600160a01b031683610c7c565b600d54610ba59030906001600160a01b031683610c7c565b60065460075460408051928352602083018490528201527fd5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac9060600160405180910390a1505050565b610bfb8383836001610d57565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610c765781811015610c6857604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161050b565b610c7684848484035f610d57565b50505050565b6001600160a01b038316610ca557604051634b637e8f60e11b81525f600482015260240161050b565b6001600160a01b038216610cce5760405163ec442f0560e01b81525f600482015260240161050b565b610bfb838383610e29565b6005546001600160a01b031633146106105760405163118cdaa760e01b815233600482015260240161050b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610d805760405163e602df0560e01b81525f600482015260240161050b565b6001600160a01b038316610da957604051634a1406b160e11b81525f600482015260240161050b565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610c7657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e1b91815260200190565b60405180910390a350505050565b6001600160a01b038316610e53578060025f828254610e4891906110bf565b90915550610ec39050565b6001600160a01b0383165f9081526020819052604090205481811015610ea55760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161050b565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610edf57600280548290039055610efd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4291815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610f9a575f80fd5b919050565b5f8060408385031215610fb0575f80fd5b610fb983610f84565b946020939093013593505050565b5f805f60608486031215610fd9575f80fd5b610fe284610f84565b9250610ff060208501610f84565b929592945050506040919091013590565b5f8060408385031215611012575f80fd5b8235915061102260208401610f84565b90509250929050565b5f6020828403121561103b575f80fd5b61104482610f84565b9392505050565b5f806040838503121561105c575f80fd5b61106583610f84565b915061102260208401610f84565b600181811c9082168061108757607f821691505b6020821081036110a557634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610490576104906110ab565b81810381811115610490576104906110ab565b8082028115828204841417610490576104906110ab565b5f8261111657634e487b7160e01b5f52601260045260245ffd5b500490565b5f6001820161112c5761112c6110ab565b506001019056fea26469706673582212204f50d3555b15df4cd371fd98e7f80921811010daed5a59b573c3b0864e9abca364736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x7EC13697D98925BA1DC2BCC705C071BD168B10C2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH20 0x8DE119E98707AC240ABA2CB77E83B29882A34357 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND PUSH20 0x3499C18F7265BE9AFDA16504A34CD1892F278AE OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD DUP3 AND PUSH20 0xCC234A1D3E32148461B7EACB5A8BF4D0C4B6BE74 OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP3 AND PUSH20 0xCEEA0E87B553BC445C5EB2242B5F28CD81B4ACAA OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x7E23E2781A1DA5DACE87B4F0E7BF68191263FC32 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16C9 CODESIZE SUB DUP1 PUSH2 0x16C9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0xEE SWAP2 PUSH2 0x382 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x212122102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x109091 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x149 DUP3 DUP3 PUSH2 0x447 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x183 DUP2 PUSH2 0x1D3 JUMP JUMPDEST POP PUSH2 0x19A DUP2 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x224 JUMP JUMPDEST PUSH2 0x1C5 ADDRESS PUSH2 0x1C0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x515 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x80 MSTORE PUSH0 PUSH1 0x6 SSTORE PUSH2 0x541 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x24D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x258 PUSH0 DUP4 DUP4 PUSH2 0x25C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x286 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x52E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2F6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x312 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x330 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x442 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x420 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x42C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x460 JUMPI PUSH2 0x460 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x46E DUP5 SLOAD PUSH2 0x3C3 JUMP JUMPDEST DUP5 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4A6 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x48F JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x43F JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4B5 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4F2 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x528 JUMPI PUSH2 0x528 PUSH2 0x501 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x528 JUMPI PUSH2 0x528 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1169 PUSH2 0x560 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3A8 ADD MSTORE PUSH2 0x894 ADD MSTORE PUSH2 0x1169 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xCE7842F5 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE6FD48BC GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xE8BE9A44 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x3E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xD2F9EFAB EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA779D080 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xA779D080 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xB361412A EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xBE381B85 EQ PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D3E474A GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8310A74D EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x8342083A EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x67859B6E EQ PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42249BB EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2BE8781F EQ PUSH2 0x232 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x211 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x211 PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x612 JUMP JUMPDEST PUSH2 0x211 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x32A PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0x1073 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x1073 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x473 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x473 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x456 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48A DUP2 DUP6 DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4A3 DUP6 DUP3 DUP6 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x4AE DUP6 DUP6 DUP6 PUSH2 0xC7C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x4D3 JUMPI POP PUSH1 0x6 DUP3 GT ISZERO JUMPDEST PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x53B JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x562 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x589 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x5B0 JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x5D7 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x5FB JUMPI PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x607 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x610 PUSH0 PUSH2 0xD06 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0x1073 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48A DUP2 DUP6 DUP6 PUSH2 0xC7C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 GT PUSH2 0x68B JUMPI PUSH2 0x3E8 PUSH2 0x66F PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x67A SWAP1 PUSH1 0x5 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP PUSH2 0x732 JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x6C1 JUMPI PUSH1 0x64 PUSH2 0x6B6 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x67A SWAP1 PUSH1 0x1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x6F7 JUMPI PUSH1 0x64 PUSH2 0x6EC PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x67A SWAP1 PUSH1 0x2 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x71A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x725 SWAP1 PUSH1 0x3 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x753 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x760 SWAP1 DUP6 PUSH2 0x10BF JUMP JUMPDEST GT ISZERO PUSH2 0x797 JUMPI PUSH1 0x7 SLOAD PUSH2 0x78A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP4 PUSH2 0x7A4 PUSH1 0x6 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x7D1 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0x80E DUP2 PUSH2 0xD06 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x819 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x83A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH2 0x8B9 PUSH32 0x0 TIMESTAMP PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x8C3 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F206E6577206D6F6E746820746F20756E6C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xA3F JUMPI PUSH1 0x3 DUP2 GT PUSH2 0x97C JUMPI PUSH2 0x3E8 PUSH2 0x956 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x961 SWAP1 PUSH1 0x5 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0x975 SWAP1 DUP4 PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x9B2 JUMPI PUSH1 0x64 PUSH2 0x9A7 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x961 SWAP1 PUSH1 0x1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x9E8 JUMPI PUSH1 0x64 PUSH2 0x9DD PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x961 SWAP1 PUSH1 0x2 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA0B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0xA16 SWAP1 PUSH1 0x3 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xA2A SWAP1 DUP4 PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xA37 DUP2 PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x923 JUMP JUMPDEST POP PUSH2 0xA61 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xA6E SWAP1 DUP4 PUSH2 0x10BF JUMP JUMPDEST GT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA98 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F20756E6C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0xB12 PUSH1 0x6 DUP4 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0xB2D SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xB45 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xB5D SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xB75 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xB8D SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xBA5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xBFB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xC76 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0xC76 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0xBFB DUP4 DUP4 DUP4 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC76 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE48 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xEC3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEDF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF9A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB9 DUP4 PUSH2 0xF84 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFE2 DUP5 PUSH2 0xF84 JUMP JUMPDEST SWAP3 POP PUSH2 0xFF0 PUSH1 0x20 DUP6 ADD PUSH2 0xF84 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1012 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1022 PUSH1 0x20 DUP5 ADD PUSH2 0xF84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1044 DUP3 PUSH2 0xF84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1065 DUP4 PUSH2 0xF84 JUMP JUMPDEST SWAP2 POP PUSH2 0x1022 PUSH1 0x20 DUP5 ADD PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1087 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x10AB JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x10AB JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x10AB JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1116 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x112C JUMPI PUSH2 0x112C PUSH2 0x10AB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F POP 0xD3 SSTORE JUMPDEST ISZERO 0xDF 0x4C 0xD3 PUSH18 0xFD98E7F80921811010DAED5A59B573C3B086 0x4E SWAP11 0xBC LOG3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "174:4042:6:-:0;;;548:76;;;-1:-1:-1;;;;;;548:76:6;;;582:42;548:76;;;;631:72;;;;;661:42;631:72;;;710:69;;;;;737:42;710:69;;;786:73;;;;;817:42;786:73;;;866;;;;;897:42;866:73;;;946:70;;;;;;974:42;946:70;;;1117:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1179:6;1582:113:2;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3096:51:7;3069:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1198:28:6::2;1204:6:::0;324:20:::2;1198:5;:28::i;:::-;1268:35;1282:4;391:28;324:20;256:21;391:28;:::i;:::-;1268:5;:35::i;:::-;-1:-1:-1::0;1373:15:6::2;1356:32;::::0;1417:1:::2;1399:15;:19:::0;174:4042;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:2:-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;3096:51:7;3069:18;;7553:32:2;2950:203:7;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;3773:32:7;;6367:50:2;;;3755:51:7;3822:18;;;3815:34;;;3865:18;;;3858:34;;;3728:18;;6367:50:2;3553:345:7;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;4049::7;;4037:2;4022:18;;3903:177;7064:25:2;;;;;;;;5989:1107;;;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:7;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:7;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:7;;;2795:26;2746:89;-1:-1:-1;;1603:1:7;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:7;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:7;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:7;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:7:o;3158:127::-;3219:10;3214:3;3210:20;3207:1;3200:31;3250:4;3247:1;3240:15;3274:4;3271:1;3264:15;3290:128;3357:9;;;3378:11;;;3375:37;;;3392:18;;:::i;:::-;3290:128;;;;:::o;3423:125::-;3488:9;;;3509:10;;;3506:36;;;3522:18;;:::i;3903:177::-;174:4042:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LOCKED_SUPPLY_956": {
									"entryPoint": 1968,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PUBLIC_SUPPLY_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3054,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3415,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3289,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3072,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3334,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3196,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3625,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1149,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@awardBonus_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@gameTreasury_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getNextUnlockInfo_1374": {
									"entryPoint": 1582,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@lastUnlockMonth_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityListing_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketing_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1005,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@referralBonus_977": {
									"entryPoint": null,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1535,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingReward_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTimestamp_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1554,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalUnlocked_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_482": {
									"entryPoint": 1174,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2004,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1569,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockTokens_1217": {
									"entryPoint": 2065,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateDistributionAddress_1286": {
									"entryPoint": 1209,
									"id": 1286,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6212:7",
										"nodeType": "YulBlock",
										"src": "0:6212:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:7",
													"nodeType": "YulBlock",
													"src": "115:102:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:7",
																								"nodeType": "YulLiteral",
																								"src": "198:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:7",
																								"nodeType": "YulLiteral",
																								"src": "203:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:7"
																						},
																						"nativeSrc": "194:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:7",
																						"nodeType": "YulLiteral",
																						"src": "207:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:7"
																				},
																				"nativeSrc": "190:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:7"
																		},
																		"nativeSrc": "178:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:51:7",
																"nodeType": "YulFunctionCall",
																"src": "160:51:7"
															},
															"nativeSrc": "160:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:203:7"
											},
											{
												"body": {
													"nativeSrc": "343:297:7",
													"nodeType": "YulBlock",
													"src": "343:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "371:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:7"
																},
																"nativeSrc": "353:21:7",
																"nodeType": "YulFunctionCall",
																"src": "353:21:7"
															},
															"nativeSrc": "353:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:7"
														},
														{
															"nativeSrc": "383:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:7"
																},
																"nativeSrc": "397:13:7",
																"nodeType": "YulFunctionCall",
																"src": "397:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:7",
																	"nodeType": "YulTypedName",
																	"src": "387:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:7",
																				"nodeType": "YulLiteral",
																				"src": "441:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:7"
																		},
																		"nativeSrc": "426:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:7"
																},
																"nativeSrc": "419:34:7",
																"nodeType": "YulFunctionCall",
																"src": "419:34:7"
															},
															"nativeSrc": "419:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:7",
																				"nodeType": "YulLiteral",
																				"src": "483:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:7"
																		},
																		"nativeSrc": "468:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "492:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:7",
																				"nodeType": "YulLiteral",
																				"src": "500:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:7"
																		},
																		"nativeSrc": "488:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "488:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "505:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "462:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:7"
																},
																"nativeSrc": "462:50:7",
																"nodeType": "YulFunctionCall",
																"src": "462:50:7"
															},
															"nativeSrc": "462:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "462:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "536:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "536:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "547:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "547:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "532:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:7"
																				},
																				"nativeSrc": "532:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "532:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:7",
																				"nodeType": "YulLiteral",
																				"src": "556:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:7"
																		},
																		"nativeSrc": "528:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "528:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:7",
																		"nodeType": "YulLiteral",
																		"src": "561:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:7"
																},
																"nativeSrc": "521:42:7",
																"nodeType": "YulFunctionCall",
																"src": "521:42:7"
															},
															"nativeSrc": "521:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "521:42:7"
														},
														{
															"nativeSrc": "572:62:7",
															"nodeType": "YulAssignment",
															"src": "572:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "607:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "607:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "615:2:7",
																								"nodeType": "YulLiteral",
																								"src": "615:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "603:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "603:3:7"
																						},
																						"nativeSrc": "603:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "603:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "624:2:7",
																								"nodeType": "YulLiteral",
																								"src": "624:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "620:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:7"
																						},
																						"nativeSrc": "620:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "620:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "599:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:7"
																				},
																				"nativeSrc": "599:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "599:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:7"
																		},
																		"nativeSrc": "584:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "584:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "631:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "580:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:7"
																},
																"nativeSrc": "580:54:7",
																"nodeType": "YulFunctionCall",
																"src": "580:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "572:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "572:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:7",
														"nodeType": "YulTypedName",
														"src": "312:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:7",
														"nodeType": "YulTypedName",
														"src": "323:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:7",
														"nodeType": "YulTypedName",
														"src": "334:4:7",
														"type": ""
													}
												],
												"src": "222:418:7"
											},
											{
												"body": {
													"nativeSrc": "694:124:7",
													"nodeType": "YulBlock",
													"src": "694:124:7",
													"statements": [
														{
															"nativeSrc": "704:29:7",
															"nodeType": "YulAssignment",
															"src": "704:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:7"
																},
																"nativeSrc": "713:20:7",
																"nodeType": "YulFunctionCall",
																"src": "713:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:7",
																"nodeType": "YulBlock",
																"src": "796:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:7",
																					"nodeType": "YulLiteral",
																					"src": "805:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:7",
																					"nodeType": "YulLiteral",
																					"src": "808:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:7"
																			},
																			"nativeSrc": "798:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:7"
																		},
																		"nativeSrc": "798:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:7",
																										"nodeType": "YulLiteral",
																										"src": "781:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:7",
																										"nodeType": "YulLiteral",
																										"src": "786:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:7"
																								},
																								"nativeSrc": "777:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:7",
																								"nodeType": "YulLiteral",
																								"src": "790:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:7"
																						},
																						"nativeSrc": "773:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:7"
																				},
																				"nativeSrc": "762:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:7"
																		},
																		"nativeSrc": "752:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nativeSrc": "745:50:7",
																"nodeType": "YulFunctionCall",
																"src": "745:50:7"
															},
															"nativeSrc": "742:70:7",
															"nodeType": "YulIf",
															"src": "742:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:7",
														"nodeType": "YulTypedName",
														"src": "673:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:7",
														"nodeType": "YulTypedName",
														"src": "684:5:7",
														"type": ""
													}
												],
												"src": "645:173:7"
											},
											{
												"body": {
													"nativeSrc": "910:213:7",
													"nodeType": "YulBlock",
													"src": "910:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:7",
																"nodeType": "YulBlock",
																"src": "956:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:7",
																					"nodeType": "YulLiteral",
																					"src": "965:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:7",
																					"nodeType": "YulLiteral",
																					"src": "968:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:7"
																			},
																			"nativeSrc": "958:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:7"
																		},
																		"nativeSrc": "958:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:7"
																		},
																		"nativeSrc": "927:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:7",
																		"nodeType": "YulLiteral",
																		"src": "952:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:7"
																},
																"nativeSrc": "923:32:7",
																"nodeType": "YulFunctionCall",
																"src": "923:32:7"
															},
															"nativeSrc": "920:52:7",
															"nodeType": "YulIf",
															"src": "920:52:7"
														},
														{
															"nativeSrc": "981:39:7",
															"nodeType": "YulAssignment",
															"src": "981:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:7"
																},
																"nativeSrc": "991:29:7",
																"nodeType": "YulFunctionCall",
																"src": "991:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:7"
																}
															]
														},
														{
															"nativeSrc": "1029:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:7",
																"nodeType": "YulLiteral",
																"src": "1042:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:7",
															"nodeType": "YulAssignment",
															"src": "1052:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:7"
																		},
																		"nativeSrc": "1074:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:7"
																},
																"nativeSrc": "1061:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:7"
																}
															]
														},
														{
															"nativeSrc": "1102:15:7",
															"nodeType": "YulAssignment",
															"src": "1102:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:7",
																"nodeType": "YulIdentifier",
																"src": "1112:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:7",
														"nodeType": "YulTypedName",
														"src": "868:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:7",
														"nodeType": "YulTypedName",
														"src": "879:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:7",
														"nodeType": "YulTypedName",
														"src": "899:6:7",
														"type": ""
													}
												],
												"src": "823:300:7"
											},
											{
												"body": {
													"nativeSrc": "1223:92:7",
													"nodeType": "YulBlock",
													"src": "1223:92:7",
													"statements": [
														{
															"nativeSrc": "1233:26:7",
															"nodeType": "YulAssignment",
															"src": "1233:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:7"
																},
																"nativeSrc": "1241:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:7"
																				},
																				"nativeSrc": "1293:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:7"
																		},
																		"nativeSrc": "1286:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:7"
																},
																"nativeSrc": "1268:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:7"
															},
															"nativeSrc": "1268:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:7",
														"nodeType": "YulTypedName",
														"src": "1192:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:7",
														"nodeType": "YulTypedName",
														"src": "1203:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:7",
														"nodeType": "YulTypedName",
														"src": "1214:4:7",
														"type": ""
													}
												],
												"src": "1128:187:7"
											},
											{
												"body": {
													"nativeSrc": "1421:76:7",
													"nodeType": "YulBlock",
													"src": "1421:76:7",
													"statements": [
														{
															"nativeSrc": "1431:26:7",
															"nodeType": "YulAssignment",
															"src": "1431:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:7"
																},
																"nativeSrc": "1439:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:7"
																},
																"nativeSrc": "1466:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:7"
															},
															"nativeSrc": "1466:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:7",
														"nodeType": "YulTypedName",
														"src": "1390:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:7",
														"nodeType": "YulTypedName",
														"src": "1401:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:7",
														"nodeType": "YulTypedName",
														"src": "1412:4:7",
														"type": ""
													}
												],
												"src": "1320:177:7"
											},
											{
												"body": {
													"nativeSrc": "1606:270:7",
													"nodeType": "YulBlock",
													"src": "1606:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:7",
																"nodeType": "YulBlock",
																"src": "1652:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:7"
																			},
																			"nativeSrc": "1654:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:7"
																		},
																		"nativeSrc": "1654:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:7"
																		},
																		"nativeSrc": "1623:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:7"
																},
																"nativeSrc": "1619:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:7"
															},
															"nativeSrc": "1616:52:7",
															"nodeType": "YulIf",
															"src": "1616:52:7"
														},
														{
															"nativeSrc": "1677:39:7",
															"nodeType": "YulAssignment",
															"src": "1677:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:7"
																},
																"nativeSrc": "1687:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:7"
																}
															]
														},
														{
															"nativeSrc": "1725:48:7",
															"nodeType": "YulAssignment",
															"src": "1725:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:7"
																		},
																		"nativeSrc": "1754:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:7"
																},
																"nativeSrc": "1735:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:7"
																}
															]
														},
														{
															"nativeSrc": "1782:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:7",
																"nodeType": "YulLiteral",
																"src": "1795:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:7",
															"nodeType": "YulAssignment",
															"src": "1805:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:7"
																		},
																		"nativeSrc": "1827:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:7"
																},
																"nativeSrc": "1814:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:7"
																}
															]
														},
														{
															"nativeSrc": "1855:15:7",
															"nodeType": "YulAssignment",
															"src": "1855:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:7",
																"nodeType": "YulIdentifier",
																"src": "1865:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:7",
														"nodeType": "YulTypedName",
														"src": "1556:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:7",
														"nodeType": "YulTypedName",
														"src": "1567:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:7",
														"nodeType": "YulTypedName",
														"src": "1579:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:7",
														"nodeType": "YulTypedName",
														"src": "1587:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:7",
														"nodeType": "YulTypedName",
														"src": "1595:6:7",
														"type": ""
													}
												],
												"src": "1502:374:7"
											},
											{
												"body": {
													"nativeSrc": "1968:213:7",
													"nodeType": "YulBlock",
													"src": "1968:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2014:16:7",
																"nodeType": "YulBlock",
																"src": "2014:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2023:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2023:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2026:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2026:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2016:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2016:6:7"
																			},
																			"nativeSrc": "2016:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2016:12:7"
																		},
																		"nativeSrc": "2016:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2016:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1989:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1989:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1998:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1998:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:7"
																		},
																		"nativeSrc": "1985:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2010:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2010:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:7"
																},
																"nativeSrc": "1981:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1981:32:7"
															},
															"nativeSrc": "1978:52:7",
															"nodeType": "YulIf",
															"src": "1978:52:7"
														},
														{
															"nativeSrc": "2039:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2039:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2052:1:7",
																"nodeType": "YulLiteral",
																"src": "2052:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2043:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2043:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2062:32:7",
															"nodeType": "YulAssignment",
															"src": "2062:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2084:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2084:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2071:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2071:12:7"
																},
																"nativeSrc": "2071:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2071:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2062:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2062:5:7"
																}
															]
														},
														{
															"nativeSrc": "2103:15:7",
															"nodeType": "YulAssignment",
															"src": "2103:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2113:5:7",
																"nodeType": "YulIdentifier",
																"src": "2113:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2103:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:7"
																}
															]
														},
														{
															"nativeSrc": "2127:48:7",
															"nodeType": "YulAssignment",
															"src": "2127:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2160:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2171:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2171:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2156:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:7"
																		},
																		"nativeSrc": "2156:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2137:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2137:18:7"
																},
																"nativeSrc": "2137:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2137:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1881:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1926:9:7",
														"nodeType": "YulTypedName",
														"src": "1926:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1937:7:7",
														"nodeType": "YulTypedName",
														"src": "1937:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1949:6:7",
														"nodeType": "YulTypedName",
														"src": "1949:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1957:6:7",
														"nodeType": "YulTypedName",
														"src": "1957:6:7",
														"type": ""
													}
												],
												"src": "1881:300:7"
											},
											{
												"body": {
													"nativeSrc": "2283:87:7",
													"nodeType": "YulBlock",
													"src": "2283:87:7",
													"statements": [
														{
															"nativeSrc": "2293:26:7",
															"nodeType": "YulAssignment",
															"src": "2293:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2305:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2305:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2316:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2316:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:7"
																},
																"nativeSrc": "2301:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2301:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2293:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2293:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2335:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2350:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2350:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2358:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2358:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2346:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2346:3:7"
																		},
																		"nativeSrc": "2346:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2346:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2328:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:7"
																},
																"nativeSrc": "2328:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2328:36:7"
															},
															"nativeSrc": "2328:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2328:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2186:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2252:9:7",
														"nodeType": "YulTypedName",
														"src": "2252:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2263:6:7",
														"nodeType": "YulTypedName",
														"src": "2263:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2274:4:7",
														"nodeType": "YulTypedName",
														"src": "2274:4:7",
														"type": ""
													}
												],
												"src": "2186:184:7"
											},
											{
												"body": {
													"nativeSrc": "2445:116:7",
													"nodeType": "YulBlock",
													"src": "2445:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2491:16:7",
																"nodeType": "YulBlock",
																"src": "2491:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2500:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2500:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2503:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2493:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:7"
																			},
																			"nativeSrc": "2493:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:12:7"
																		},
																		"nativeSrc": "2493:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2466:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2466:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2462:3:7"
																		},
																		"nativeSrc": "2462:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2462:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:7"
																},
																"nativeSrc": "2458:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2458:32:7"
															},
															"nativeSrc": "2455:52:7",
															"nodeType": "YulIf",
															"src": "2455:52:7"
														},
														{
															"nativeSrc": "2516:39:7",
															"nodeType": "YulAssignment",
															"src": "2516:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2545:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2545:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2526:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2526:18:7"
																},
																"nativeSrc": "2526:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2526:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2375:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2411:9:7",
														"nodeType": "YulTypedName",
														"src": "2411:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2422:7:7",
														"nodeType": "YulTypedName",
														"src": "2422:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2434:6:7",
														"nodeType": "YulTypedName",
														"src": "2434:6:7",
														"type": ""
													}
												],
												"src": "2375:186:7"
											},
											{
												"body": {
													"nativeSrc": "2723:162:7",
													"nodeType": "YulBlock",
													"src": "2723:162:7",
													"statements": [
														{
															"nativeSrc": "2733:26:7",
															"nodeType": "YulAssignment",
															"src": "2733:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2745:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2745:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2756:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2756:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2741:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:7"
																},
																"nativeSrc": "2741:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2741:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2733:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2733:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2775:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2775:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2786:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:7"
																},
																"nativeSrc": "2768:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2768:25:7"
															},
															"nativeSrc": "2768:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "2768:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2813:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2813:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2824:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2824:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2809:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:7"
																		},
																		"nativeSrc": "2809:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2809:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2829:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2802:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:7"
																},
																"nativeSrc": "2802:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2802:34:7"
															},
															"nativeSrc": "2802:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2802:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2856:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2867:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2867:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:7"
																		},
																		"nativeSrc": "2852:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2872:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2845:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:7"
																},
																"nativeSrc": "2845:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2845:34:7"
															},
															"nativeSrc": "2845:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2845:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2566:319:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2676:9:7",
														"nodeType": "YulTypedName",
														"src": "2676:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2687:6:7",
														"nodeType": "YulTypedName",
														"src": "2687:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2695:6:7",
														"nodeType": "YulTypedName",
														"src": "2695:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2703:6:7",
														"nodeType": "YulTypedName",
														"src": "2703:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2714:4:7",
														"nodeType": "YulTypedName",
														"src": "2714:4:7",
														"type": ""
													}
												],
												"src": "2566:319:7"
											},
											{
												"body": {
													"nativeSrc": "2977:173:7",
													"nodeType": "YulBlock",
													"src": "2977:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3023:16:7",
																"nodeType": "YulBlock",
																"src": "3023:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3032:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3032:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3035:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3035:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3025:6:7"
																			},
																			"nativeSrc": "3025:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3025:12:7"
																		},
																		"nativeSrc": "3025:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3025:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2998:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2998:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3007:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2994:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:7"
																		},
																		"nativeSrc": "2994:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2994:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3019:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2990:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2990:3:7"
																},
																"nativeSrc": "2990:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2990:32:7"
															},
															"nativeSrc": "2987:52:7",
															"nodeType": "YulIf",
															"src": "2987:52:7"
														},
														{
															"nativeSrc": "3048:39:7",
															"nodeType": "YulAssignment",
															"src": "3048:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3077:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3077:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3058:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3058:18:7"
																},
																"nativeSrc": "3058:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3058:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:7"
																}
															]
														},
														{
															"nativeSrc": "3096:48:7",
															"nodeType": "YulAssignment",
															"src": "3096:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3129:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3129:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3140:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3140:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3125:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:7"
																		},
																		"nativeSrc": "3125:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3106:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3106:18:7"
																},
																"nativeSrc": "3106:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3106:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3096:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2890:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2935:9:7",
														"nodeType": "YulTypedName",
														"src": "2935:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2958:6:7",
														"nodeType": "YulTypedName",
														"src": "2958:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2966:6:7",
														"nodeType": "YulTypedName",
														"src": "2966:6:7",
														"type": ""
													}
												],
												"src": "2890:260:7"
											},
											{
												"body": {
													"nativeSrc": "3210:325:7",
													"nodeType": "YulBlock",
													"src": "3210:325:7",
													"statements": [
														{
															"nativeSrc": "3220:22:7",
															"nodeType": "YulAssignment",
															"src": "3220:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3234:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3237:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3230:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:7"
																},
																"nativeSrc": "3230:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3230:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:7"
																}
															]
														},
														{
															"nativeSrc": "3251:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3251:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3281:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3277:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3277:3:7"
																},
																"nativeSrc": "3277:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3277:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3255:18:7",
																	"nodeType": "YulTypedName",
																	"src": "3255:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3328:31:7",
																"nodeType": "YulBlock",
																"src": "3328:31:7",
																"statements": [
																	{
																		"nativeSrc": "3330:27:7",
																		"nodeType": "YulAssignment",
																		"src": "3330:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3344:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3344:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3352:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3352:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3340:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3340:3:7"
																			},
																			"nativeSrc": "3340:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3340:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3330:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3330:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3308:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3308:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:7"
																},
																"nativeSrc": "3301:26:7",
																"nodeType": "YulFunctionCall",
																"src": "3301:26:7"
															},
															"nativeSrc": "3298:61:7",
															"nodeType": "YulIf",
															"src": "3298:61:7"
														},
														{
															"body": {
																"nativeSrc": "3418:111:7",
																"nodeType": "YulBlock",
																"src": "3418:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3439:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3439:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3446:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3446:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3451:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3451:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3442:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3442:3:7"
																					},
																					"nativeSrc": "3442:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3442:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3432:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3432:6:7"
																			},
																			"nativeSrc": "3432:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3432:31:7"
																		},
																		"nativeSrc": "3432:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3432:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3483:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3486:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3486:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3476:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:7"
																			},
																			"nativeSrc": "3476:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:15:7"
																		},
																		"nativeSrc": "3476:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3511:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3514:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3514:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3504:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:7"
																			},
																			"nativeSrc": "3504:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3504:15:7"
																		},
																		"nativeSrc": "3504:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3374:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3374:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3397:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3397:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3405:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3405:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3394:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3394:2:7"
																		},
																		"nativeSrc": "3394:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3371:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3371:2:7"
																},
																"nativeSrc": "3371:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3371:38:7"
															},
															"nativeSrc": "3368:161:7",
															"nodeType": "YulIf",
															"src": "3368:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3155:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3190:4:7",
														"nodeType": "YulTypedName",
														"src": "3190:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"src": "3155:380:7"
											},
											{
												"body": {
													"nativeSrc": "3714:163:7",
													"nodeType": "YulBlock",
													"src": "3714:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3731:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3731:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3742:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3724:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:7"
																},
																"nativeSrc": "3724:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3724:21:7"
															},
															"nativeSrc": "3724:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3724:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3765:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3765:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3776:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3761:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:7"
																		},
																		"nativeSrc": "3761:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3781:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:7"
																},
																"nativeSrc": "3754:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3754:30:7"
															},
															"nativeSrc": "3754:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3754:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3804:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3804:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3815:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3815:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3800:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3800:3:7"
																		},
																		"nativeSrc": "3800:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3800:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420696e646578",
																		"kind": "string",
																		"nativeSrc": "3820:15:7",
																		"nodeType": "YulLiteral",
																		"src": "3820:15:7",
																		"type": "",
																		"value": "Invalid index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3793:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:7"
																},
																"nativeSrc": "3793:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3793:43:7"
															},
															"nativeSrc": "3793:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "3793:43:7"
														},
														{
															"nativeSrc": "3845:26:7",
															"nodeType": "YulAssignment",
															"src": "3845:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3857:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3857:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3868:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3868:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3853:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3853:3:7"
																},
																"nativeSrc": "3853:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3853:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3845:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3845:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3540:337:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3691:9:7",
														"nodeType": "YulTypedName",
														"src": "3691:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3705:4:7",
														"nodeType": "YulTypedName",
														"src": "3705:4:7",
														"type": ""
													}
												],
												"src": "3540:337:7"
											},
											{
												"body": {
													"nativeSrc": "3914:95:7",
													"nodeType": "YulBlock",
													"src": "3914:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3931:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3931:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3938:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3938:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3943:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3943:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:7"
																		},
																		"nativeSrc": "3934:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3924:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3924:6:7"
																},
																"nativeSrc": "3924:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3924:31:7"
															},
															"nativeSrc": "3924:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3924:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3971:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3974:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3974:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:7"
																},
																"nativeSrc": "3964:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3964:15:7"
															},
															"nativeSrc": "3964:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3964:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3995:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3995:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3998:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3998:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3988:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:7"
																},
																"nativeSrc": "3988:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3988:15:7"
															},
															"nativeSrc": "3988:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3988:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3882:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3882:127:7"
											},
											{
												"body": {
													"nativeSrc": "4062:77:7",
													"nodeType": "YulBlock",
													"src": "4062:77:7",
													"statements": [
														{
															"nativeSrc": "4072:16:7",
															"nodeType": "YulAssignment",
															"src": "4072:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4083:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4083:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4086:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4086:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4079:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4079:3:7"
																},
																"nativeSrc": "4079:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4079:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4072:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4072:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4111:22:7",
																"nodeType": "YulBlock",
																"src": "4111:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4113:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:7"
																			},
																			"nativeSrc": "4113:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:7"
																		},
																		"nativeSrc": "4113:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4103:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4103:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4106:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4106:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4100:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4100:2:7"
																},
																"nativeSrc": "4100:10:7",
																"nodeType": "YulFunctionCall",
																"src": "4100:10:7"
															},
															"nativeSrc": "4097:36:7",
															"nodeType": "YulIf",
															"src": "4097:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4014:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4045:1:7",
														"nodeType": "YulTypedName",
														"src": "4045:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4048:1:7",
														"nodeType": "YulTypedName",
														"src": "4048:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4054:3:7",
														"nodeType": "YulTypedName",
														"src": "4054:3:7",
														"type": ""
													}
												],
												"src": "4014:125:7"
											},
											{
												"body": {
													"nativeSrc": "4193:79:7",
													"nodeType": "YulBlock",
													"src": "4193:79:7",
													"statements": [
														{
															"nativeSrc": "4203:17:7",
															"nodeType": "YulAssignment",
															"src": "4203:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4215:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4215:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4218:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4218:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4211:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4211:3:7"
																},
																"nativeSrc": "4211:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4211:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4203:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4244:22:7",
																"nodeType": "YulBlock",
																"src": "4244:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4246:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4246:16:7"
																			},
																			"nativeSrc": "4246:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4246:18:7"
																		},
																		"nativeSrc": "4246:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4246:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4235:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4235:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4241:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4241:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4232:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4232:2:7"
																},
																"nativeSrc": "4232:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4232:11:7"
															},
															"nativeSrc": "4229:37:7",
															"nodeType": "YulIf",
															"src": "4229:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4144:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4175:1:7",
														"nodeType": "YulTypedName",
														"src": "4175:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4178:1:7",
														"nodeType": "YulTypedName",
														"src": "4178:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4184:4:7",
														"nodeType": "YulTypedName",
														"src": "4184:4:7",
														"type": ""
													}
												],
												"src": "4144:128:7"
											},
											{
												"body": {
													"nativeSrc": "4329:116:7",
													"nodeType": "YulBlock",
													"src": "4329:116:7",
													"statements": [
														{
															"nativeSrc": "4339:20:7",
															"nodeType": "YulAssignment",
															"src": "4339:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4354:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4354:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4357:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4357:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4350:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4350:3:7"
																},
																"nativeSrc": "4350:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4350:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4339:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4339:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4417:22:7",
																"nodeType": "YulBlock",
																"src": "4417:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4419:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4419:16:7"
																			},
																			"nativeSrc": "4419:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4419:18:7"
																		},
																		"nativeSrc": "4419:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4419:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4388:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4388:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4381:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4381:6:7"
																				},
																				"nativeSrc": "4381:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4381:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4395:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4395:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4402:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "4402:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4411:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "4411:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4398:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4398:3:7"
																						},
																						"nativeSrc": "4398:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4398:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4392:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4392:2:7"
																				},
																				"nativeSrc": "4392:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4392:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4378:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4378:2:7"
																		},
																		"nativeSrc": "4378:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4378:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4371:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:7"
																},
																"nativeSrc": "4371:45:7",
																"nodeType": "YulFunctionCall",
																"src": "4371:45:7"
															},
															"nativeSrc": "4368:71:7",
															"nodeType": "YulIf",
															"src": "4368:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4277:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4308:1:7",
														"nodeType": "YulTypedName",
														"src": "4308:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4311:1:7",
														"nodeType": "YulTypedName",
														"src": "4311:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4317:7:7",
														"nodeType": "YulTypedName",
														"src": "4317:7:7",
														"type": ""
													}
												],
												"src": "4277:168:7"
											},
											{
												"body": {
													"nativeSrc": "4496:171:7",
													"nodeType": "YulBlock",
													"src": "4496:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4527:111:7",
																"nodeType": "YulBlock",
																"src": "4527:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4548:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4548:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4555:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4555:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4560:10:7",
																							"nodeType": "YulLiteral",
																							"src": "4560:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4551:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4551:3:7"
																					},
																					"nativeSrc": "4551:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4551:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4541:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4541:6:7"
																			},
																			"nativeSrc": "4541:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:31:7"
																		},
																		"nativeSrc": "4541:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4592:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4592:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4595:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4595:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4585:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4585:6:7"
																			},
																			"nativeSrc": "4585:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4585:15:7"
																		},
																		"nativeSrc": "4585:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4585:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4623:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4623:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4613:6:7"
																			},
																			"nativeSrc": "4613:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4613:15:7"
																		},
																		"nativeSrc": "4613:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4613:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4516:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4516:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4509:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4509:6:7"
																},
																"nativeSrc": "4509:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4509:9:7"
															},
															"nativeSrc": "4506:132:7",
															"nodeType": "YulIf",
															"src": "4506:132:7"
														},
														{
															"nativeSrc": "4647:14:7",
															"nodeType": "YulAssignment",
															"src": "4647:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4656:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4656:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4659:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4659:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4652:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4652:3:7"
																},
																"nativeSrc": "4652:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4652:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4647:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "4647:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4450:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4481:1:7",
														"nodeType": "YulTypedName",
														"src": "4481:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4484:1:7",
														"nodeType": "YulTypedName",
														"src": "4484:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4490:1:7",
														"nodeType": "YulTypedName",
														"src": "4490:1:7",
														"type": ""
													}
												],
												"src": "4450:217:7"
											},
											{
												"body": {
													"nativeSrc": "4846:177:7",
													"nodeType": "YulBlock",
													"src": "4846:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4863:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4863:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4874:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4874:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:7"
																},
																"nativeSrc": "4856:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4856:21:7"
															},
															"nativeSrc": "4856:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4856:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4908:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4908:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4893:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:7"
																		},
																		"nativeSrc": "4893:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4893:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4913:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4913:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4886:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:7"
																},
																"nativeSrc": "4886:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4886:30:7"
															},
															"nativeSrc": "4886:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4886:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4936:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4936:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4947:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4947:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:7"
																		},
																		"nativeSrc": "4932:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4932:18:7"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e7320616c726561647920756e6c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "4952:29:7",
																		"nodeType": "YulLiteral",
																		"src": "4952:29:7",
																		"type": "",
																		"value": "All tokens already unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:7"
																},
																"nativeSrc": "4925:57:7",
																"nodeType": "YulFunctionCall",
																"src": "4925:57:7"
															},
															"nativeSrc": "4925:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "4925:57:7"
														},
														{
															"nativeSrc": "4991:26:7",
															"nodeType": "YulAssignment",
															"src": "4991:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5003:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5003:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5014:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5014:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:7"
																},
																"nativeSrc": "4999:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4999:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4991:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4991:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4672:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4823:9:7",
														"nodeType": "YulTypedName",
														"src": "4823:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4837:4:7",
														"nodeType": "YulTypedName",
														"src": "4837:4:7",
														"type": ""
													}
												],
												"src": "4672:351:7"
											},
											{
												"body": {
													"nativeSrc": "5202:172:7",
													"nodeType": "YulBlock",
													"src": "5202:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5219:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5230:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:7"
																},
																"nativeSrc": "5212:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5212:21:7"
															},
															"nativeSrc": "5212:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5212:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5253:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5253:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5264:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:7"
																		},
																		"nativeSrc": "5249:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5269:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:7"
																},
																"nativeSrc": "5242:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5242:30:7"
															},
															"nativeSrc": "5242:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5242:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5292:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5303:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5303:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:7"
																		},
																		"nativeSrc": "5288:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:18:7"
																	},
																	{
																		"hexValue": "4e6f206e6577206d6f6e746820746f20756e6c6f636b",
																		"kind": "string",
																		"nativeSrc": "5308:24:7",
																		"nodeType": "YulLiteral",
																		"src": "5308:24:7",
																		"type": "",
																		"value": "No new month to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5281:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:7"
																},
																"nativeSrc": "5281:52:7",
																"nodeType": "YulFunctionCall",
																"src": "5281:52:7"
															},
															"nativeSrc": "5281:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "5281:52:7"
														},
														{
															"nativeSrc": "5342:26:7",
															"nodeType": "YulAssignment",
															"src": "5342:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5354:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5354:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5365:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5365:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5350:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5350:3:7"
																},
																"nativeSrc": "5350:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5350:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5342:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5342:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5028:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5179:9:7",
														"nodeType": "YulTypedName",
														"src": "5179:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5193:4:7",
														"nodeType": "YulTypedName",
														"src": "5193:4:7",
														"type": ""
													}
												],
												"src": "5028:346:7"
											},
											{
												"body": {
													"nativeSrc": "5426:88:7",
													"nodeType": "YulBlock",
													"src": "5426:88:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5457:22:7",
																"nodeType": "YulBlock",
																"src": "5457:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5459:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5459:16:7"
																			},
																			"nativeSrc": "5459:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5459:18:7"
																		},
																		"nativeSrc": "5459:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5459:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5442:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5442:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5453:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5453:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5449:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:7"
																		},
																		"nativeSrc": "5449:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5439:2:7"
																},
																"nativeSrc": "5439:17:7",
																"nodeType": "YulFunctionCall",
																"src": "5439:17:7"
															},
															"nativeSrc": "5436:43:7",
															"nodeType": "YulIf",
															"src": "5436:43:7"
														},
														{
															"nativeSrc": "5488:20:7",
															"nodeType": "YulAssignment",
															"src": "5488:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5499:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5499:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5495:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5495:3:7"
																},
																"nativeSrc": "5495:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5495:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "5379:135:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5408:5:7",
														"nodeType": "YulTypedName",
														"src": "5408:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5418:3:7",
														"nodeType": "YulTypedName",
														"src": "5418:3:7",
														"type": ""
													}
												],
												"src": "5379:135:7"
											},
											{
												"body": {
													"nativeSrc": "5693:167:7",
													"nodeType": "YulBlock",
													"src": "5693:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5710:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5710:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5721:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5721:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5703:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:7"
																},
																"nativeSrc": "5703:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5703:21:7"
															},
															"nativeSrc": "5703:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5703:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5744:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5744:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5755:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5755:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:7"
																		},
																		"nativeSrc": "5740:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5740:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5760:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5733:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:7"
																},
																"nativeSrc": "5733:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5733:30:7"
															},
															"nativeSrc": "5733:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5733:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5783:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5794:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5794:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5779:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5779:3:7"
																		},
																		"nativeSrc": "5779:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5779:18:7"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20756e6c6f636b",
																		"kind": "string",
																		"nativeSrc": "5799:19:7",
																		"nodeType": "YulLiteral",
																		"src": "5799:19:7",
																		"type": "",
																		"value": "Nothing to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5772:6:7"
																},
																"nativeSrc": "5772:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5772:47:7"
															},
															"nativeSrc": "5772:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5772:47:7"
														},
														{
															"nativeSrc": "5828:26:7",
															"nodeType": "YulAssignment",
															"src": "5828:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5840:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5840:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5851:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5851:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5836:3:7"
																},
																"nativeSrc": "5836:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5836:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5828:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5828:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5519:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5670:9:7",
														"nodeType": "YulTypedName",
														"src": "5670:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5684:4:7",
														"nodeType": "YulTypedName",
														"src": "5684:4:7",
														"type": ""
													}
												],
												"src": "5519:341:7"
											},
											{
												"body": {
													"nativeSrc": "6022:188:7",
													"nodeType": "YulBlock",
													"src": "6022:188:7",
													"statements": [
														{
															"nativeSrc": "6032:26:7",
															"nodeType": "YulAssignment",
															"src": "6032:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6044:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6044:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6055:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6040:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:7"
																},
																"nativeSrc": "6040:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6040:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6032:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6032:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6074:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6074:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6089:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6105:3:7",
																								"nodeType": "YulLiteral",
																								"src": "6105:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6110:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6110:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6101:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6101:3:7"
																						},
																						"nativeSrc": "6101:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6101:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6114:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6114:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6097:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6097:3:7"
																				},
																				"nativeSrc": "6097:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6097:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6085:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:7"
																		},
																		"nativeSrc": "6085:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:7"
																},
																"nativeSrc": "6067:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6067:51:7"
															},
															"nativeSrc": "6067:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6067:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6138:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6138:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6149:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6149:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6134:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6134:3:7"
																		},
																		"nativeSrc": "6134:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6134:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6154:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6154:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:7"
																},
																"nativeSrc": "6127:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6127:34:7"
															},
															"nativeSrc": "6127:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6127:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6181:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6181:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6192:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6192:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6177:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6177:3:7"
																		},
																		"nativeSrc": "6177:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6197:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6197:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6170:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:7"
																},
																"nativeSrc": "6170:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:34:7"
															},
															"nativeSrc": "6170:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6170:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5865:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5975:9:7",
														"nodeType": "YulTypedName",
														"src": "5975:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5986:6:7",
														"nodeType": "YulTypedName",
														"src": "5986:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5994:6:7",
														"nodeType": "YulTypedName",
														"src": "5994:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6002:6:7",
														"nodeType": "YulTypedName",
														"src": "6002:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6013:4:7",
														"nodeType": "YulTypedName",
														"src": "6013:4:7",
														"type": ""
													}
												],
												"src": "5865:345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"All tokens already unlocked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"No new month to unlock\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Nothing to unlock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"958": [
									{
										"length": 32,
										"start": 936
									},
									{
										"length": 32,
										"start": 2196
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xCE7842F5 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE6FD48BC GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xE8BE9A44 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x3E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE7842F5 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xD2F9EFAB EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA779D080 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xA779D080 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xB361412A EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xBE381B85 EQ PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D3E474A GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8310A74D EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x8342083A EQ PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x67859B6E EQ PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42249BB EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2BE8781F EQ PUSH2 0x232 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xFC7 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x211 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x211 PUSH12 0x204FCE5E3E25026110000000 DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x612 JUMP JUMPDEST PUSH2 0x211 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x32A PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x211 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0x1073 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x1073 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x473 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x473 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x456 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48A DUP2 DUP6 DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4A3 DUP6 DUP3 DUP6 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x4AE DUP6 DUP6 DUP6 PUSH2 0xC7C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4C1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x4D3 JUMPI POP PUSH1 0x6 DUP3 GT ISZERO JUMPDEST PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 SUB PUSH2 0x53B JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 SUB PUSH2 0x562 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 SUB PUSH2 0x589 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 SUB PUSH2 0x5B0 JUMPI PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x5 SUB PUSH2 0x5D7 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 PUSH1 0x6 SUB PUSH2 0x5FB JUMPI PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x607 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x610 PUSH0 PUSH2 0xD06 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0x1073 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x48A DUP2 DUP6 DUP6 PUSH2 0xC7C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 GT PUSH2 0x68B JUMPI PUSH2 0x3E8 PUSH2 0x66F PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x67A SWAP1 PUSH1 0x5 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP PUSH2 0x732 JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x6C1 JUMPI PUSH1 0x64 PUSH2 0x6B6 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x67A SWAP1 PUSH1 0x1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x6F7 JUMPI PUSH1 0x64 PUSH2 0x6EC PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x67A SWAP1 PUSH1 0x2 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x71A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x725 SWAP1 PUSH1 0x3 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x72F SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH2 0x753 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x760 SWAP1 DUP6 PUSH2 0x10BF JUMP JUMPDEST GT ISZERO PUSH2 0x797 JUMPI PUSH1 0x7 SLOAD PUSH2 0x78A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP4 PUSH2 0x7A4 PUSH1 0x6 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x7D1 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0x80E DUP2 PUSH2 0xD06 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x819 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x83A PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x7 SLOAD LT PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH2 0x8B9 PUSH32 0x0 TIMESTAMP PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x8C3 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F206E6577206D6F6E746820746F20756E6C6F636B PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xA3F JUMPI PUSH1 0x3 DUP2 GT PUSH2 0x97C JUMPI PUSH2 0x3E8 PUSH2 0x956 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x961 SWAP1 PUSH1 0x5 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0x975 SWAP1 DUP4 PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x6 DUP2 GT PUSH2 0x9B2 JUMPI PUSH1 0x64 PUSH2 0x9A7 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x961 SWAP1 PUSH1 0x1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x9 DUP2 GT PUSH2 0x9E8 JUMPI PUSH1 0x64 PUSH2 0x9DD PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x961 SWAP1 PUSH1 0x2 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA0B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0xA16 SWAP1 PUSH1 0x3 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0xA2A SWAP1 DUP4 PUSH2 0x10BF JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xA37 DUP2 PUSH2 0x111B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x923 JUMP JUMPDEST POP PUSH2 0xA61 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xA6E SWAP1 DUP4 PUSH2 0x10BF JUMP JUMPDEST GT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x7 SLOAD PUSH2 0xA98 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH12 0x204FCE5E3E25026110000000 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F20756E6C6F636B PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0xB12 PUSH1 0x6 DUP4 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0xB2D SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xB45 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xB5D SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xB75 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xB8D SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xBA5 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xC7C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xBFB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xC76 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0xC76 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD57 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0xBFB DUP4 DUP4 DUP4 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC76 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE53 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE48 SWAP2 SWAP1 PUSH2 0x10BF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xEC3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEDF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF9A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB9 DUP4 PUSH2 0xF84 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFE2 DUP5 PUSH2 0xF84 JUMP JUMPDEST SWAP3 POP PUSH2 0xFF0 PUSH1 0x20 DUP6 ADD PUSH2 0xF84 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1012 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1022 PUSH1 0x20 DUP5 ADD PUSH2 0xF84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1044 DUP3 PUSH2 0xF84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1065 DUP4 PUSH2 0xF84 JUMP JUMPDEST SWAP2 POP PUSH2 0x1022 PUSH1 0x20 DUP5 ADD PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1087 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x10AB JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x10AB JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x490 JUMPI PUSH2 0x490 PUSH2 0x10AB JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1116 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x112C JUMPI PUSH2 0x112C PUSH2 0x10AB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F POP 0xD3 SSTORE JUMPDEST ISZERO 0xDF 0x4C 0xD3 PUSH18 0xFD98E7F80921811010DAED5A59B573C3B086 0x4E SWAP11 0xBC LOG3 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "174:4042:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:73;;;;;-1:-1:-1;;;;;786:73:6;;;;;;-1:-1:-1;;;;;178:32:7;;;160:51;;148:2;133:18;786:73:6;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:7;;1286:22;1268:41;;1256:2;1241:18;3979:186:2;1128:187:7;2830:97:2;2908:12;;2830:97;;;1466:25:7;;;1454:2;1439:18;2830:97:2;1320:177:7;4757:244:2;;;;;;:::i;:::-;;:::i;3041:492:6:-;;;;;;:::i;:::-;;:::i;:::-;;710:69;;;;;-1:-1:-1;;;;;710:69:6;;;2688:82:2;;;2761:2;2328:36:7;;2316:2;2301:18;2688:82:2;2186:184:7;548:76:6;;;;;-1:-1:-1;;;;;548:76:6;;;2985:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;474:30:6:-;;;;;;284:60;;-1:-1:-1;;;284:60:6;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;217:60:6;;256:21;217:60;;1962:93:2;;;:::i;511:28:6:-;;;;;;3296:178:2;;;;;;:::i;:::-;;:::i;946:70:6:-;;;;;-1:-1:-1;;;;;946:70:6;;;3541:672;;;:::i;:::-;;;;2768:25:7;;;2824:2;2809:18;;2802:34;;;;2852:18;;;2845:34;2756:2;2741:18;3541:672:6;2566:319:7;866:73:6;;;;;-1:-1:-1;;;;;866:73:6;;;631:72;;;;;-1:-1:-1;;;;;631:72:6;;;3532:140:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;428:39:6;;;;;351:68;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1434:1599:6:-;;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;3041:492:6:-;1531:13:0;:11;:13::i;:::-;3158:1:6::1;3149:5;:10;;:24;;;;;3172:1;3163:5;:10;;3149:24;3141:50;;;::::0;-1:-1:-1;;;3141:50:6;;3742:2:7;3141:50:6::1;::::0;::::1;3724:21:7::0;3781:2;3761:18;;;3754:30;-1:-1:-1;;;3800:18:7;;;3793:43;3853:18;;3141:50:6::1;;;;;;;;;3207:5;3216:1;3207:10:::0;3204:321:::1;;3219:16;:29:::0;;-1:-1:-1;;;;;;3219:29:6::1;-1:-1:-1::0;;;;;3219:29:6;::::1;;::::0;;3041:492;;:::o;3204:321::-:1;3267:5;3276:1;3267:10:::0;3264:261:::1;;3279:12;:25:::0;;-1:-1:-1;;;;;;3279:25:6::1;-1:-1:-1::0;;;;;3279:25:6;::::1;;::::0;;3041:492;;:::o;3264:261::-:1;3323:5;3332:1;3323:10:::0;3320:205:::1;;3335:9;:22:::0;;-1:-1:-1;;;;;;3335:22:6::1;-1:-1:-1::0;;;;;3335:22:6;::::1;;::::0;;3041:492;;:::o;3320:205::-:1;3376:5;3385:1;3376:10:::0;3373:152:::1;;3388:13;:26:::0;;-1:-1:-1;;;;;;3388:26:6::1;-1:-1:-1::0;;;;;3388:26:6;::::1;;::::0;;3041:492;;:::o;3373:152::-:1;3433:5;3442:1;3433:10:::0;3430:95:::1;;3445:13;:26:::0;;-1:-1:-1;;;;;;3445:26:6::1;-1:-1:-1::0;;;;;3445:26:6;::::1;;::::0;;3041:492;;:::o;3430:95::-:1;3490:5;3499:1;3490:10:::0;3487:38:::1;;3502:10;:23:::0;;-1:-1:-1;;;;;;3502:23:6::1;-1:-1:-1::0;;;;;3502:23:6;::::1;;::::0;;3487:38:::1;3041:492:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;3541:672:6:-;3593:13;3608:19;3629:17;3659:9;3671:15;;3689:1;3671:19;;;;:::i;:::-;3659:31;;3712:1;3707;:6;3703:319;;3766:4;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;3745:17;;3761:1;3745:17;:::i;:::-;3744:26;;;;:::i;:::-;3730:40;;3703:319;;;3797:1;3792;:6;3788:234;;3851:3;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;3830:17;;3846:1;3830:17;:::i;3788:234::-;3881:1;3876;:6;3872:150;;3935:3;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;3914:17;;3930:1;3914:17;:::i;3872:150::-;4007:3;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;3986:17;;4002:1;3986:17;:::i;:::-;3985:25;;;;:::i;:::-;3971:39;;3872:150;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;4052:13;;4038:27;;:11;:27;:::i;:::-;:43;4034:119;;;4128:13;;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;4112:29;;;;:::i;:::-;4098:43;;4034:119;4173:1;4176:11;4189:15;4203:1;4176:11;4189:15;:::i;:::-;4165:40;;;;;;;3541:672;;;:::o;351:68::-;391:28;-1:-1:-1;;;256:21:6;391:28;:::i;:::-;351:68;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:7::0;133:18;;2672:31:0::1;14:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1434:1599:6:-;1531:13:0;:11;:13::i;:::-;391:28:6::1;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;1496:13;;:29;1488:69;;;::::0;-1:-1:-1;;;1488:69:6;;4874:2:7;1488:69:6::1;::::0;::::1;4856:21:7::0;4913:2;4893:18;;;4886:30;4952:29;4932:18;;;4925:57;4999:18;;1488:69:6::1;4672:351:7::0;1488:69:6::1;1570:21;1631:7;1595:32;1613:14;1595:15;:32;:::i;:::-;1594:44;;;;:::i;:::-;1570:68;;1673:15;;1657:13;:31;1649:66;;;::::0;-1:-1:-1;;;1649:66:6;;5230:2:7;1649:66:6::1;::::0;::::1;5212:21:7::0;5269:2;5249:18;;;5242:30;-1:-1:-1;;;5288:18:7;;;5281:52;5350:18;;1649:66:6::1;5028:346:7::0;1649:66:6::1;1728:22;1772:9:::0;1784:15:::1;;1802:1;1784:19;;;;:::i;:::-;1772:31;;1767:482;1810:13;1805:1;:18;1767:482;;1854:1;1849;:6;1845:393;;1916:4;391:28;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;1895:17;::::0;1911:1:::1;1895:17;:::i;:::-;1894:26;;;;:::i;:::-;1876:44;::::0;;::::1;:::i;:::-;;;1845:393;;;1959:1;1954;:6;1950:288;;2021:3;391:28;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;2000:17;::::0;2016:1:::1;2000:17;:::i;1950:288::-;2061:1;2056;:6;2052:186;;2123:3;391:28;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;2102:17;::::0;2118:1:::1;2102:17;:::i;2052:186::-;2213:3;391:28;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;2192:17;::::0;2208:1:::1;2192:17;:::i;:::-;2191:25;;;;:::i;:::-;2173:43;::::0;;::::1;:::i;:::-;;;2052:186;1825:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1767:482;;;-1:-1:-1::0;391:28:6::1;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;2282:13;::::0;2265:30:::1;::::0;:14;:30:::1;:::i;:::-;:46;2261:161;;;2361:13;::::0;391:28:::1;-1:-1:-1::0;;;256:21:6::1;391:28;:::i;:::-;2345:29;;;;:::i;:::-;2328:46;;2261:161;2459:1;2442:14;:18;2434:48;;;::::0;-1:-1:-1;;;2434:48:6;;5721:2:7;2434:48:6::1;::::0;::::1;5703:21:7::0;5760:2;5740:18;;;5733:30;-1:-1:-1;;;5779:18:7;;;5772:47;5836:18;;2434:48:6::1;5519:341:7::0;2434:48:6::1;2513:13;2495:15;:31;;;;2554:14;2537:13;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;2581:13:6::1;::::0;-1:-1:-1;2597:18:6::1;2614:1;2597:14:::0;:18:::1;:::i;:::-;2653:16;::::0;2581:34;;-1:-1:-1;2628:49:6::1;::::0;2646:4:::1;::::0;-1:-1:-1;;;;;2653:16:6::1;2581:34:::0;2628:9:::1;:49::i;:::-;2713:12;::::0;2688:45:::1;::::0;2706:4:::1;::::0;-1:-1:-1;;;;;2713:12:6::1;2727:5:::0;2688:9:::1;:45::i;:::-;2769:9;::::0;2744:42:::1;::::0;2762:4:::1;::::0;-1:-1:-1;;;;;2769:9:6::1;2780:5:::0;2744:9:::1;:42::i;:::-;2822:13;::::0;2797:46:::1;::::0;2815:4:::1;::::0;-1:-1:-1;;;;;2822:13:6::1;2837:5:::0;2797:9:::1;:46::i;:::-;2879:13;::::0;2854:46:::1;::::0;2872:4:::1;::::0;-1:-1:-1;;;;;2879:13:6::1;2894:5:::0;2854:9:::1;:46::i;:::-;2936:10;::::0;2911:43:::1;::::0;2929:4:::1;::::0;-1:-1:-1;;;;;2936:10:6::1;2948:5:::0;2911:9:::1;:43::i;:::-;2987:15;::::0;3011:13:::1;::::0;2972:53:::1;::::0;;2768:25:7;;;2824:2;2809:18;;2802:34;;;2852:18;;2845:34;2972:53:6::1;::::0;2756:2:7;2741:18;2972:53:6::1;;;;;;;1477:1556;;;1434:1599::o:0;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:2;;-1:-1:-1;;;;;6085:32:7;;10668:60:2;;;6067:51:7;6134:18;;;6127:34;;;6177:18;;;6170:34;;;6040:18;;10668:60:2;5865:345:7;10613:130:2;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;160:51:7;133:18;;5498:30:2;14:203:7;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;160:51:7;133:18;;5591:32:2;14:203:7;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;160:51:7;133:18;;1901:40:0;14:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9682:432:2:-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;160:51:7;133:18;;9836:32:2;14:203:7;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;160:51:7;133:18;;9936:31:2;14:203:7;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1466:25:7;;1454:2;1439:18;;1320:177;10066:31:2;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;6085:32:7;;6367:50:2;;;6067:51:7;6134:18;;;6127:34;;;6177:18;;;6170:34;;;6040:18;;6367:50:2;5865:345:7;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1466::7;;1454:2;1439:18;;1320:177;7064:25:2;;;;;;;;5989:1107;;;:::o;222:418:7:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;505:6;500:2;492:6;488:15;483:2;472:9;468:18;462:50;561:1;556:2;547:6;536:9;532:22;528:31;521:42;631:2;624;620:7;615:2;607:6;603:15;599:29;588:9;584:45;580:54;572:62;;;222:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:7;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:7:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:7;1827:18;;;;1814:32;;1502:374::o;1881:300::-;1949:6;1957;2010:2;1998:9;1989:7;1985:23;1981:32;1978:52;;;2026:1;2023;2016:12;1978:52;2071:23;;;-1:-1:-1;2137:38:7;2171:2;2156:18;;2137:38;:::i;:::-;2127:48;;1881:300;;;;;:::o;2375:186::-;2434:6;2487:2;2475:9;2466:7;2462:23;2458:32;2455:52;;;2503:1;2500;2493:12;2455:52;2526:29;2545:9;2526:29;:::i;:::-;2516:39;2375:186;-1:-1:-1;;;2375:186:7:o;2890:260::-;2958:6;2966;3019:2;3007:9;2998:7;2994:23;2990:32;2987:52;;;3035:1;3032;3025:12;2987:52;3058:29;3077:9;3058:29;:::i;:::-;3048:39;;3106:38;3140:2;3129:9;3125:18;3106:38;:::i;3155:380::-;3234:1;3230:12;;;;3277;;;3298:61;;3352:4;3344:6;3340:17;3330:27;;3298:61;3405:2;3397:6;3394:14;3374:18;3371:38;3368:161;;3451:10;3446:3;3442:20;3439:1;3432:31;3486:4;3483:1;3476:15;3514:4;3511:1;3504:15;3368:161;;3155:380;;;:::o;3882:127::-;3943:10;3938:3;3934:20;3931:1;3924:31;3974:4;3971:1;3964:15;3998:4;3995:1;3988:15;4014:125;4079:9;;;4100:10;;;4097:36;;;4113:18;;:::i;4144:128::-;4211:9;;;4232:11;;;4229:37;;;4246:18;;:::i;4277:168::-;4350:9;;;4381;;4398:15;;;4392:22;;4378:37;4368:71;;4419:18;;:::i;4450:217::-;4490:1;4516;4506:132;;4560:10;4555:3;4551:20;4548:1;4541:31;4595:4;4592:1;4585:15;4623:4;4620:1;4613:15;4506:132;-1:-1:-1;4652:9:7;;4450:217::o;5379:135::-;5418:3;5439:17;;;5436:43;;5459:18;;:::i;:::-;-1:-1:-1;5506:1:7;5495:13;;5379:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "891400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LOCKED_SUPPLY()": "350",
								"PUBLIC_SUPPLY()": "311",
								"TOTAL_SUPPLY()": "262",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24780",
								"awardBonus()": "2414",
								"balanceOf(address)": "2582",
								"decimals()": "244",
								"gameTreasury()": "2392",
								"getNextUnlockInfo()": "infinite",
								"lastUnlockMonth()": "2383",
								"liquidityListing()": "2415",
								"marketing()": "2371",
								"name()": "infinite",
								"owner()": "2365",
								"referralBonus()": "2370",
								"renounceOwnership()": "infinite",
								"stakingReward()": "2349",
								"startTimestamp()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2370",
								"totalUnlocked()": "2339",
								"transfer(address,uint256)": "51283",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"unlockTokens()": "infinite",
								"updateDistributionAddress(uint256,address)": "27080"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 548,
									"end": 624,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 548,
									"end": 624,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 582,
									"end": 624,
									"name": "PUSH",
									"source": 6,
									"value": "7EC13697D98925BA1DC2BCC705C071BD168B10C2"
								},
								{
									"begin": 548,
									"end": 624,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 548,
									"end": 624,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 631,
									"end": 703,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 631,
									"end": 703,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 631,
									"end": 703,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 631,
									"end": 703,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 631,
									"end": 703,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 661,
									"end": 703,
									"name": "PUSH",
									"source": 6,
									"value": "8DE119E98707AC240ABA2CB77E83B29882A34357"
								},
								{
									"begin": 631,
									"end": 703,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 631,
									"end": 703,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 631,
									"end": 703,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 710,
									"end": 779,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 710,
									"end": 779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 710,
									"end": 779,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 710,
									"end": 779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 710,
									"end": 779,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 737,
									"end": 779,
									"name": "PUSH",
									"source": 6,
									"value": "3499C18F7265BE9AFDA16504A34CD1892F278AE"
								},
								{
									"begin": 710,
									"end": 779,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 710,
									"end": 779,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 710,
									"end": 779,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 786,
									"end": 859,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 786,
									"end": 859,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 859,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 786,
									"end": 859,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 786,
									"end": 859,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 817,
									"end": 859,
									"name": "PUSH",
									"source": 6,
									"value": "CC234A1D3E32148461B7EACB5A8BF4D0C4B6BE74"
								},
								{
									"begin": 786,
									"end": 859,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 786,
									"end": 859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 786,
									"end": 859,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 866,
									"end": 939,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 866,
									"end": 939,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 866,
									"end": 939,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 866,
									"end": 939,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 866,
									"end": 939,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 897,
									"end": 939,
									"name": "PUSH",
									"source": 6,
									"value": "CEEA0E87B553BC445C5EB2242B5F28CD81B4ACAA"
								},
								{
									"begin": 866,
									"end": 939,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 866,
									"end": 939,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 866,
									"end": 939,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 974,
									"end": 1016,
									"name": "PUSH",
									"source": 6,
									"value": "7E23E2781A1DA5DACE87B4F0E7BF68191263FC32"
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 946,
									"end": 1016,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1117,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1117,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "212122102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "109091"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1198,
									"end": 1226,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 324,
									"end": 344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1198,
									"end": 1203,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1198,
									"end": 1226,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1226,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1198,
									"end": 1226,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1268,
									"end": 1303,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1282,
									"end": 1286,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 391,
									"end": 419,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 324,
									"end": 344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 256,
									"end": 277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "204FCE5E3E25026110000000"
								},
								{
									"begin": 391,
									"end": 419,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 391,
									"end": 419,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 391,
									"end": 419,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 391,
									"end": 419,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1268,
									"end": 1273,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1268,
									"end": 1303,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1268,
									"end": 1303,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1268,
									"end": 1303,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1373,
									"end": 1388,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1388,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1356,
									"end": 1388,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1418,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1399,
									"end": 1414,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1399,
									"end": 1418,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3773,
									"end": 3805,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3805,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3755,
									"end": 3806,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3822,
									"end": 3840,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3822,
									"end": 3840,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3822,
									"end": 3840,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3849,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3849,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3849,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3883,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3865,
									"end": 3883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3883,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3892,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3892,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3746,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3728,
									"end": 3746,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3553,
									"end": 3898,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4022,
									"end": 4040,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4022,
									"end": 4040,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 4080,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3158,
									"end": 3285,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3158,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3219,
									"end": 3229,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3214,
									"end": 3217,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3210,
									"end": 3230,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3207,
									"end": 3208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3200,
									"end": 3231,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3254,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3247,
									"end": 3248,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3240,
									"end": 3255,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3274,
									"end": 3278,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3271,
									"end": 3272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3264,
									"end": 3279,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3418,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3290,
									"end": 3418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3366,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3378,
									"end": 3389,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3378,
									"end": 3389,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3378,
									"end": 3389,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3412,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3375,
									"end": 3412,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3392,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3392,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3392,
									"end": 3410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3392,
									"end": 3410,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3392,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3418,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3418,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3418,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3548,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3423,
									"end": 3548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3488,
									"end": 3497,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3488,
									"end": 3497,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3488,
									"end": 3497,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3519,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3519,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3519,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3506,
									"end": 3542,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3506,
									"end": 3542,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3506,
									"end": 3542,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3522,
									"end": 3540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3522,
									"end": 3540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3522,
									"end": 3540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3903,
									"end": 4080,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3903,
									"end": 4080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "958"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4216,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f50d3555b15df4cd371fd98e7f80921811010daed5a59b573c3b0864e9abca364736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "CE7842F5"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "E6FD48BC"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "E6FD48BC"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "E8BE9A44"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "F968F493"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "CE7842F5"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "D2F9EFAB"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "A779D080"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "A779D080"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "B361412A"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "BE381B85"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "902D55A5"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "2D3E474A"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "8310A74D"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "8342083A"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "2D3E474A"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "67859B6E"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "42249BB"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "2BE8781F"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4216,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 786,
											"end": 859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 859,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 859,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 786,
											"end": 859,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 710,
											"end": 779,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 710,
											"end": 779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 710,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 710,
											"end": 779,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 710,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 710,
											"end": 779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 710,
											"end": 779,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 710,
											"end": 779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 710,
											"end": 779,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2186,
											"end": 2370,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 548,
											"end": 624,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 548,
											"end": 624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 548,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 548,
											"end": 624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 548,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 548,
											"end": 624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 548,
											"end": 624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 548,
											"end": 624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 548,
											"end": 624,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 504,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 474,
											"end": 504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 284,
											"end": 344,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 284,
											"end": 344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 284,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 284,
											"end": 344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 284,
											"end": 344,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 277,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 217,
											"end": 277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 217,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 217,
											"end": 277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 217,
											"end": 277,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 511,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 511,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 511,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 511,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 511,
											"end": 539,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 511,
											"end": 539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 511,
											"end": 539,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3541,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2566,
											"end": 2885,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 866,
											"end": 939,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 866,
											"end": 939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 866,
											"end": 939,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 866,
											"end": 939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 866,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 866,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 866,
											"end": 939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 866,
											"end": 939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 866,
											"end": 939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 703,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 631,
											"end": 703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 631,
											"end": 703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 631,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 631,
											"end": 703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 631,
											"end": 703,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 631,
											"end": 703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 703,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 428,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 428,
											"end": 467,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "958"
										},
										{
											"begin": 428,
											"end": 467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 428,
											"end": 467,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 351,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 351,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 351,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 351,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 3033,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1434,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1434,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1434,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3149,
											"end": 3154,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3159,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3159,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3163,
											"end": 3168,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3173,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3149,
											"end": 3173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3141,
											"end": 3191,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840D2DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3141,
											"end": 3191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3207,
											"end": 3217,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3204,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3204,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3248,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3248,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3204,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3204,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3267,
											"end": 3277,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3264,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3304,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3264,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3323,
											"end": 3333,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3320,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3357,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3357,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3320,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3386,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3373,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3373,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3388,
											"end": 3414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3414,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3414,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3414,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3414,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3373,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3373,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3433,
											"end": 3443,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3430,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3445,
											"end": 3471,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3471,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3471,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3471,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3430,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3490,
											"end": 3500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3487,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3502,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3525,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3502,
											"end": 3525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3502,
											"end": 3525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3525,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3525,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3487,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3487,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3671,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3707,
											"end": 3708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3703,
											"end": 4022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3770,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3745,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3744,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3703,
											"end": 4022,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 4022,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3703,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3792,
											"end": 3793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3798,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3788,
											"end": 4022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3854,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3847,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3830,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3830,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 4022,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3788,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3872,
											"end": 4022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3938,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3914,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3914,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3914,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4022,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3872,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3986,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3985,
											"end": 4010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3985,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3985,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4010,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 4022,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3872,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4038,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4038,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4141,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4128,
											"end": 4141,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4112,
											"end": 4141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4112,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4176,
											"end": 4187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4189,
											"end": 4204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4204,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4189,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 351,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 391,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 351,
											"end": 419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 351,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 3033,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1434,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1496,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1525,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1557,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1488,
											"end": 1557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4915,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4886,
											"end": 4916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "416C6C20746F6B656E7320616C726561647920756E6C6F636B65640000000000"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4925,
											"end": 4982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4672,
											"end": 5023,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1488,
											"end": 1557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 1595,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1613,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "958"
										},
										{
											"begin": 1595,
											"end": 1610,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1595,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1595,
											"end": 1627,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1595,
											"end": 1627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1595,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1594,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1594,
											"end": 1638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1594,
											"end": 1638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1673,
											"end": 1688,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1657,
											"end": 1688,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5230,
											"end": 5232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5271,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F206E6577206D6F6E746820746F20756E6C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5281,
											"end": 5333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5028,
											"end": 5374,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1649,
											"end": 1715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1784,
											"end": 1799,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1784,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1784,
											"end": 1803,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1784,
											"end": 1803,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1784,
											"end": 1803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1803,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1823,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1855,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1845,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1895,
											"end": 1912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1895,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1895,
											"end": 1912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1895,
											"end": 1912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1894,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1894,
											"end": 1920,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1894,
											"end": 1920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1876,
											"end": 1920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1876,
											"end": 1920,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1876,
											"end": 1920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1920,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1845,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 2238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1845,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1954,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 1960,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1950,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2000,
											"end": 2017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1950,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2056,
											"end": 2057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2052,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2102,
											"end": 2119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2102,
											"end": 2119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2052,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2192,
											"end": 2209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2192,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2192,
											"end": 2209,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2192,
											"end": 2209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2191,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2191,
											"end": 2216,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2191,
											"end": 2216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2173,
											"end": 2216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2216,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2173,
											"end": 2216,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2173,
											"end": 2216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2173,
											"end": 2216,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2052,
											"end": 2238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 1825,
											"end": 1828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1767,
											"end": 2249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2282,
											"end": 2295,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2265,
											"end": 2295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2279,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2265,
											"end": 2295,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2295,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2265,
											"end": 2295,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2311,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2422,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2261,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2361,
											"end": 2374,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 256,
											"end": 277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "204FCE5E3E25026110000000"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 391,
											"end": 419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 391,
											"end": 419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2345,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2345,
											"end": 2374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2345,
											"end": 2374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2374,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2261,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2460,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2482,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2482,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5723,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2434,
											"end": 2482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5703,
											"end": 5724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5762,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7468696E6720746F20756E6C6F636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5779,
											"end": 5797,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5779,
											"end": 5797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5519,
											"end": 5860,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2434,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2495,
											"end": 2526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2526,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2526,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2537,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2537,
											"end": 2568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2537,
											"end": 2568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2568,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2597,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2614,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2597,
											"end": 2611,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2597,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2597,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2653,
											"end": 2669,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2628,
											"end": 2677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2628,
											"end": 2677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2650,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2669,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2628,
											"end": 2677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2628,
											"end": 2677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2628,
											"end": 2677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2713,
											"end": 2725,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2688,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2710,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 2725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2688,
											"end": 2733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 2688,
											"end": 2733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2769,
											"end": 2778,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2744,
											"end": 2786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2766,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2744,
											"end": 2786,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2744,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2822,
											"end": 2835,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2797,
											"end": 2843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2819,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2822,
											"end": 2835,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2842,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2797,
											"end": 2843,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2797,
											"end": 2843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2879,
											"end": 2892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2854,
											"end": 2900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2876,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2899,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2854,
											"end": 2900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2854,
											"end": 2900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2936,
											"end": 2946,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2911,
											"end": 2954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2933,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2936,
											"end": 2946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2911,
											"end": 2954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2911,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2987,
											"end": 3002,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3011,
											"end": 3024,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D5C1E53FEBF89038959691E212F7A18F34F9AC92DD9965A138CCFC695E9774AC"
										},
										{
											"begin": 2972,
											"end": 3025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3025,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 3033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 3033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 3033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6085,
											"end": 6117,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6067,
											"end": 6118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5865,
											"end": 6210,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6085,
											"end": 6117,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6067,
											"end": 6118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5865,
											"end": 6210,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 222,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 222,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 488,
											"end": 503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 603,
											"end": 618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 599,
											"end": 628,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 588,
											"end": 597,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 584,
											"end": 629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 580,
											"end": 634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 572,
											"end": 634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2008,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2028,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1978,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2137,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2137,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2490,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2505,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2455,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2526,
											"end": 2555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2526,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2555,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3150,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2890,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3017,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3022,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2987,
											"end": 3039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3037,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 3039,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2987,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3077,
											"end": 3086,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 3058,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3140,
											"end": 3142,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 3106,
											"end": 3144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3535,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3155,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 3298,
											"end": 3359,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3359,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 3298,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3408,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3409,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3368,
											"end": 3529,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3461,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3490,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3529,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3368,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4009,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 3882,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 3953,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3934,
											"end": 3954,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3978,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3995,
											"end": 3996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4139,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4014,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4133,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4097,
											"end": 4133,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4113,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4144,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4229,
											"end": 4266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4229,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4229,
											"end": 4266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4246,
											"end": 4264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4445,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4277,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4414,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4414,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4415,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4368,
											"end": 4439,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4419,
											"end": 4437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4667,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4450,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4506,
											"end": 4638,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4555,
											"end": 4558,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4551,
											"end": 4571,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4623,
											"end": 4627,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4620,
											"end": 4621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4628,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4638,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4506,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5379,
											"end": 5514,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5379,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5421,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5436,
											"end": 5479,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5459,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5495,
											"end": 5508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5379,
											"end": 5514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/assets/BBD_Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"LOCKED_SUPPLY()": "e8be9a44",
							"PUBLIC_SUPPLY()": "8342083a",
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"awardBonus()": "b361412a",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"gameTreasury()": "d2f9efab",
							"getNextUnlockInfo()": "be381b85",
							"lastUnlockMonth()": "8310a74d",
							"liquidityListing()": "67859b6e",
							"marketing()": "2d3e474a",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"referralBonus()": "ce7842f5",
							"renounceOwnership()": "715018a6",
							"stakingReward()": "042249bb",
							"startTimestamp()": "e6fd48bc",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalUnlocked()": "a779d080",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unlockTokens()": "f968f493",
							"updateDistributionAddress(uint256,address)": "2be8781f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPerWallet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUnlocked\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LOCKED_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"awardBonus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextUnlockInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"perWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUnlockMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityListing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralBonus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateDistributionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/assets/BBD_Token.sol\":\"BBDToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/assets/BBD_Token.sol\":{\"keccak256\":\"0x9eea5bb3ff088d75818ed1ec79d40b2e3f916f1cae75250b5c6c3031b42857a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37f7ce7ce8ebc82b1635161455756c9e31349734d4a1b236b47a65cd86fb7801\",\"dweb:/ipfs/QmbbhR5tH7FgL7yS5fy5cp9jujeoJb8g8YRPvbhTkjQ5un\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 960,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "lastUnlockMonth",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 962,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "totalUnlocked",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 965,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "liquidityListing",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 968,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "gameTreasury",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 971,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "marketing",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 974,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "stakingReward",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 977,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "referralBonus",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 980,
								"contract": "src/assets/BBD_Token.sol:BBDToken",
								"label": "awardBonus",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"src/assets/BBD_Token.sol": {
				"ast": {
					"absolutePath": "src/assets/BBD_Token.sol",
					"exportedSymbols": {
						"BBDToken": [
							1375
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"195:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "195:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "195:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"202:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "202:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "202:7:6"
								}
							],
							"canonicalName": "BBDToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "BBDToken",
							"nameLocation": "183:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 946,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "241:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "217:60:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										},
										"id": 945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f3030305f303030",
											"id": 943,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "256:14:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "10_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 944,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "273:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "256:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8342083a",
									"id": 951,
									"mutability": "constant",
									"name": "PUBLIC_SUPPLY",
									"nameLocation": "308:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "284:60:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 948,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "324:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 949,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "340:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "324:20:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e8be9a44",
									"id": 956,
									"mutability": "constant",
									"name": "LOCKED_SUPPLY",
									"nameLocation": "375:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "351:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 955,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 953,
											"name": "TOTAL_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 946,
											"src": "391:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"id": 954,
											"name": "PUBLIC_SUPPLY",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 951,
											"src": "406:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "391:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fd48bc",
									"id": 958,
									"mutability": "immutable",
									"name": "startTimestamp",
									"nameLocation": "453:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "428:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 957,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "428:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8310a74d",
									"id": 960,
									"mutability": "mutable",
									"name": "lastUnlockMonth",
									"nameLocation": "489:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "474:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 959,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a779d080",
									"id": 962,
									"mutability": "mutable",
									"name": "totalUnlocked",
									"nameLocation": "526:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "511:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 961,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67859b6e",
									"id": 965,
									"mutability": "mutable",
									"name": "liquidityListing",
									"nameLocation": "563:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "548:76:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "548:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837456331333639374439383932356241316443324263433730356330373162643136384231304332",
										"id": 964,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "582:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7Ec13697D98925bA1dC2BcC705c071bd168B10C2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d2f9efab",
									"id": 968,
									"mutability": "mutable",
									"name": "gameTreasury",
									"nameLocation": "646:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "631:72:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 966,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838646531313965393837303741633234306162413263423737453833423239383832413334333537",
										"id": 967,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "661:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8de119e98707Ac240abA2cB77E83B29882A34357"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d3e474a",
									"id": 971,
									"mutability": "mutable",
									"name": "marketing",
									"nameLocation": "725:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "710:69:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 969,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830333439394331384637323635424539414644413136353034413334434431383932463237384145",
										"id": 970,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "737:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x03499C18F7265BE9AFDA16504A34CD1892F278AE"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "042249bb",
									"id": 974,
									"mutability": "mutable",
									"name": "stakingReward",
									"nameLocation": "801:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "786:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 972,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863633233346131643365333231343834363162376561436235613862663444304334623642653734",
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xcc234a1d3e32148461b7eaCb5a8bf4D0C4b6Be74"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce7842f5",
									"id": 977,
									"mutability": "mutable",
									"name": "referralBonus",
									"nameLocation": "881:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "866:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 975,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "866:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843654541304538374235353362633434354335456232323432623546323843643831423441436141",
										"id": 976,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "897:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCeEA0E87B553bc445C5Eb2242b5F28Cd81B4ACaA"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b361412a",
									"id": 980,
									"mutability": "mutable",
									"name": "awardBonus",
									"nameLocation": "961:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "946:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 978,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "946:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837453233453237383161314461354441436538376234663065376266363831393132363346633332",
										"id": 979,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "974:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7E23E2781a1Da5DACe87b4f0e7bf68191263Fc32"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d5c1e53febf89038959691e212f7a18f34f9ac92dd9965a138ccfc695e9774ac",
									"id": 988,
									"name": "TokensUnlocked",
									"nameLocation": "1031:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "1054:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1046:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPerWallet",
												"nameLocation": "1069:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1061:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUnlocked",
												"nameLocation": "1094:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1086:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:63:6"
									},
									"src": "1025:84:6"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "1187:239:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "1204:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "PUBLIC_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "1212:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1198:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1198:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "1198:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1008,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1282:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1274:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1274:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1274:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "LOCKED_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1289:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1005,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1268:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "1268:35:6"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1013,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1356:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1014,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1373:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1379:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1373:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1356:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1356:32:6"
											},
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1399:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1417:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1399:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "1399:19:6"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42424420546f6b656e",
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1151:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_967d686aff54b80901cec9b110d19a7eace42eeff791cc1cda6a0484e3c90564",
														"typeString": "literal_string \"BBD Token\""
													},
													"value": "BBD Token"
												},
												{
													"hexValue": "424244",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1164:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_62efa472771d791c354b2c18397e13fe87ea362a768ddf9ceed6c93a3ebbfefe",
														"typeString": "literal_string \"BBD\""
													},
													"value": "BBD"
												}
											],
											"id": 995,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 992,
												"name": "ERC20",
												"nameLocations": [
													"1145:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1145:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1145:25:6"
										},
										{
											"arguments": [
												{
													"id": 997,
													"name": "owner_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 990,
													"src": "1179:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 998,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 996,
												"name": "Ownable",
												"nameLocations": [
													"1171:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1171:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:15:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "1137:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1129:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:16:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:6"
									},
									"scope": 1375,
									"src": "1117:309:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "1477:1556:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1029,
																"name": "totalUnlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1496:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1030,
																"name": "LOCKED_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "1512:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1496:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e7320616c726561647920756e6c6f636b6564",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1527:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0",
																"typeString": "literal_string \"All tokens already unlocked\""
															},
															"value": "All tokens already unlocked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_483adfb9ad260f5b903df0bca424a8586b650b6a60b358095c574c86717161c0",
																"typeString": "literal_string \"All tokens already unlocked\""
															}
														],
														"id": 1028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1488:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "1488:69:6"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "monthsElapsed",
														"nameLocation": "1578:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "1570:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1037,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1595:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1601:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1595:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1039,
																	"name": "startTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "1613:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1595:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1041,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1594:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1631:7:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "1594:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1570:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1046,
																"name": "monthsElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1657:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1047,
																"name": "lastUnlockMonth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1673:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1657:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206e6577206d6f6e746820746f20756e6c6f636b",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1690:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c",
																"typeString": "literal_string \"No new month to unlock\""
															},
															"value": "No new month to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4bb5b15b29321ecf9fa1a9fc5793ab1c32ac24b01ff69bb16822685508eaa8c",
																"typeString": "literal_string \"No new month to unlock\""
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1649:66:6"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "tokensToUnlock",
														"nameLocation": "1736:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "1728:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1728:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"hexValue": "30",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1753:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1728:26:6"
											},
											{
												"body": {
													"id": 1120,
													"nodeType": "Block",
													"src": "1830:419:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1068,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "1849:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1854:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "1849:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1081,
																		"name": "m",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "1954:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "36",
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1959:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6_by_1",
																			"typeString": "int_const 6"
																		},
																		"value": "6"
																	},
																	"src": "1954:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1094,
																			"name": "m",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1057,
																			"src": "2056:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "39",
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2061:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_9_by_1",
																				"typeString": "int_const 9"
																			},
																			"value": "9"
																		},
																		"src": "2056:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1116,
																		"nodeType": "Block",
																		"src": "2154:84:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1107,
																						"name": "tokensToUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1053,
																						"src": "2173:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1110,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1108,
																										"name": "LOCKED_SUPPLY",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 956,
																										"src": "2192:13:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "33",
																										"id": 1109,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2208:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_3_by_1",
																											"typeString": "int_const 3"
																										},
																										"value": "3"
																									},
																									"src": "2192:17:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1111,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "2191:19:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2213:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "2191:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2173:43:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1115,
																				"nodeType": "ExpressionStatement",
																				"src": "2173:43:6"
																			}
																		]
																	},
																	"id": 1117,
																	"nodeType": "IfStatement",
																	"src": "2052:186:6",
																	"trueBody": {
																		"id": 1106,
																		"nodeType": "Block",
																		"src": "2064:84:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 1104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1097,
																						"name": "tokensToUnlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1053,
																						"src": "2083:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1100,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 1098,
																										"name": "LOCKED_SUPPLY",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 956,
																										"src": "2102:13:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "32",
																										"id": 1099,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2118:1:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "2102:17:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1101,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "2101:19:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 1102,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2123:3:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "2101:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2083:43:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1105,
																				"nodeType": "ExpressionStatement",
																				"src": "2083:43:6"
																			}
																		]
																	}
																},
																"id": 1118,
																"nodeType": "IfStatement",
																"src": "1950:288:6",
																"trueBody": {
																	"id": 1093,
																	"nodeType": "Block",
																	"src": "1962:84:6",
																	"statements": [
																		{
																			"expression": {
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1084,
																					"name": "tokensToUnlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "1981:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1087,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1085,
																									"name": "LOCKED_SUPPLY",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 956,
																									"src": "2000:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1086,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2016:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "2000:17:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1088,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1999:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 1089,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2021:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "1999:25:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1981:43:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1092,
																			"nodeType": "ExpressionStatement",
																			"src": "1981:43:6"
																		}
																	]
																}
															},
															"id": 1119,
															"nodeType": "IfStatement",
															"src": "1845:393:6",
															"trueBody": {
																"id": 1080,
																"nodeType": "Block",
																"src": "1857:87:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1071,
																				"name": "tokensToUnlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "1876:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1074,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1072,
																								"name": "LOCKED_SUPPLY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 956,
																								"src": "1895:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "35",
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1911:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "1895:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1075,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1894:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1916:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "1894:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1876:44:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1079,
																		"nodeType": "ExpressionStatement",
																		"src": "1876:44:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1805:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1063,
														"name": "monthsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1810:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1805:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"initializationExpression": {
													"assignments": [
														1057
													],
													"declarations": [
														{
															"constant": false,
															"id": 1057,
															"mutability": "mutable",
															"name": "m",
															"nameLocation": "1780:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1121,
															"src": "1772:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1056,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1772:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1061,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1058,
															"name": "lastUnlockMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "1784:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1802:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1784:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1772:31:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1825:3:6",
														"subExpression": {
															"id": 1065,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1067,
													"nodeType": "ExpressionStatement",
													"src": "1825:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1767:482:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1122,
															"name": "tokensToUnlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "2265:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1123,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2265:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1125,
														"name": "LOCKED_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2298:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2265:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "2261:161:6",
												"trueBody": {
													"id": 1133,
													"nodeType": "Block",
													"src": "2313:109:6",
													"statements": [
														{
															"expression": {
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1127,
																	"name": "tokensToUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "2328:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1128,
																		"name": "LOCKED_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "2345:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1129,
																		"name": "totalUnlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "2361:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2345:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2328:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1132,
															"nodeType": "ExpressionStatement",
															"src": "2328:46:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1136,
																"name": "tokensToUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "2442:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2459:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2442:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20756e6c6f636b",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2462:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375",
																"typeString": "literal_string \"Nothing to unlock\""
															},
															"value": "Nothing to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c40903544bf1e1901da5e39359f432f9a90489ef452fab5e4e5bd5abae828375",
																"typeString": "literal_string \"Nothing to unlock\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2434:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2434:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2434:48:6"
											},
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1142,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2495:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1143,
														"name": "monthsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2513:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2495:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2495:31:6"
											},
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1146,
														"name": "totalUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2537:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1147,
														"name": "tokensToUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "2554:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2537:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2537:31:6"
											},
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "share",
														"nameLocation": "2589:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "2581:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1155,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "tokensToUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "2597:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "36",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2614:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "2597:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2581:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1159,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2646:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2638:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1157,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2638:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2638:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "liquidityListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "2653:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2671:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2628:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2628:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "2628:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1168,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2706:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2698:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2698:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2698:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "gameTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2713:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2727:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2688:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2688:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2688:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1177,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2762:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2754:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2754:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2754:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "marketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2769:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2744:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "2744:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2815:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2807:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2807:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "2822:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2837:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2797:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2797:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "2797:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1195,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2872:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2864:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2864:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2864:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "referralBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "2879:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2894:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2854:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2854:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1204,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2929:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BBDToken_$1375",
																		"typeString": "contract BBDToken"
																	}
																],
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2921:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2921:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2921:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "awardBonus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2936:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2948:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1201,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2911:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2911:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2911:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1211,
															"name": "lastUnlockMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2987:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1212,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3004:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1213,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "3011:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1210,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2972:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2972:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "EmitStatement",
												"src": "2967:58:6"
											}
										]
									},
									"functionSelector": "f968f493",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1025,
												"name": "onlyOwner",
												"nameLocations": [
													"1467:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1467:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1467:9:6"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "1443:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:6"
									},
									"scope": 1375,
									"src": "1434:1599:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3130:403:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1227,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "3149:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3158:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3149:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1230,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "3163:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "36",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3172:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_6_by_1",
																		"typeString": "int_const 6"
																	},
																	"value": "6"
																},
																"src": "3163:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3149:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e646578",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3175:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															},
															"value": "Invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3141:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3141:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "3141:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1237,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "3207:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3216:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3207:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1244,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "3267:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3276:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3267:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "3323:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "33",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "3323:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1258,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "3376:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3385:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3376:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1265,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "3433:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3442:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "3433:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1272,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "3490:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3499:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "3490:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1279,
																	"nodeType": "IfStatement",
																	"src": "3487:38:6",
																	"trueBody": {
																		"expression": {
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1275,
																				"name": "awardBonus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 980,
																				"src": "3502:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1276,
																				"name": "newAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1221,
																				"src": "3515:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3502:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1278,
																		"nodeType": "ExpressionStatement",
																		"src": "3502:23:6"
																	}
																},
																"id": 1280,
																"nodeType": "IfStatement",
																"src": "3430:95:6",
																"trueBody": {
																	"expression": {
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1268,
																			"name": "referralBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "3445:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1269,
																			"name": "newAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "3461:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3445:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1271,
																	"nodeType": "ExpressionStatement",
																	"src": "3445:26:6"
																}
															},
															"id": 1281,
															"nodeType": "IfStatement",
															"src": "3373:152:6",
															"trueBody": {
																"expression": {
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1261,
																		"name": "stakingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "3388:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1262,
																		"name": "newAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "3404:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3388:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1264,
																"nodeType": "ExpressionStatement",
																"src": "3388:26:6"
															}
														},
														"id": 1282,
														"nodeType": "IfStatement",
														"src": "3320:205:6",
														"trueBody": {
															"expression": {
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1254,
																	"name": "marketing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "3335:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1255,
																	"name": "newAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "3347:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3335:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "3335:22:6"
														}
													},
													"id": 1283,
													"nodeType": "IfStatement",
													"src": "3264:261:6",
													"trueBody": {
														"expression": {
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1247,
																"name": "gameTreasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "3279:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1248,
																"name": "newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "3294:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3279:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1250,
														"nodeType": "ExpressionStatement",
														"src": "3279:25:6"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "3204:321:6",
												"trueBody": {
													"expression": {
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1240,
															"name": "liquidityListing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3219:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1241,
															"name": "newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "3238:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3219:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1243,
													"nodeType": "ExpressionStatement",
													"src": "3219:29:6"
												}
											}
										]
									},
									"functionSelector": "2be8781f",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1223,
												"name": "onlyOwner",
												"nameLocations": [
													"3120:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3120:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3120:9:6"
										}
									],
									"name": "updateDistributionAddress",
									"nameLocation": "3050:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3084:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3076:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3076:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "3099:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3091:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:35:6"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3130:0:6"
									},
									"scope": 1375,
									"src": "3041:492:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "3648:565:6",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "3667:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "3659:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3659:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1297,
														"name": "lastUnlockMonth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "3671:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3689:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3671:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3659:31:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "3707:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "33",
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3707:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1314,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "3792:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "36",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3797:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "3792:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1327,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "3876:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39",
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3881:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "3876:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1349,
															"nodeType": "Block",
															"src": "3956:66:6",
															"statements": [
																{
																	"expression": {
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "amountTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "3971:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1341,
																							"name": "LOCKED_SUPPLY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "3986:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "33",
																							"id": 1342,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4002:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3_by_1",
																								"typeString": "int_const 3"
																							},
																							"value": "3"
																						},
																						"src": "3986:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1344,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3985:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4007:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "3985:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3971:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1348,
																	"nodeType": "ExpressionStatement",
																	"src": "3971:39:6"
																}
															]
														},
														"id": 1350,
														"nodeType": "IfStatement",
														"src": "3872:150:6",
														"trueBody": {
															"id": 1339,
															"nodeType": "Block",
															"src": "3884:66:6",
															"statements": [
																{
																	"expression": {
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "amountTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "3899:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1333,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1331,
																							"name": "LOCKED_SUPPLY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 956,
																							"src": "3914:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 1332,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3930:1:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "3914:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1334,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3913:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3935:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "3913:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3899:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1338,
																	"nodeType": "ExpressionStatement",
																	"src": "3899:39:6"
																}
															]
														}
													},
													"id": 1351,
													"nodeType": "IfStatement",
													"src": "3788:234:6",
													"trueBody": {
														"id": 1326,
														"nodeType": "Block",
														"src": "3800:66:6",
														"statements": [
															{
																"expression": {
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1317,
																		"name": "amountTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "3815:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1318,
																						"name": "LOCKED_SUPPLY",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 956,
																						"src": "3830:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3846:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3830:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1321,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3829:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3851:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "3829:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3815:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1325,
																"nodeType": "ExpressionStatement",
																"src": "3815:39:6"
															}
														]
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "3703:319:6",
												"trueBody": {
													"id": 1313,
													"nodeType": "Block",
													"src": "3715:67:6",
													"statements": [
														{
															"expression": {
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1304,
																	"name": "amountTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "3730:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1305,
																					"name": "LOCKED_SUPPLY",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "3745:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3761:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "3745:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1308,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3744:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3766:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "3744:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3730:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1312,
															"nodeType": "ExpressionStatement",
															"src": "3730:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1353,
															"name": "amountTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4038:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1354,
															"name": "totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "4052:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4038:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1356,
														"name": "LOCKED_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4068:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4038:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1365,
												"nodeType": "IfStatement",
												"src": "4034:119:6",
												"trueBody": {
													"id": 1364,
													"nodeType": "Block",
													"src": "4083:70:6",
													"statements": [
														{
															"expression": {
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1358,
																	"name": "amountTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "4098:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1359,
																		"name": "LOCKED_SUPPLY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "4112:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1360,
																		"name": "totalUnlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "4128:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4112:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4098:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1363,
															"nodeType": "ExpressionStatement",
															"src": "4098:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1366,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "4173:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1367,
															"name": "amountTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4176:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1368,
																"name": "amountTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "4189:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "36",
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4203:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															},
															"src": "4189:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1371,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4172:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1372,
												"nodeType": "Return",
												"src": "4165:40:6"
											}
										]
									},
									"functionSelector": "be381b85",
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextUnlockInfo",
									"nameLocation": "3550:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3567:2:6"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "3601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "3593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "amountTotal",
												"nameLocation": "3616:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "3608:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "perWallet",
												"nameLocation": "3637:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "3629:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3592:55:6"
									},
									"scope": 1375,
									"src": "3541:672:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1376,
							"src": "174:4042:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								988
							]
						}
					],
					"src": "33:4185:6"
				},
				"id": 6
			}
		}
	}
}